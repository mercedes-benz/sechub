# SPDX-License-Identifier: MIT

apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-ui
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 49%
  selector:
    matchLabels:
      name: web-ui
  template:
    metadata:
      labels:
        name: web-ui
{{- if .Values.templateMetadataAnnotations }}
      annotations:
        {{ .Values.templateMetadataAnnotations | indent 8 | trim }}
{{- end }}
    spec:
      securityContext:
        runAsUser: 4242  # uid of the application user. (should be same as in the Dockerfile)
        runAsGroup: 4242 # gid of the application group. (should be same as in the Dockerfile)
        fsGroup: 4242    # This gid has write access to the mounted volumes.
      volumes:
{{- if .Values.configMaps.enabled }}
        - name: configmap-background-image
          configMap:
            name: configmap-login-background-image
        - name: configmap-main-css
          configMap:
            name: configmap-login-main-css
{{- end }}
{{- if ne .Values.web_ui.ssl.keystoreAlias "undefined" }}
        - name: secret-web-ui-ssl-volume
          secret:
            secretName: secret-web-ui-ssl
{{- end }}
{{- if .Values.go_mmproxy.enabled }}
      initContainers:
      - name: setup
        image: "{{ .Values.go_mmproxy.image }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
        - "/bin/sh"
        - "-cx"
        args:
        - |
          /sbin/ip rule add from 127.0.0.1/8 iif lo table 123
          /sbin/ip route add local 0.0.0.0/0 dev lo table 123
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
{{- end }}
      containers:
{{- if .Values.go_mmproxy.enabled }}
      # go-mmproxy sidecar container
      - name: go-mmproxy
        image: "{{ .Values.go_mmproxy.image }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - containerPort: 8080
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        args:
        - "-v=0"           # loglevel 0 - no logging ; 1 - log errors ; 2 - log all state changes
        - "-l"             # listen
        - "0.0.0.0:8080"   # on port 8080
        - "-4"             # tcp v4
        - "127.0.0.1:4443" # forward to SecHub WebUI container (localhost port 4443)
{{- end }}

        # Web-UI container
      - name: web-ui
        image: {{ .Values.image }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
        - name: web-ui-https
          containerPort: 4443
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /health
            port: web-ui-https
          failureThreshold: 2
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
{{- if .Values.configMaps.enabled }}
          - mountPath: /sechub-web-ui/web-resources/static/background_image_login.jpg
            name: configmap-background-image
            subPath: background_image_login.jpg
          - mountPath: /sechub-web-ui/web-resources/static/main.css
            name: configmap-main-css
            subPath: main.css
{{- end }}
{{- if ne .Values.web_ui.ssl.keystoreAlias "undefined" }}
          - mountPath: /sechub-web-ui/secrets/secret-ssl
            name: secret-web-ui-ssl-volume
{{- end }}
        env:
          - name: DEPLOYMENT_COMMENT
            value: "{{ .Values.deploymentComment }}"
          - name: WEB_UI_SSL_KEYSTORE_ALIAS
            value: "{{ .Values.web_ui.ssl.keystoreAlias }}"
          - name: SPRING_WEB_RESOURCES_STATICLOCATIONS
            value: "{{ .Values.web_ui.spring.staticLocations }}"
{{- if .Values.configMaps.enabled }}
          - name: CONFIG_MAPS_ENABLED
            value: "true"
{{- end }}
        resources:
          # min container memory
          requests:
            memory: "{{ .Values.resources.requests.memory }}"
          # max container memory
          limits:
            memory: "{{ .Values.resources.limits.memory }}"
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ .Values.imagePullSecrets | indent 8 | trim }}
{{- end }}
