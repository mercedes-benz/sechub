' SPDX-License-Identifier: MIT
@startuml

'Hide empty parts:
hide empty fields
hide empty methods

'You can find more examles at https://plantuml.com/class-diagram

'skinparam linetype ortho
skinparam linetype polyline

database DB {

}

database EventBus{
}

package com.mercedesbenz.sechub.commons.encryption as common_encrypt {
    
    class PersistentCipherFactory
    class PersistentCipher
    class EncryptionSupport
}

package com.mercedesbenz.sechub.domain.administration {
    package encryption as adm_encryption{
        class EncryptionAdministrationRestController
        class EncryptionRotationService #darkorange
    }
}

package com.mercedesbenz.sechub.domain.schedule{

    package job as schedule_job {
        class ScheduleSecHubJob {
            byte[] getEncryptedConfiguration()
        }
        
        class SecHubJobFactory {
        
        }
         
        class ScheduleSecHubJobEncryptionUpdateService #dodgerblue {
            updateEncryptionData(int blockSizeToUpdate) 
        }
        
        class SecHubConfigurationModelAccess {
            resolveUnencryptedConfiguration(ScheduleSecHubJob job)
        }
        
        class SecHubJobRepository
        
    }
    
    package encryption as schedule_encryption {
    
        class ScheduleRefreshEncryptionServiceSetupTriggerService #mediumpurple {
            triggerEncryptionSetupRefresh()
        }
         
        class ScheduleRotateDataEncryptionTriggerService #dodgerblue {
            triggerUpdateOfEncryptedData()
        }
    
        class ScheduleEncryptionService {
            applicationStarted()
            refreshEncryptionPoolAndLatestIdIfNecessary()
            encryptWithLatestCipher()
            String decryptToString(byte[] encrypted, Long encryptionPoolId, InitializationVector initialVector)
            ScheduleEncryptionResult rotateEncryption(byte[] data, Long oldCipherPoolId, InitializationVector oldInitialVector)
        }
        
        class ScheduleCipherPoolData {
        }
        
        class ScheduleCipherPoolDataRepository {
            
        }
        
        class ScheduleEncryptionPool #mediumpurple {
           PersistentCipher getCipherForPoolId(Long poolId)
        }
        
        class ScheduleEncryptionPoolFactory #mediumpurple {
            
        }
        
        class ScheduleLatestCipherPoolIdResolver
        
        class ScheduleEncryptionRotationService #darkorange
    
   
    }
    
}


ScheduleRefreshEncryptionServiceSetupTriggerService --> ScheduleEncryptionService

ScheduleEncryptionService -> ScheduleLatestCipherPoolIdResolver: uses
ScheduleEncryptionService o-- ScheduleEncryptionPool

ScheduleEncryptionService -> EncryptionSupport: uses
ScheduleEncryptionService -> ScheduleEncryptionPoolFactory: uses

ScheduleEncryptionPoolFactory --> ScheduleEncryptionPool : creates
PersistentCipherFactory -> PersistentCipher: creates
ScheduleEncryptionPoolFactory -> PersistentCipherFactory: uses
ScheduleLatestCipherPoolIdResolver  -> ScheduleCipherPoolDataRepository
ScheduleEncryptionPoolFactory -- ScheduleCipherPoolDataRepository: uses
ScheduleEncryptionPoolFactory -- ScheduleCipherPoolData

ScheduleEncryptionPool -- PersistentCipher

ScheduleCipherPoolData --> DB
ScheduleSecHubJob --> DB
ScheduleCipherPoolDataRepository --> ScheduleCipherPoolData

SecHubConfigurationModelAccess -> ScheduleEncryptionService : uses


SecHubConfigurationModelAccess -> ScheduleSecHubJob

SecHubJobFactory -> ScheduleSecHubJob: creates
SecHubJobFactory -> ScheduleEncryptionService : uses

ScheduleRotateDataEncryptionTriggerService -> ScheduleSecHubJobEncryptionUpdateService: calls
ScheduleSecHubJobEncryptionUpdateService -> ScheduleEncryptionService


ScheduleSecHubJobEncryptionUpdateService --> SecHubJobRepository
SecHubJobRepository --> ScheduleSecHubJob  


EncryptionAdministrationRestController  --> EncryptionRotationService
EncryptionRotationService  --> EventBus
EventBus --> ScheduleEncryptionRotationService 

ScheduleEncryptionRotationService --> ScheduleCipherPoolData : creates
'ScheduleEncryptionRotationService --> ScheduleCipherPoolDataRepository
 
@enduml
