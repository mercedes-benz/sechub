// SPDX-License-Identifier: MIT
package com.mercedesbenz.sechub.domain.scan.product.sereco;

import com.mercedesbenz.sechub.commons.model.ScanType;
import com.mercedesbenz.sechub.sereco.metadata.SerecoCodeCallStackElement;
import com.mercedesbenz.sechub.sereco.metadata.SerecoVulnerability;

public class TestSerecoVulnerabilityBuilder {
    private SerecoVulnerability vulnerability;
    private int columnNr;
    private int lineNr;
    private int locationNr;

    public static TestSerecoVulnerabilityBuilder builder() {
        return new TestSerecoVulnerabilityBuilder();
    }

    private TestSerecoVulnerabilityBuilder() {
        vulnerability = new SerecoVulnerability();
    }

    public SerecoVulnerability build() {
        return vulnerability;
    }

    public TestSerecoVulnerabilityBuilder name(String name) {
        vulnerability.setType(name);
        return this;
    }

    public TestSerecoVulnerabilityBuilder cwe(int cweId) {
        vulnerability.getClassification().setCwe("" + cweId);
        return this;
    }

    public SerecoCodeScanVulnerability codeScan() {
        vulnerability.setScanType(ScanType.CODE_SCAN);
        SerecoCodeCallStackElement element1 = new SerecoCodeCallStackElement();
        vulnerability.setCode(element1);
        return new SerecoCodeScanVulnerability(element1);
    }

    public SerecoWebScanVulnerability webScan() {
        vulnerability.setScanType(ScanType.WEB_SCAN);
        return new SerecoWebScanVulnerability();
    }

    public class SerecoWebScanVulnerability {
        public TestSerecoVulnerabilityBuilder end() {
            return TestSerecoVulnerabilityBuilder.this;
        }
    }

    public SerecoInfraScanVulnerability infraScan() {
        vulnerability.setScanType(ScanType.INFRA_SCAN);
        return new SerecoInfraScanVulnerability();
    }

    public class SerecoInfraScanVulnerability {
        public TestSerecoVulnerabilityBuilder end() {
            return TestSerecoVulnerabilityBuilder.this;
        }
    }

    public class SerecoCodeScanVulnerability {

        private SerecoCodeCallStackElement element;

        public SerecoCodeScanVulnerability(SerecoCodeCallStackElement element1) {
            this.element = element1;
            column(columnNr++);
            line(lineNr++);
            location("location_" + (locationNr++));
        }

        public SerecoCodeScanVulnerability location(String location) {
            this.element.setLocation(location);
            return this;
        }

        public SerecoCodeScanVulnerability relevantPart(String relevant) {
            this.element.setRelevantPart(relevant);
            return this;
        }

        public SerecoCodeScanVulnerability source(String source) {
            this.element.setSource(source);
            return this;
        }

        public SerecoCodeScanVulnerability column(int column) {
            this.element.setColumn(column);
            return this;
        }

        public SerecoCodeScanVulnerability line(int line) {
            this.element.setLine(line);
            return this;
        }

        public SerecoCodeScanVulnerability callsCode() {
            SerecoCodeCallStackElement element2 = new SerecoCodeCallStackElement();
            element.setCalls(element2);
            return new SerecoCodeScanVulnerability(element2);
        }

        public TestSerecoVulnerabilityBuilder end() {
            return TestSerecoVulnerabilityBuilder.this;
        }

    }

}