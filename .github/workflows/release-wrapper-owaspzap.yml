# SPDX-License-Identifier: MIT
name: Release wrapper for OWASP-ZAP

on:
  workflow_dispatch:
    inputs:
      actor-email:
        description: Insert your email address here. It will be used in the generated pull requests
        required: true
      owaspzap-wrapper-version:
        description: OWASP-ZAP Wrapper Version (e.g. 1.0.0)
        required: true
      owaspzap-wrapper-milestone-number:
        description: OWASP-ZAP Wrapper Milestone number (e.g. 90)
        required: true

jobs:
  release-version:
    name: Create OWASP-ZAP Wrapper release
    runs-on: ubuntu-latest
    steps:
      - name: Show Inputs
        run: |
          echo "actor-email: '${{ inputs.actor-email }}'"
          echo "OWASP-ZAP Wrapper '${{ inputs.owaspzap-wrapper-version }}' - Milestone '${{ inputs.owaspzap-wrapper-milestone-number }}'"

      - name: Checkout branch master
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: master

      # Create temporary local tags, so we build documentation for this tag...
      # The final tag on git server side will be done automatically by the release when the draft is saved as "real" release
      - name: Tag OWASP-ZAP Wrapper version v${{ inputs.owaspzap-wrapper-version }}-owaspzap-wrapper (temporarily)
        run: git tag v${{ inputs.owaspzap-wrapper-version }}-owaspzap-wrapper

      # ----------------------
      # Setup + Caching
      # ----------------------
      - name: Install required packages
        run: sudo apt-get -y install hub

      - name: Set up JDK 17
        uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6
        with:
          cache-read-only: false

      # ----------------------
      # Create a pull request if license headers are missing
      # ----------------------
      - name: run apply-headers.sh
        id: apply-headers
        run: |
          git config user.name "$GITHUB_TRIGGERING_ACTOR (via github-actions)"
          git config user.email "${{ inputs.actor-email }}"
          ./apply-headers.sh
          git commit -am "SPDX headers added by SecHub release job @github-actions" || true
          COMMITS=`git log --oneline --branches --not --remotes`
          echo "commits=$COMMITS" >> $GITHUB_OUTPUT

      - name: Create a pull request for SPDX license headers
        id: pr_spdx_headers
        if: steps.apply-headers.outputs.commits != ''
        uses: peter-evans/create-pull-request@5e914681df9dc83aa4e4905692ca88beb2f9e91f
        with:
          branch: release-spdx-headers
          branch-suffix: short-commit-hash
          delete-branch: true
          title: '0 - Before owaspzap-wrapper release: Add missing SPDX license headers [auto-generated]'
          body: |
            Auto-generated by Github Actions owaspzap-wrapper release job.

            -> Please review and merge **before** publishing the owaspzap-wrapper release.

      - name: Print PR infos
        if: steps.apply-headers.outputs.commits != ''
        run: |
          echo "Pull Request Number - ${{ steps.pr_spdx_headers.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.pr_spdx_headers.outputs.pull-request-url }}"

      - name: Switch back to master branch
        run: git checkout master

      # -----------------------------------------
      # Build SecHub OWASP-ZAP Wrapper
      # -----------------------------------------
      - name: Build OWASP-ZAP Wrapper
        run: ./gradlew buildWrapperOwaspZap

      # -----------------------------------------
      # Upload build artifacts
      # -----------------------------------------
      - name: Inspect GIT status
        if: always()
        run: |
          mkdir build/reports -p
          git status > build/reports/git-status.txt

      - name: Archive GIT status
        if: always()
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
        with:
          name: git-status.txt
          path: build/reports/git-status.txt
          retention-days: 14

      - name: Archive OWASP-ZAP Wrapper libs directory
        if: always()
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3
        with:
          name: sechub-wrapper-owasp-zap
          path: sechub-wrapper-owasp-zap/build/libs
          retention-days: 14

      - name: Switch back to master branch
        run: git checkout master

      # -----------------------------------------
      # Assert releaseable, so no dirty flags on releases
      # even when all artifact creation parts are done!
      # -----------------------------------------
      - name: Assert releasable
        run: ./gradlew assertReleaseable

      # ******************************************
      # OWASP-ZAP Wrapper release
      # ******************************************
      - name: Prepare OWASP-ZAP Wrapper ${{ inputs.owaspzap-wrapper-version }} release artifacts
        shell: bash
        run: |
          cd sechub-wrapper-owasp-zap/build/libs/
          sha256sum sechub-pds-wrapperowaspzap-${{ inputs.owaspzap-wrapper-version }}.jar > sechub-pds-wrapperowaspzap-${{ inputs.owaspzap-wrapper-version }}.jar.sha256sum

      - name: Create OWASP-ZAP Wrapper ${{ inputs.owaspzap-wrapper-version }} release draft
        shell: bash
        run: |
          assets=()
          echo "# Adding release artifacts"
          cd sechub-wrapper-owasp-zap/build/libs/
          for asset in sechub-pds-wrapperowaspzap-${{ inputs.owaspzap-wrapper-version }}.jar* ; do
            filename=`basename "$asset"`
            echo "# - $filename"
            assets+=("-a" "${asset}#${filename}")
          done
          # Define release data
          tag_name="v${{ inputs.owaspzap-wrapper-version }}-owaspzap-wrapper"
          release_title="OWASP-ZAP Wrapper Version ${{ inputs.owaspzap-wrapper-version }}"
          release_message="Changes in this Release
          - Some minor changes on OWASP-ZAP Wrapper implementation"
          release_footer="For more details please look at [Milestone ${{inputs.owaspzap-wrapper-milestone-number}}]( https://github.com/mercedes-benz/sechub/milestone/${{inputs.owaspzap-wrapper-milestone-number}}?closed=1)"
          echo "# Create release draft \"$release_title\" on github"
          hub release create --draft "${assets[@]}" -m "$release_title" -m "$release_message" -m "$release_footer" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # -----------------------------------------
      # Create release issue
      # -----------------------------------------
      - name: Create OWASP-ZAP Wrapper ${{ inputs.owaspzap-wrapper-version }} release issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Release OWASP-ZAP Wrapper ${{ inputs.owaspzap-wrapper-version }}
          body: |
            See [Milestone ${{inputs.owaspzap-wrapper-milestone-number}}]( https://github.com/mercedes-benz/sechub/milestone/${{inputs.owaspzap-wrapper-milestone-number}}?closed=1) for details.

            Please close this issue after the release.
          milestone: ${{ inputs.owaspzap-wrapper-milestone-number }}

      # -----------------------------------------
      # Create a pull request for merging back `master` into `develop`
      # -----------------------------------------
      - name: pull-request master to develop
        id: pr_master_to_develop
        continue-on-error: true
        uses: repo-sync/pull-request@7e79a9f5dc3ad0ce53138f01df2fad14a04831c5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: "master"
          destination_branch: "develop"
          pr_allow_empty: true  # should allow an empty PR, but seems not to work
          pr_title: '2 - After OWASP-ZAP Wrapper release: Merge master back into develop [auto-generated]'
          pr_body: |
            Merge master branch back into develop

            -> Please merge **after** the release has been published.

      - name: Print PR infos if PR was created
        if: steps.pr_master_to_develop.outcome == 'success'
        run: |
          echo "Pull Request Number - ${{ steps.pr_master_to_develop.outputs.pr_number }}"
          echo "Pull Request URL - ${{ steps.pr_master_to_develop.outputs.pr_url }}"

      - name: Print info if no PR was created
        if: steps.pr_master_to_develop.outcome != 'success'
        run: |
          echo "Nothing to merge - no pull request necessary."
