# SPDX-License-Identifier: MIT
name: Publish libraries

on:
  workflow_dispatch:
    inputs:
      libraries-version:
        description: Libraries Version (e.g. 1.0.0)
        required: true
      milestone-number:
        description: Milestone number for release(s)
        default: 20
        required: true
jobs:
  release-version:
    name: Build, publish and release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
        with:
          ref: master
      # Create temporary local tags, so we build documentation for this tag...
      # The final tag on git server side will be automatically done by the release step at the end
      # automatically.
      - name: "Temporary tag libraries version: v${{ github.event.inputs.libraries-version }}-libraries"
        run: git tag v${{ github.event.inputs.libraries-version }}-libraries

      # Build
      - name: Set up JDK 17
        uses: actions/setup-java@387ac29b308b003ca37ba93a6cab5eb57c8f5f93
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/gradle-build-action@982da8e78c05368c70dac0351bb82647a9e9a5d2
        with:
          cache-read-only: false

      - name: Build
        run: ./gradlew clean build -x :sechub-integrationtest:test -x :sechub-cli:build

      - name: Create combined test report
        if: always()
        run: ./gradlew createCombinedTestReport

      # To identifiy parts not in git history and leading to "-dirty-$commitId" markers
      - name: Inspect GIT status
        if: always()
        run: git status > build/reports/git-status.txt

      # -----------------------------------------
      # Upload Build Artifacts (only test output)
      # -----------------------------------------
      - name: Archive combined test report
        if: always()
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8
        with:
          name: combined-sechub-testreport
          path: build/reports/combined-report
          retention-days: 14
      - name: Archive GIT status
        if: always()
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8
        with:
          name: git-status.txt
          path: build/reports/git-status.txt
          retention-days: 14

      # -----------------------------------------
      # Assert releaseable, so no dirty flags on releases
      # even when all artifact creation parts are done!
      # -----------------------------------------
      - name: Assert releasable
        run: ./gradlew assertReleaseable

      # **************************************************
      # Now let's create + publish a new LIBRARIES release
      # **************************************************

      # Publish to github packages
      - name: Publish
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token

      # Create release
      - name: Create libraries release
        id: create_libraries_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ github.event.inputs.libraries-version }}-libraries
          commitish: master
          release_name: Libraries Version ${{ github.event.inputs.libraries-version }}
          body: |
            New library artifacts can be found at https://github.com/mercedes-benz/sechub/packages

            For details about changes look at [Milestone ${{github.event.inputs.milestone-number}}]( https://github.com/mercedes-benz/sechub/milestone/${{github.event.inputs.milestone-number}}?closed=1)
          draft: false
          prerelease: false

