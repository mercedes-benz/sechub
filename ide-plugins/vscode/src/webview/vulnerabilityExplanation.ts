import { SecHubExplanationResponse } from 'sechub-openapi-ts-client';


export class VulnerabilityExplanation {

	public renderSecHubVulnerabilityExplanation(explanation: SecHubExplanationResponse): string {
		if (!explanation) {
			return '<p>No explanation available for the selected vulnerability.</p>';
		}

		const firstPart = `<h1>SecHub Vulnerability Explanation</h1>
		<h2>${explanation.findingExplanation?.title}</h2>
		<p>${explanation.findingExplanation?.content}</p>
		<h2>${explanation.potentialImpact?.title}</h2>
		<p>${explanation.potentialImpact?.content}</p>`

		let recommendationListHtml = `<p>No recommendations available.</p>`;
		if (explanation.recommendations) {
			recommendationListHtml = `
			<h2>Recommendations </h2>
			<ul>
				${explanation.recommendations.map(recommendation => `<li>${recommendation.title}: ${recommendation.content}</li>`).join('')}
			</ul>`;
		}

		let codeExampleHtml = `<p>No code examples available.</p>`;
		if (explanation.codeExample) {
			codeExampleHtml = `
			<h2>Code Example</h2>
			<h3>Vulnerable Example</h3>
			<code>${explanation.codeExample.vulnerableExample}</code>
			<h3>Secure Example</h3>
			<code>${explanation.codeExample.secureExample}</code>`
			if (explanation.codeExample.explanation) {
				codeExampleHtml += `<div>
				<h2>${explanation.codeExample.explanation.title}</h2>
				<p>${explanation.codeExample.explanation.content}</p>
				</div>`;
			}
		}

		let referencesHtml = `<p>No references available.</p>`;
		if(explanation.references) {
			referencesHtml = `
			<h2>References</h2>
			<ul>
				${explanation.references.map(ref => `<li><a href="${ref.url}" target="_blank">${ref.title}</a></li>`).join('')}
			</ul>`;
		}

		const footerHtml = `<div>
		<footer>
			<p>This explanation was generated by AI and may not be 100% accurate. Always verify with official documentation or security experts.</p>
		</footer>
		</div>`

		return `${firstPart}
		${recommendationListHtml}
		${codeExampleHtml}
		${referencesHtml}
		${footerHtml}`;
	}
}