// SPDX-License-Identifier: MIT
ext {
projectType = [

            goProjects: [
                    project(':sechub-cli'),
            ],
 			javaProjects: [
               project(':sechub-testframework'),
               project(':sechub-analyzer-cli'),
               project(':sechub-client-java'),
               project(':sechub-sarif'),
               project(':sechub-commons-core'),
               project(':sechub-commons-model'),
               project(':sechub-storage-core'),
               
            ],

            /* any project using spring parts but not already in other spring boot group must be defined here */
            springBootProjects: [
                    project(':sechub-shared-kernel-testframework'), //we use same mockito and junit as in other projects, so a spring boot project...
                    project(':sechub-scan-testframework'), //we use same mockito and junit as in other projects, so a spring boot project...
                    project(':sechub-integrationtest'),
                    project(':sechub-developertools'),
                    project(':sechub-test'),
                    
                    project(':sechub-storage-sharedvolume-spring'),
                    
                    /* next projects added as spring boot projects only, because otherwise we get the (older)
                       dependencies from aws as compiled projects in IDEs: */
                    project(':sechub-storage-s3-aws'),
                    project(':sechub-storage-s3-aws-test'),
            ],

            /* adapter projects - have simple spring dependencies, but know only sechub-adapter as base */
            springBootAdapterProjects: [
                    project(':sechub-adapter'),
                    project(':sechub-adapter-netsparker'),
                    project(':sechub-adapter-nessus'),
                    project(':sechub-adapter-checkmarx'),
                    project(':sechub-adapter-pds'),
            ],
            
             /* PDS projects, all contained inside product delegation server */
            springBootPDSProjects: [
                    project(':sechub-pds'),
                    project(':sechub-pds-core'),
            ],
            /* server projects, all contained inside server */
            springBootSecHubServerProjects: [
                    project(':sechub-server'),
                    project(':sechub-server-core'),
                    project(':sechub-schedule'),
                    project(':sechub-authorization'),
                    project(':sechub-administration'),
                    project(':sechub-notification'),
                    project(':sechub-sereco'),
                    project(':sechub-shared-kernel'),

                    project(':sechub-scan'),
                    project(':sechub-scan-product-netsparker'),
                    project(':sechub-scan-product-nessus'),
                    project(':sechub-scan-product-checkmarx'),
                    project(':sechub-scan-product-sereco'),
                    project(':sechub-scan-product-pds'),
            ],
            
            bootableSpringApplicationProjects:[
                   project(':sechub-server'),
                   project(':sechub-pds'),
            ],

            /* documentation projects */
            springDocProjects: [
                    project(':sechub-doc'), // we use this project for doc generation so must be java and also with spring dependencies

            ],

//            springBootFrontentProjects: [
//                    project(':sechub-frontend-user'),
//                    project(':sechub-frontend-admin'),
//            ],

            /* 'eclipseProjects' defines projects which will be automatically generated by eclipse gradle task
             *  all spring projects are automatically added to this and must NOT be added manually!
             */
            eclipseProjects: [
                    project(':sechub-doc'),
                    project(':sechub-other'),
                    project(':sechub-client-java'),
            ],

            asciiDoctorProjects: [
                    project(':sechub-doc'),
            ]
    ]
}
/* dynamically define java projects */
projectType.springBootProjects.addAll(projectType.springBootSecHubServerProjects)
projectType.springBootProjects.addAll(projectType.springBootPDSProjects)
projectType.springBootProjects.addAll(projectType.springBootAdapterProjects)
projectType.springBootProjects.addAll(projectType.springDocProjects)
//projectType.springBootProjects.addAll(projectType.springBootFrontentProjects)

projectType.javaProjects.addAll(projectType.springBootProjects)

/* dynamically add all java projects as eclipse projects:*/
projectType.eclipseProjects.addAll(projectType.javaProjects)
projectType.eclipseProjects.addAll(projectType.goProjects)
