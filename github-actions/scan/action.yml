# SPDX-License-Identifier: MIT

name: sechub scan
description: 'a GitHub actions wrapper for SecHub security scan.'
inputs:
  config-path:
    description: 'Path to a custom SecHub configuration file. If not set, a temporary file will be generated using the input parameters.'
    required: false
  url:
    description: 'SecHub server URL (can alternatively provided via env variable or config file)'
    required: false
  api-token:
    description: 'SecHub API Token (can alternatively provided via env variable)'
    required: false
  user:
    description: 'SecHub user ID (can alternatively provided via env variable or config file)'
    required: false
  project-name:
    description: 'SecHub project name (can alternatively provided via env variable or config file)'
    required: false
  version:
    description: 'Which version of the SecHub client to use'
    required: false
    default: 'latest'
  add-scm-history:
    description: 'Whether scm history should be uploaded or not'
    required: false
    default: false
  scan-types:
    description: 'Scan types to use for generated SecHub configuration file (ignored in the case of a custom configuration file). Supported types are: codeScan, licenseScan and secretScan. Can be combined by ,'
    required: false
    default: 'codeScan'
  content-type:
    description: 'Content type to use for generated SecHub configuration file (ignored in the case of a custom configuration file). Supported types: source, binaries. Cannot be combined.'
    required: false
    default: 'source'
  include-folders:
    description: 'A list of folders to include (ignored in the case of a custom configuration file)'
    required: false
    default: '.'
  exclude-folders:
    description: 'A list of folders to exclude (ignored in the case of a custom configuration file)'
    required: false
  report-formats:
    description: 'A list of report formats to fetch'
    required: false
    default: 'html,json'
  trust-all:
    description: 'Trust unknown HTTPS certificates'
    required: false
    default: false
  debug:
    description: 'SecHub debug output on/off'
    required: false
    default: ${{ runner.debug == 1 }}
  fail-job-with-findings:
    description: 'Job will be marked as failed if SecHub finds something'
    required: false
    default: true

outputs:
  scan-trafficlight:
    description: 'Color of the traffic light reported by SecHub'
  scan-findings-count:
    description: 'Total number of findings reported by SecHub'
  scan-findings-high:
    description: 'Number of high findings reported by SecHub'
  scan-findings-medium:
    description: 'Number of medium findings reported by SecHub'
  scan-findings-low:
    description: 'Number of low findings reported by SecHub'
  scan-readable-summary:
    description: 'Readable summary of the findings reported by SecHub'

runs:
  using: composite
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Cache SecHub GitHub Actions Scan Folder
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/sechub/github-actions/scan
        key: ${{ runner.os }}-sechub-github-actions-scan-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-sechub-github-actions-scan-
          ${{ runner.os }}-

    - name: Checkout SecHub GitHub Actions Scan with Git
      run: |
        git clone --no-checkout https://github.com/mercedes-benz/sechub.git
        cd sechub
        git config core.sparseCheckout true
             
        echo "github-actions/scan/" >> .git/info/sparse-checkout
        
        git checkout gha_feature-3213-build-index-js-in-workflow
      shell: bash

    - name: Npm Install
      run: npm install
      working-directory: ${{ github.workspace }}/sechub/github-actions/scan
      shell: bash

    - name: Cache Node Modules
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/sechub/github-actions/scan/node_modules
        key: ${{ runner.os }}-sechub-github-actions-scan-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-sechub-github-actions-scan-node-${{ hashFiles('**/package-lock.json') }}
          ${{ runner.os }}-sechub-github-actions-scan-node-
          ${{ runner.os }}-

    - name: Npm Run Build
      run: npm run build
      working-directory: ${{ github.workspace }}/sechub/github-actions/scan
      shell: bash

    - name: Make index.js Executable
      run: chmod +x dist/index.js
      working-directory: ${{ github.workspace }}/sechub/github-actions/scan
      shell: bash

    - name: Run SecHub Scan
      run: node dist/index.js
      env:
        config-path: ${{ inputs.config-path }}
        url: ${{ inputs.url }}
        api-token: ${{ inputs.api-token }}
        user: ${{ inputs.user }}
        project-name: ${{ inputs.project-name }}
        version: ${{ inputs.version }}
        add-scm-history: ${{ inputs.add-scm-history }}
        scan-types: ${{ inputs.scan-types }}
        content-type: ${{ inputs.content-type }}
        include-folders: ${{ inputs.include-folders }}
        exclude-folders: ${{ inputs.exclude-folders }}
        report-formats: ${{ inputs.report-formats }}
        trust-all: ${{ inputs.trust-all }}
        debug: ${{ inputs.debug }}
        fail-job-with-findings: ${{ inputs.fail-job-with-findings }}
      working-directory: ${{ github.workspace }}/sechub/github-actions/scan
      shell: bash