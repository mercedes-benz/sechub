# SPDX-License-Identifier: MIT

server:
  address: 127.0.0.1

sechub:
  config:
    trigger:
      autoclean:
        initialdelay: "100"
        delay: "2000" # every two seconds - we have only a few tests which check auto cleanup, so 
                      # only those have to wait, other just not bothered by too many checks at same
                      # time
      nextjob:
        initialdelay: "100"
        # every 100 milliseconds, so we got faster test results
        delay: "100"
    check:
      canceljob:
        delay: "1000" # every 3 seconds, so all of our tests, except long runningp arts will have only
                      # one check (which is always done) except multiple. This is to avoid flaky tests,
                      # but gives us possiblity to check multiple ones when necessary (default are 60 seconds
                      # and this too long for test...)
  scan:
    scanconfig:
      refresh:
        delay: "1000"       
  initialadmin:
    userid: int-test_superadmin
    email: int-test_superadmin@sechub.example.org
    apitoken: int-test_superadmin-pwd
  notification:
    email:
      administrators: int-test_superadmins_npm@example.org
  adapter:
    mock:
      sanitycheck:
        enabled: true
    checkmarx:
      scanresultcheck:
        period:
           minutes: 1 # will be ignored inside tests (because mocked adapter does not use it) but we have at least no warning log entries
      engineconfiguration:
        name: int-test-checkmarx-engine-name
        
  notification.email.mock.cache:
    enabled: true
  
  monitoring:
    accepted: 
      cpu: 
        average:
           max: 8.0 # Full throttle for integration tests...
  upload:
   binaries:
     maximum:
      bytes: 409600 # For testing we only allow 400 kbytes         
logging:
 level:
   com.mercedesbenz.sechub: DEBUG
   org.apache.http: WARN
   org.apache.http.headers: WARN
   org.apache.http.wire: WARN

spring:
 servlet: 
    # to speed up integration tests, we use here only 300kb
    multipart.max-file-size: 300KB
    multipart.max-request-size: 300KB
