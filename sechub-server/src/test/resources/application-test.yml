# SPDX-License-Identifier: MIT

# ---------------
# common setup
# ---------------
# use mock profile, so we can do nearly integration tests with
# standard JUNIT + spring without real stuff
# we use h2 for tests , more info about setup can be found at http://www.baeldung.com/spring-testing-separate-data-source
#spring.profiles.active=mocked_products,mocked_notifications,h2,test
# create SQL schema on every test suite call into build folder
# so can be used as a template when writing update scripts etc.
# for flyway - unfortunately the tests do not run correctly, with those settings, so we
# must only temporary activate the next 5 lines when necessary:
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=build/test-sql/created.sql

sechub:
  config:
    scheduling:
      enable: false
    trigger:
      nextjob:
        initialdelay: 100
        delay: 300
  server:
    baseurl: "http://localhost"
  storage:
    sharedvolume:
      upload: 
        dir: temp
  target:
    resolve:
      strategy:
        uri: "intranet-hostname-ends-with:intranet.example.org,intranet.example.com|intranet-hostname-starts-with:192."
        ip: "intranet-ip-pattern:192.168.*.*"

  notification:
    smtp:
      hostname: "mail.example.org"
    email:
      from: "sechub@example.org"
      administrators: "sechub-admin-test@example.org"
  initialadmin:
    userid: test-user # Mock initial admin
    email: "test-user@example.org"
  adapter:
    mock:
      sanitycheck:
        enabled: true # enable mocked adapters to check if the parameters are as expected. A sanity check that parameters are loaded etc.
    netsparker:
      userid: netsparkerUserId
      apitoken: netsparkerAPIToken
      policyid: policyId
      baseurl: netsparkerBaseUrl
      licenseid: licenseId
    checkmarx:
      baseurl: checkmarxBaseURL
      userid: checkmarxUserId
      password: checkmarxAPIToken
      teamid: checkmarxNewProjectTeamId
    nessus:
      intranet:
        userid: nessusIntranetUserId
        password: nessusIntranetPassword
        baseurl: nessusIntranetBaseURL
      internet:
        userid: nessusInternetUserId
        password: nessusInternetPassword
        baseurl: nessusInternetBaseURL
      defaultpolicyid: nessusDefaultPolicyId
      
#sechub.adapter.nessus.scanresultcheck.period.minutes:-1=
#sechub.adapter.nessus.scanresultcheck.timeout.minutes:-1=
#sechub.adapter.nessus.trustall:false=
#sechub.adapter.nessus.proxy.hostname:=
#sechub.adapter.nessus.proxy.port:0=

spring:
  jpa:
    hibernate:
      ddl-auto: create-drop # always drop and recreate ddl for tests
  datasource:
    initialization-mode: never
  flyway:
    enabled: false # Flyway turned off for testing
    

#
# Special: For junit tests we do not need this but we test
# ProductionConfigurationSettingsTest.java that in prod server.ssl.enabled is
# true
server:
  ssl:
    enabled: false