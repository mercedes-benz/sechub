<?xml version="1.0" encoding="utf-8"?>
<CxXMLResults InitiatorName="Tim Herres" Owner="TFS_Test" ScanId="1000471" ProjectId="113" ProjectName="sechub-continous-integration" TeamFullPathOnReportDate="CxServer\SP\Company\sechub" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113" ScanStart="Thursday, October 11, 2018 4:25:39 PM" Preset="Checkmarx Default" ScanTime="00h:01m:33s" LinesOfCodeScanned="3651" FilesScanned="34" ReportCreationTime="Thursday, October 11, 2018 4:45:55 PM" Team="sechub" CheckmarxVersion="8.8.0.72 HF1" ScanComments="Attempt to perform scan on 10/11/2018 4:45:13 PM - No code changes were detected; sechub job:FALLBACK_TRACE_ID#256179899025653" ScanType="Incremental" SourceOrigin="LocalPath" Visibility="Private">
  <Query id="1670" categories="PCI DSS v3.2;PCI DSS (3.2) - 6.5.8 - Improper access control,OWASP Top 10 2013;A4-Insecure Direct Object References,OWASP Top 10 2017;A5-Broken Access Control" cweId="36" name="Absolute_Path_Traversal" group="Java_Medium_Threat" Severity="Medium" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="2" QueryPath="Java\Cx\Java Medium Threat\Absolute Path Traversal Version:1" QueryVersionCode="68121957">
    <Result NodeId="10004710054" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="28" Column="35" FalsePositive="False" Severity="Medium" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=54" SeverityIndex="2">
      <Path ResultId="1000471" PathId="54" SimilarityId="1756288910">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>28</Line>
          <Column>35</Column>
          <NodeId>1</NodeId>
          <Name>args</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public static void main(String[] args) throws Exception {/*SECHUB mockdata*/</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>33</Line>
          <Column>17</Column>
          <NodeId>2</NodeId>
          <Name>args</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		String path = args[0];</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		String path = args[0];</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>34</Line>
          <Column>38</Column>
          <NodeId>4</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>		File documentsGenFolder = new File(path);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>34</Line>
          <Column>29</Column>
          <NodeId>5</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>		File documentsGenFolder = new File(path);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
  <Query id="1661" categories="OWASP Top 10 2013;A7-Missing Function Level Access Control,OWASP Top 10 2017;A5-Broken Access Control" cweId="379" name="Creation_of_Temp_File_in_Dir_with_Incorrect_Permissions" group="Java_Low_Visibility" Severity="Low" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="1" QueryPath="Java\Cx\Java Low Visibility\Creation of Temp File in Dir with Incorrect Permissions Version:0" QueryVersionCode="1661">
    <Result NodeId="10004710012" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="271" Column="23" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=12" SeverityIndex="1">
      <Path ResultId="1000471" PathId="12" SimilarityId="332531655">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>271</Line>
          <Column>23</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>271</Number>
              <Code>		File secHubServer = new File("./sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>271</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>271</Number>
              <Code>		File secHubServer = new File("./sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>272</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>272</Number>
              <Code>		if (!secHubServer.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>276</Line>
          <Column>23</Column>
          <NodeId>4</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>276</Number>
              <Code>		return assertExists(secHubServer);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>5</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>6</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>276</Line>
          <Column>22</Column>
          <NodeId>8</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>276</Number>
              <Code>		return assertExists(secHubServer);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>56</Column>
          <NodeId>9</NodeId>
          <Name>ensureSecHubServerFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>10</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>11</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>12</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>22</Column>
          <NodeId>13</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>54</Column>
          <NodeId>14</NodeId>
          <Name>ensureKubernetesFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>15</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>16</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>17</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>22</Column>
          <NodeId>18</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>154</Line>
          <Column>51</Column>
          <NodeId>19</NodeId>
          <Name>ensureSecretFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>154</Number>
              <Code>		File kubernetesSecretFolder = ensureSecretFolder();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>154</Line>
          <Column>8</Column>
          <NodeId>20</NodeId>
          <Name>kubernetesSecretFolder</Name>
          <Type></Type>
          <Length>22</Length>
          <Snippet>
            <Line>
              <Number>154</Number>
              <Code>		File kubernetesSecretFolder = ensureSecretFolder();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>29</Column>
          <NodeId>21</NodeId>
          <Name>kubernetesSecretFolder</Name>
          <Type></Type>
          <Length>22</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>8</Column>
          <NodeId>22</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>157</Line>
          <Column>8</Column>
          <NodeId>23</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>157</Number>
              <Code>		if (!envFolder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>161</Line>
          <Column>10</Column>
          <NodeId>24</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>161</Number>
              <Code>		return envFolder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>35</Column>
          <NodeId>25</NodeId>
          <Name>ensureEnvFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>8</Column>
          <NodeId>26</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>150</Line>
          <Column>43</Column>
          <NodeId>27</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>150</Number>
              <Code>		createSecretShellScriptAndFiles(result, envFolder, e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>164</Line>
          <Column>76</Column>
          <NodeId>28</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>164</Number>
              <Code>	private void createSecretShellScriptAndFiles(KubernetesFiles result, File targetFolder, KubernetesEnvironment e)</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>192</Line>
          <Column>22</Column>
          <NodeId>29</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>192</Number>
              <Code>				ensureSecretFile(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>249</Line>
          <Column>37</Column>
          <NodeId>30</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>249</Number>
              <Code>	private void ensureSecretFile(File targetFolder, String fileName) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>30</Column>
          <NodeId>31</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>8</Column>
          <NodeId>32</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>251</Line>
          <Column>8</Column>
          <NodeId>33</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>251</Number>
              <Code>		if (!secretFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>9</Column>
          <NodeId>34</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>33</Column>
          <NodeId>35</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710013" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="271" Column="23" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=13" SeverityIndex="1">
      <Path ResultId="1000471" PathId="13" SimilarityId="70241426">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>271</Line>
          <Column>23</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>271</Number>
              <Code>		File secHubServer = new File("./sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>271</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>271</Number>
              <Code>		File secHubServer = new File("./sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>272</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>272</Number>
              <Code>		if (!secHubServer.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>276</Line>
          <Column>23</Column>
          <NodeId>4</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>276</Number>
              <Code>		return assertExists(secHubServer);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>5</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>6</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>276</Line>
          <Column>22</Column>
          <NodeId>8</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>276</Number>
              <Code>		return assertExists(secHubServer);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>56</Column>
          <NodeId>9</NodeId>
          <Name>ensureSecHubServerFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>10</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>11</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>12</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>22</Column>
          <NodeId>13</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>267</Line>
          <Column>54</Column>
          <NodeId>14</NodeId>
          <Name>ensureKubernetesFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>267</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "gen/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>15</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>16</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>17</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>267</Line>
          <Column>22</Column>
          <NodeId>18</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>267</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "gen/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>59</Line>
          <Column>72</Column>
          <NodeId>19</NodeId>
          <Name>ensureKubernetesGenFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>		File generatedDeploymentFilePart = new File(ensureKubernetesGenFolder(),</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>59</Line>
          <Column>8</Column>
          <NodeId>20</NodeId>
          <Name>generatedDeploymentFilePart</Name>
          <Type></Type>
          <Length>27</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>		File generatedDeploymentFilePart = new File(ensureKubernetesGenFolder(),</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>61</Line>
          <Column>15</Column>
          <NodeId>21</NodeId>
          <Name>generatedDeploymentFilePart</Name>
          <Type></Type>
          <Length>27</Length>
          <Snippet>
            <Line>
              <Number>61</Number>
              <Code>		writer.save(generatedDeploymentFilePart, result.serverDeploymentYaml);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>22</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>23</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>24</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>25</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>26</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>27</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>28</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>29</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710014" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="274" Column="19" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=14" SeverityIndex="1">
      <Path ResultId="1000471" PathId="14" SimilarityId="292618894">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>274</Line>
          <Column>19</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>274</Number>
              <Code>			secHubServer = new File("./../sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>274</Line>
          <Column>4</Column>
          <NodeId>2</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>274</Number>
              <Code>			secHubServer = new File("./../sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>276</Line>
          <Column>23</Column>
          <NodeId>3</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>276</Number>
              <Code>		return assertExists(secHubServer);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>4</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>5</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>6</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>276</Line>
          <Column>22</Column>
          <NodeId>7</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>276</Number>
              <Code>		return assertExists(secHubServer);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>56</Column>
          <NodeId>8</NodeId>
          <Name>ensureSecHubServerFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>9</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>10</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>11</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>22</Column>
          <NodeId>12</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>54</Column>
          <NodeId>13</NodeId>
          <Name>ensureKubernetesFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>14</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>15</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>16</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>22</Column>
          <NodeId>17</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>154</Line>
          <Column>51</Column>
          <NodeId>18</NodeId>
          <Name>ensureSecretFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>154</Number>
              <Code>		File kubernetesSecretFolder = ensureSecretFolder();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>154</Line>
          <Column>8</Column>
          <NodeId>19</NodeId>
          <Name>kubernetesSecretFolder</Name>
          <Type></Type>
          <Length>22</Length>
          <Snippet>
            <Line>
              <Number>154</Number>
              <Code>		File kubernetesSecretFolder = ensureSecretFolder();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>29</Column>
          <NodeId>20</NodeId>
          <Name>kubernetesSecretFolder</Name>
          <Type></Type>
          <Length>22</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>8</Column>
          <NodeId>21</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>157</Line>
          <Column>8</Column>
          <NodeId>22</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>157</Number>
              <Code>		if (!envFolder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>161</Line>
          <Column>10</Column>
          <NodeId>23</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>161</Number>
              <Code>		return envFolder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>35</Column>
          <NodeId>24</NodeId>
          <Name>ensureEnvFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>8</Column>
          <NodeId>25</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>150</Line>
          <Column>43</Column>
          <NodeId>26</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>150</Number>
              <Code>		createSecretShellScriptAndFiles(result, envFolder, e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>164</Line>
          <Column>76</Column>
          <NodeId>27</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>164</Number>
              <Code>	private void createSecretShellScriptAndFiles(KubernetesFiles result, File targetFolder, KubernetesEnvironment e)</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>192</Line>
          <Column>22</Column>
          <NodeId>28</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>192</Number>
              <Code>				ensureSecretFile(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>249</Line>
          <Column>37</Column>
          <NodeId>29</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>249</Number>
              <Code>	private void ensureSecretFile(File targetFolder, String fileName) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>30</Column>
          <NodeId>30</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>8</Column>
          <NodeId>31</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>251</Line>
          <Column>8</Column>
          <NodeId>32</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>251</Number>
              <Code>		if (!secretFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>9</Column>
          <NodeId>33</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>33</Column>
          <NodeId>34</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710015" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="274" Column="19" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=15" SeverityIndex="1">
      <Path ResultId="1000471" PathId="15" SimilarityId="1113408537">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>274</Line>
          <Column>19</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>274</Number>
              <Code>			secHubServer = new File("./../sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>274</Line>
          <Column>4</Column>
          <NodeId>2</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>274</Number>
              <Code>			secHubServer = new File("./../sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>276</Line>
          <Column>23</Column>
          <NodeId>3</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>276</Number>
              <Code>		return assertExists(secHubServer);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>4</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>5</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>6</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>276</Line>
          <Column>22</Column>
          <NodeId>7</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>276</Number>
              <Code>		return assertExists(secHubServer);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>56</Column>
          <NodeId>8</NodeId>
          <Name>ensureSecHubServerFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>9</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>10</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>11</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>22</Column>
          <NodeId>12</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>267</Line>
          <Column>54</Column>
          <NodeId>13</NodeId>
          <Name>ensureKubernetesFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>267</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "gen/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>14</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>15</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>16</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>267</Line>
          <Column>22</Column>
          <NodeId>17</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>267</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "gen/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>59</Line>
          <Column>72</Column>
          <NodeId>18</NodeId>
          <Name>ensureKubernetesGenFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>		File generatedDeploymentFilePart = new File(ensureKubernetesGenFolder(),</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>59</Line>
          <Column>8</Column>
          <NodeId>19</NodeId>
          <Name>generatedDeploymentFilePart</Name>
          <Type></Type>
          <Length>27</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>		File generatedDeploymentFilePart = new File(ensureKubernetesGenFolder(),</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>61</Line>
          <Column>15</Column>
          <NodeId>20</NodeId>
          <Name>generatedDeploymentFilePart</Name>
          <Type></Type>
          <Length>27</Length>
          <Snippet>
            <Line>
              <Number>61</Number>
              <Code>		writer.save(generatedDeploymentFilePart, result.serverDeploymentYaml);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>21</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>22</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>23</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>24</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>25</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>26</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>27</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>28</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710016" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="280" Column="23" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=16" SeverityIndex="1">
      <Path ResultId="1000471" PathId="16" SimilarityId="-2021921090">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>23</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>2</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>4</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>54</Column>
          <NodeId>6</NodeId>
          <Name>ensureKubernetesFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>7</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>8</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>9</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>22</Column>
          <NodeId>10</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>154</Line>
          <Column>51</Column>
          <NodeId>11</NodeId>
          <Name>ensureSecretFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>154</Number>
              <Code>		File kubernetesSecretFolder = ensureSecretFolder();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>154</Line>
          <Column>8</Column>
          <NodeId>12</NodeId>
          <Name>kubernetesSecretFolder</Name>
          <Type></Type>
          <Length>22</Length>
          <Snippet>
            <Line>
              <Number>154</Number>
              <Code>		File kubernetesSecretFolder = ensureSecretFolder();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>29</Column>
          <NodeId>13</NodeId>
          <Name>kubernetesSecretFolder</Name>
          <Type></Type>
          <Length>22</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>8</Column>
          <NodeId>14</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>157</Line>
          <Column>8</Column>
          <NodeId>15</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>157</Number>
              <Code>		if (!envFolder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>161</Line>
          <Column>10</Column>
          <NodeId>16</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>161</Number>
              <Code>		return envFolder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>35</Column>
          <NodeId>17</NodeId>
          <Name>ensureEnvFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>8</Column>
          <NodeId>18</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>150</Line>
          <Column>43</Column>
          <NodeId>19</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>150</Number>
              <Code>		createSecretShellScriptAndFiles(result, envFolder, e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>164</Line>
          <Column>76</Column>
          <NodeId>20</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>164</Number>
              <Code>	private void createSecretShellScriptAndFiles(KubernetesFiles result, File targetFolder, KubernetesEnvironment e)</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>192</Line>
          <Column>22</Column>
          <NodeId>21</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>192</Number>
              <Code>				ensureSecretFile(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>249</Line>
          <Column>37</Column>
          <NodeId>22</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>249</Number>
              <Code>	private void ensureSecretFile(File targetFolder, String fileName) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>30</Column>
          <NodeId>23</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>8</Column>
          <NodeId>24</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>251</Line>
          <Column>8</Column>
          <NodeId>25</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>251</Number>
              <Code>		if (!secretFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>9</Column>
          <NodeId>26</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>33</Column>
          <NodeId>27</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710017" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="280" Column="23" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=17" SeverityIndex="1">
      <Path ResultId="1000471" PathId="17" SimilarityId="-2035766199">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>23</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>2</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>4</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>280</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>280</Number>
              <Code>		return assertExists(new File(ensureSecHubServerFolder(), "kubernetes"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>267</Line>
          <Column>54</Column>
          <NodeId>6</NodeId>
          <Name>ensureKubernetesFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>267</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "gen/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>7</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>8</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>9</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>267</Line>
          <Column>22</Column>
          <NodeId>10</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>267</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "gen/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>59</Line>
          <Column>72</Column>
          <NodeId>11</NodeId>
          <Name>ensureKubernetesGenFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>		File generatedDeploymentFilePart = new File(ensureKubernetesGenFolder(),</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>59</Line>
          <Column>8</Column>
          <NodeId>12</NodeId>
          <Name>generatedDeploymentFilePart</Name>
          <Type></Type>
          <Length>27</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>		File generatedDeploymentFilePart = new File(ensureKubernetesGenFolder(),</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>61</Line>
          <Column>15</Column>
          <NodeId>13</NodeId>
          <Name>generatedDeploymentFilePart</Name>
          <Type></Type>
          <Length>27</Length>
          <Snippet>
            <Line>
              <Number>61</Number>
              <Code>		writer.save(generatedDeploymentFilePart, result.serverDeploymentYaml);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>14</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>15</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>16</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>17</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>18</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>19</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>20</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>21</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710018" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="263" Column="23" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=18" SeverityIndex="1">
      <Path ResultId="1000471" PathId="18" SimilarityId="-185492864">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>23</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>2</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>4</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>154</Line>
          <Column>51</Column>
          <NodeId>6</NodeId>
          <Name>ensureSecretFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>154</Number>
              <Code>		File kubernetesSecretFolder = ensureSecretFolder();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>154</Line>
          <Column>8</Column>
          <NodeId>7</NodeId>
          <Name>kubernetesSecretFolder</Name>
          <Type></Type>
          <Length>22</Length>
          <Snippet>
            <Line>
              <Number>154</Number>
              <Code>		File kubernetesSecretFolder = ensureSecretFolder();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>29</Column>
          <NodeId>8</NodeId>
          <Name>kubernetesSecretFolder</Name>
          <Type></Type>
          <Length>22</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>8</Column>
          <NodeId>9</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>157</Line>
          <Column>8</Column>
          <NodeId>10</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>157</Number>
              <Code>		if (!envFolder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>161</Line>
          <Column>10</Column>
          <NodeId>11</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>161</Number>
              <Code>		return envFolder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>35</Column>
          <NodeId>12</NodeId>
          <Name>ensureEnvFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>8</Column>
          <NodeId>13</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>150</Line>
          <Column>43</Column>
          <NodeId>14</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>150</Number>
              <Code>		createSecretShellScriptAndFiles(result, envFolder, e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>164</Line>
          <Column>76</Column>
          <NodeId>15</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>164</Number>
              <Code>	private void createSecretShellScriptAndFiles(KubernetesFiles result, File targetFolder, KubernetesEnvironment e)</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>192</Line>
          <Column>22</Column>
          <NodeId>16</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>192</Number>
              <Code>				ensureSecretFile(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>249</Line>
          <Column>37</Column>
          <NodeId>17</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>249</Number>
              <Code>	private void ensureSecretFile(File targetFolder, String fileName) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>30</Column>
          <NodeId>18</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>8</Column>
          <NodeId>19</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>251</Line>
          <Column>8</Column>
          <NodeId>20</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>251</Number>
              <Code>		if (!secretFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>9</Column>
          <NodeId>21</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>33</Column>
          <NodeId>22</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710019" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="263" Column="23" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=19" SeverityIndex="1">
      <Path ResultId="1000471" PathId="19" SimilarityId="-376716661">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>23</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>2</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>4</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>154</Line>
          <Column>51</Column>
          <NodeId>6</NodeId>
          <Name>ensureSecretFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>154</Number>
              <Code>		File kubernetesSecretFolder = ensureSecretFolder();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>154</Line>
          <Column>8</Column>
          <NodeId>7</NodeId>
          <Name>kubernetesSecretFolder</Name>
          <Type></Type>
          <Length>22</Length>
          <Snippet>
            <Line>
              <Number>154</Number>
              <Code>		File kubernetesSecretFolder = ensureSecretFolder();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>29</Column>
          <NodeId>8</NodeId>
          <Name>kubernetesSecretFolder</Name>
          <Type></Type>
          <Length>22</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>8</Column>
          <NodeId>9</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>157</Line>
          <Column>8</Column>
          <NodeId>10</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>157</Number>
              <Code>		if (!envFolder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>161</Line>
          <Column>10</Column>
          <NodeId>11</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>161</Number>
              <Code>		return envFolder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>35</Column>
          <NodeId>12</NodeId>
          <Name>ensureEnvFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>8</Column>
          <NodeId>13</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>150</Line>
          <Column>43</Column>
          <NodeId>14</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>150</Number>
              <Code>		createSecretShellScriptAndFiles(result, envFolder, e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>164</Line>
          <Column>76</Column>
          <NodeId>15</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>164</Number>
              <Code>	private void createSecretShellScriptAndFiles(KubernetesFiles result, File targetFolder, KubernetesEnvironment e)</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>218</Line>
          <Column>30</Column>
          <NodeId>16</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>218</Number>
              <Code>		File targetFile = new File(targetFolder, createShellScriptName("all"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>218</Line>
          <Column>8</Column>
          <NodeId>17</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>218</Number>
              <Code>		File targetFile = new File(targetFolder, createShellScriptName("all"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>219</Line>
          <Column>15</Column>
          <NodeId>18</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>219</Number>
              <Code>		writer.save(targetFile, sb.toString(), true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>19</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>20</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>21</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>22</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>23</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>24</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710020" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="156" Column="20" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=20" SeverityIndex="1">
      <Path ResultId="1000471" PathId="20" SimilarityId="1808001187">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>20</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>157</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>157</Number>
              <Code>		if (!envFolder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>161</Line>
          <Column>10</Column>
          <NodeId>4</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>161</Number>
              <Code>		return envFolder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>35</Column>
          <NodeId>5</NodeId>
          <Name>ensureEnvFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>8</Column>
          <NodeId>6</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>150</Line>
          <Column>43</Column>
          <NodeId>7</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>150</Number>
              <Code>		createSecretShellScriptAndFiles(result, envFolder, e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>164</Line>
          <Column>76</Column>
          <NodeId>8</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>164</Number>
              <Code>	private void createSecretShellScriptAndFiles(KubernetesFiles result, File targetFolder, KubernetesEnvironment e)</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>192</Line>
          <Column>22</Column>
          <NodeId>9</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>192</Number>
              <Code>				ensureSecretFile(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>249</Line>
          <Column>37</Column>
          <NodeId>10</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>249</Number>
              <Code>	private void ensureSecretFile(File targetFolder, String fileName) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>30</Column>
          <NodeId>11</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>8</Column>
          <NodeId>12</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>251</Line>
          <Column>8</Column>
          <NodeId>13</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>251</Number>
              <Code>		if (!secretFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>9</Column>
          <NodeId>14</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>33</Column>
          <NodeId>15</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710021" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="156" Column="20" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=21" SeverityIndex="1">
      <Path ResultId="1000471" PathId="21" SimilarityId="494915694">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>20</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>156</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>156</Number>
              <Code>		File envFolder = new File(kubernetesSecretFolder, e.folderName());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>157</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>157</Number>
              <Code>		if (!envFolder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>161</Line>
          <Column>10</Column>
          <NodeId>4</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>161</Number>
              <Code>		return envFolder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>35</Column>
          <NodeId>5</NodeId>
          <Name>ensureEnvFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>149</Line>
          <Column>8</Column>
          <NodeId>6</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>149</Number>
              <Code>		File envFolder = ensureEnvFolder(e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>150</Line>
          <Column>43</Column>
          <NodeId>7</NodeId>
          <Name>envFolder</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>150</Number>
              <Code>		createSecretShellScriptAndFiles(result, envFolder, e);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>164</Line>
          <Column>76</Column>
          <NodeId>8</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>164</Number>
              <Code>	private void createSecretShellScriptAndFiles(KubernetesFiles result, File targetFolder, KubernetesEnvironment e)</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>218</Line>
          <Column>30</Column>
          <NodeId>9</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>218</Number>
              <Code>		File targetFile = new File(targetFolder, createShellScriptName("all"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>218</Line>
          <Column>8</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>218</Number>
              <Code>		File targetFile = new File(targetFolder, createShellScriptName("all"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>219</Line>
          <Column>15</Column>
          <NodeId>11</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>219</Number>
              <Code>		writer.save(targetFile, sb.toString(), true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>12</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>13</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>14</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>15</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>16</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>17</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710022" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="250" Column="21" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=22" SeverityIndex="1">
      <Path ResultId="1000471" PathId="22" SimilarityId="-1720277359">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>21</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>250</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>250</Number>
              <Code>		File secretFile = new File(targetFolder, fileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>251</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>251</Number>
              <Code>		if (!secretFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>9</Column>
          <NodeId>4</NodeId>
          <Name>secretFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>33</Column>
          <NodeId>5</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710023" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="34" Column="29" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=23" SeverityIndex="1">
      <Path ResultId="1000471" PathId="23" SimilarityId="-715263411">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>34</Line>
          <Column>29</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>		File documentsGenFolder = new File(path);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>34</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>documentsGenFolder</Name>
          <Type></Type>
          <Length>18</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>		File documentsGenFolder = new File(path);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>35</Line>
          <Column>26</Column>
          <NodeId>3</NodeId>
          <Name>documentsGenFolder</Name>
          <Type></Type>
          <Length>18</Length>
          <Snippet>
            <Line>
              <Number>35</Number>
              <Code>		File documentsFolder = documentsGenFolder.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>56</Line>
          <Column>34</Column>
          <NodeId>4</NodeId>
          <Name>documentsGenFolder</Name>
          <Type></Type>
          <Length>18</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		generator.generateUseCaseFiles(documentsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>64</Line>
          <Column>41</Column>
          <NodeId>5</NodeId>
          <Name>documentsGenFolder</Name>
          <Type></Type>
          <Length>18</Length>
          <Snippet>
            <Line>
              <Number>64</Number>
              <Code>	private void generateUseCaseFiles(File documentsGenFolder) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>70</Line>
          <Column>30</Column>
          <NodeId>6</NodeId>
          <Name>documentsGenFolder</Name>
          <Type></Type>
          <Length>18</Length>
          <Snippet>
            <Line>
              <Number>70</Number>
              <Code>		File targetFile = new File(documentsGenFolder, "gen_usecases.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>70</Line>
          <Column>8</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>70</Number>
              <Code>		File targetFile = new File(documentsGenFolder, "gen_usecases.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>71</Line>
          <Column>15</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>		writer.save(targetFile, useCaseAsciidoc);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>11</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>12</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>13</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>14</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>15</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>16</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710024" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="100" Column="10" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=24" SeverityIndex="1">
      <Path ResultId="1000471" PathId="24" SimilarityId="632694948">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>100</Line>
          <Column>10</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>100</Number>
              <Code>		return new File(genFolder, "gen_systemproperties.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>40</Line>
          <Column>60</Column>
          <NodeId>2</NodeId>
          <Name>createSystemProperyTargetFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>40</Number>
              <Code>		File systemProperitesFile = createSystemProperyTargetFile(documentsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>40</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>systemProperitesFile</Name>
          <Type></Type>
          <Length>20</Length>
          <Snippet>
            <Line>
              <Number>40</Number>
              <Code>		File systemProperitesFile = createSystemProperyTargetFile(documentsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>48</Line>
          <Column>49</Column>
          <NodeId>4</NodeId>
          <Name>systemProperitesFile</Name>
          <Type></Type>
          <Length>20</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		generator.generateSystemPropertiesDescription(systemProperitesFile);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>122</Line>
          <Column>55</Column>
          <NodeId>5</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>122</Number>
              <Code>	public void generateSystemPropertiesDescription(File targetFile) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>124</Line>
          <Column>15</Column>
          <NodeId>6</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>124</Number>
              <Code>		writer.save(targetFile, text);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>11</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>12</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>13</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>14</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710025" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="96" Column="10" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=25" SeverityIndex="1">
      <Path ResultId="1000471" PathId="25" SimilarityId="-2057812185">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>96</Line>
          <Column>10</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>96</Number>
              <Code>		return new File(genFolder, "gen_scheduling.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>41</Line>
          <Column>69</Column>
          <NodeId>2</NodeId>
          <Name>createScheduleDescriptionTargetFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>41</Number>
              <Code>		File scheduleDescriptionFile = createScheduleDescriptionTargetFile(documentsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>41</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>scheduleDescriptionFile</Name>
          <Type></Type>
          <Length>23</Length>
          <Snippet>
            <Line>
              <Number>41</Number>
              <Code>		File scheduleDescriptionFile = createScheduleDescriptionTargetFile(documentsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>50</Line>
          <Column>41</Column>
          <NodeId>4</NodeId>
          <Name>scheduleDescriptionFile</Name>
          <Type></Type>
          <Length>23</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		generator.generateScheduleDescription(scheduleDescriptionFile);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>127</Line>
          <Column>47</Column>
          <NodeId>5</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>127</Number>
              <Code>	public void generateScheduleDescription(File targetFile) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>129</Line>
          <Column>15</Column>
          <NodeId>6</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>129</Number>
              <Code>		writer.save(targetFile, text);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>11</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>12</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>13</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>14</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710026" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="108" Column="10" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=26" SeverityIndex="1">
      <Path ResultId="1000471" PathId="26" SimilarityId="190454466">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>108</Line>
          <Column>10</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>108</Number>
              <Code>		return new File(genFolder, "gen_mockadapterproperties.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>42</Line>
          <Column>91</Column>
          <NodeId>2</NodeId>
          <Name>createSpecialMockConfigurationPropertiesTargetFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>42</Number>
              <Code>		File specialMockValuePropertiesFile = createSpecialMockConfigurationPropertiesTargetFile(documentsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>42</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>specialMockValuePropertiesFile</Name>
          <Type></Type>
          <Length>30</Length>
          <Snippet>
            <Line>
              <Number>42</Number>
              <Code>		File specialMockValuePropertiesFile = createSpecialMockConfigurationPropertiesTargetFile(documentsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>52</Line>
          <Column>47</Column>
          <NodeId>4</NodeId>
          <Name>specialMockValuePropertiesFile</Name>
          <Type></Type>
          <Length>30</Length>
          <Snippet>
            <Line>
              <Number>52</Number>
              <Code>		generator.generateMockPropertiesDescription(specialMockValuePropertiesFile);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>132</Line>
          <Column>54</Column>
          <NodeId>5</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>132</Number>
              <Code>	private void generateMockPropertiesDescription(File targetFile) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>134</Line>
          <Column>15</Column>
          <NodeId>6</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>134</Number>
              <Code>		writer.save(targetFile, text);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>11</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>12</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>13</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>14</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710027" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="36" Column="25" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=27" SeverityIndex="1">
      <Path ResultId="1000471" PathId="27" SimilarityId="-965207825">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>36</Line>
          <Column>25</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>36</Number>
              <Code>		File diagramsFolder = new File(documentsFolder.getParentFile(), "diagrams");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>36</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>diagramsFolder</Name>
          <Type></Type>
          <Length>14</Length>
          <Snippet>
            <Line>
              <Number>36</Number>
              <Code>		File diagramsFolder = new File(documentsFolder.getParentFile(), "diagrams");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>37</Line>
          <Column>37</Column>
          <NodeId>3</NodeId>
          <Name>diagramsFolder</Name>
          <Type></Type>
          <Length>14</Length>
          <Snippet>
            <Line>
              <Number>37</Number>
              <Code>		File diagramsGenFolder = new File(diagramsFolder, "gen");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>37</Line>
          <Column>8</Column>
          <NodeId>4</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>37</Number>
              <Code>		File diagramsGenFolder = new File(diagramsFolder, "gen");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>55</Line>
          <Column>51</Column>
          <NodeId>5</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>		generator.generateMessagingFiles(messagingFile, diagramsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>59</Line>
          <Column>63</Column>
          <NodeId>6</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>	private void generateMessagingFiles(File messagingFile, File diagramsGenFolder) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>61</Line>
          <Column>71</Column>
          <NodeId>7</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>61</Number>
              <Code>		domainMessagingFilesGenerator.generateMessagingFiles(messagingFile, diagramsGenFolder, model);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>23</Line>
          <Column>62</Column>
          <NodeId>8</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>23</Number>
              <Code>	public void generateMessagingFiles(File messagingFile, File diagramsGenFolder, DomainMessagingModel model</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>27</Line>
          <Column>33</Column>
          <NodeId>9</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>27</Number>
              <Code>		generateMessagingPlantumlFile(diagramsGenFolder, reducedModelForOverview, "__Overview__ of domain **messaging** ",</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>71</Line>
          <Column>50</Column>
          <NodeId>10</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>	private void generateMessagingPlantumlFile(File diagramsGenFolder, DomainMessagingModel model, String title,</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>74</Line>
          <Column>30</Column>
          <NodeId>11</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		File targetFile = new File(diagramsGenFolder, targetFileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>74</Line>
          <Column>8</Column>
          <NodeId>12</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		File targetFile = new File(diagramsGenFolder, targetFileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>75</Line>
          <Column>15</Column>
          <NodeId>13</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>75</Number>
              <Code>		writer.save(targetFile, generatedPlantuml);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>14</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>15</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>16</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>17</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>18</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>19</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>20</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>21</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710028" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="37" Column="28" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=28" SeverityIndex="1">
      <Path ResultId="1000471" PathId="28" SimilarityId="-2083209642">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>37</Line>
          <Column>28</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>37</Number>
              <Code>		File diagramsGenFolder = new File(diagramsFolder, "gen");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>37</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>37</Number>
              <Code>		File diagramsGenFolder = new File(diagramsFolder, "gen");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>55</Line>
          <Column>51</Column>
          <NodeId>3</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>		generator.generateMessagingFiles(messagingFile, diagramsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>59</Line>
          <Column>63</Column>
          <NodeId>4</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>	private void generateMessagingFiles(File messagingFile, File diagramsGenFolder) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>61</Line>
          <Column>71</Column>
          <NodeId>5</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>61</Number>
              <Code>		domainMessagingFilesGenerator.generateMessagingFiles(messagingFile, diagramsGenFolder, model);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>23</Line>
          <Column>62</Column>
          <NodeId>6</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>23</Number>
              <Code>	public void generateMessagingFiles(File messagingFile, File diagramsGenFolder, DomainMessagingModel model</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>27</Line>
          <Column>33</Column>
          <NodeId>7</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>27</Number>
              <Code>		generateMessagingPlantumlFile(diagramsGenFolder, reducedModelForOverview, "__Overview__ of domain **messaging** ",</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>71</Line>
          <Column>50</Column>
          <NodeId>8</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>	private void generateMessagingPlantumlFile(File diagramsGenFolder, DomainMessagingModel model, String title,</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>74</Line>
          <Column>30</Column>
          <NodeId>9</NodeId>
          <Name>diagramsGenFolder</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		File targetFile = new File(diagramsGenFolder, targetFileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>74</Line>
          <Column>8</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		File targetFile = new File(diagramsGenFolder, targetFileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>75</Line>
          <Column>15</Column>
          <NodeId>11</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>75</Number>
              <Code>		writer.save(targetFile, generatedPlantuml);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>12</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>13</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>14</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>15</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>16</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>17</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>18</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>19</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710029" FileName="java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java" Status="Recurrent" Line="74" Column="21" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=29" SeverityIndex="1">
      <Path ResultId="1000471" PathId="29" SimilarityId="-768865403">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>74</Line>
          <Column>21</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		File targetFile = new File(diagramsGenFolder, targetFileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>74</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		File targetFile = new File(diagramsGenFolder, targetFileName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>75</Line>
          <Column>15</Column>
          <NodeId>3</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>75</Number>
              <Code>		writer.save(targetFile, generatedPlantuml);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>4</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>5</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>6</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>11</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710030" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="104" Column="10" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=30" SeverityIndex="1">
      <Path ResultId="1000471" PathId="30" SimilarityId="504493974">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>104</Line>
          <Column>10</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>104</Number>
              <Code>		return new File(genFolder, "gen_messaging.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>43</Line>
          <Column>49</Column>
          <NodeId>2</NodeId>
          <Name>createMessagingTargetFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>43</Number>
              <Code>		File messagingFile = createMessagingTargetFile(documentsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>43</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>messagingFile</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>43</Number>
              <Code>		File messagingFile = createMessagingTargetFile(documentsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>55</Line>
          <Column>36</Column>
          <NodeId>4</NodeId>
          <Name>messagingFile</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>		generator.generateMessagingFiles(messagingFile, diagramsGenFolder);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>59</Line>
          <Column>43</Column>
          <NodeId>5</NodeId>
          <Name>messagingFile</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>	private void generateMessagingFiles(File messagingFile, File diagramsGenFolder) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>61</Line>
          <Column>56</Column>
          <NodeId>6</NodeId>
          <Name>messagingFile</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>61</Number>
              <Code>		domainMessagingFilesGenerator.generateMessagingFiles(messagingFile, diagramsGenFolder, model);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>23</Line>
          <Column>42</Column>
          <NodeId>7</NodeId>
          <Name>messagingFile</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>23</Number>
              <Code>	public void generateMessagingFiles(File messagingFile, File diagramsGenFolder, DomainMessagingModel model</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingFilesGenerator.java</FileName>
          <Line>60</Line>
          <Column>15</Column>
          <NodeId>8</NodeId>
          <Name>messagingFile</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>60</Number>
              <Code>		writer.save(messagingFile, sb.toString());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>11</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>12</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>13</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>14</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>15</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>16</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710031" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="70" Column="21" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=31" SeverityIndex="1">
      <Path ResultId="1000471" PathId="31" SimilarityId="342230899">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>70</Line>
          <Column>21</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>70</Number>
              <Code>		File targetFile = new File(documentsGenFolder, "gen_usecases.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>70</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>70</Number>
              <Code>		File targetFile = new File(documentsGenFolder, "gen_usecases.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>71</Line>
          <Column>15</Column>
          <NodeId>3</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>		writer.save(targetFile, useCaseAsciidoc);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>4</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>5</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>6</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>11</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710032" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="74" Column="22" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=32" SeverityIndex="1">
      <Path ResultId="1000471" PathId="32" SimilarityId="-411584844">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>74</Line>
          <Column>22</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		File targetFile2 = new File(documentsGenFolder, "gen_uc_restdoc.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>74</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>targetFile2</Name>
          <Type></Type>
          <Length>11</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		File targetFile2 = new File(documentsGenFolder, "gen_uc_restdoc.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>75</Line>
          <Column>15</Column>
          <NodeId>3</NodeId>
          <Name>targetFile2</Name>
          <Type></Type>
          <Length>11</Length>
          <Snippet>
            <Line>
              <Number>75</Number>
              <Code>		writer.save(targetFile2, usecaseRestDoc);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>4</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>5</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>6</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>11</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710033" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="85" Column="22" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=33" SeverityIndex="1">
      <Path ResultId="1000471" PathId="33" SimilarityId="1517511589">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>85</Line>
          <Column>22</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>85</Number>
              <Code>		File targetFile3 = new File(documentsGenFolder, "gen_uc_userdocumentation_restdoc.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>85</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>targetFile3</Name>
          <Type></Type>
          <Length>11</Length>
          <Snippet>
            <Line>
              <Number>85</Number>
              <Code>		File targetFile3 = new File(documentsGenFolder, "gen_uc_userdocumentation_restdoc.adoc");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>86</Line>
          <Column>15</Column>
          <NodeId>3</NodeId>
          <Name>targetFile3</Name>
          <Type></Type>
          <Length>11</Length>
          <Snippet>
            <Line>
              <Number>86</Number>
              <Code>		writer.save(targetFile3, usecaseRestDocUserDocumentation);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>4</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>5</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>6</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>11</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710034" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="267" Column="23" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=34" SeverityIndex="1">
      <Path ResultId="1000471" PathId="34" SimilarityId="528190297">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>267</Line>
          <Column>23</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>267</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "gen/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>283</Line>
          <Column>33</Column>
          <NodeId>2</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>283</Number>
              <Code>	private File assertExists(File folder) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>8</Column>
          <NodeId>3</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>287</Line>
          <Column>10</Column>
          <NodeId>4</NodeId>
          <Name>folder</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>287</Number>
              <Code>		return folder;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>267</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>assertExists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>267</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "gen/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>59</Line>
          <Column>72</Column>
          <NodeId>6</NodeId>
          <Name>ensureKubernetesGenFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>		File generatedDeploymentFilePart = new File(ensureKubernetesGenFolder(),</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>59</Line>
          <Column>8</Column>
          <NodeId>7</NodeId>
          <Name>generatedDeploymentFilePart</Name>
          <Type></Type>
          <Length>27</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>		File generatedDeploymentFilePart = new File(ensureKubernetesGenFolder(),</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>61</Line>
          <Column>15</Column>
          <NodeId>8</NodeId>
          <Name>generatedDeploymentFilePart</Name>
          <Type></Type>
          <Length>27</Length>
          <Snippet>
            <Line>
              <Number>61</Number>
              <Code>		writer.save(generatedDeploymentFilePart, result.serverDeploymentYaml);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>11</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>12</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>13</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>14</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>15</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>16</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710035" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="59" Column="38" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=35" SeverityIndex="1">
      <Path ResultId="1000471" PathId="35" SimilarityId="502365933">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>59</Line>
          <Column>38</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>		File generatedDeploymentFilePart = new File(ensureKubernetesGenFolder(),</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>59</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>generatedDeploymentFilePart</Name>
          <Type></Type>
          <Length>27</Length>
          <Snippet>
            <Line>
              <Number>59</Number>
              <Code>		File generatedDeploymentFilePart = new File(ensureKubernetesGenFolder(),</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>61</Line>
          <Column>15</Column>
          <NodeId>3</NodeId>
          <Name>generatedDeploymentFilePart</Name>
          <Type></Type>
          <Length>27</Length>
          <Snippet>
            <Line>
              <Number>61</Number>
              <Code>		writer.save(generatedDeploymentFilePart, result.serverDeploymentYaml);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>15</Line>
          <Column>24</Column>
          <NodeId>4</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>15</Number>
              <Code>	public void save(File targetFile, String text) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>16</Line>
          <Column>8</Column>
          <NodeId>5</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>16</Number>
              <Code>		save(targetFile,text,true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>6</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>9</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>10</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>11</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710036" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="218" Column="21" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=36" SeverityIndex="1">
      <Path ResultId="1000471" PathId="36" SimilarityId="-1944241430">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>218</Line>
          <Column>21</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>218</Number>
              <Code>		File targetFile = new File(targetFolder, createShellScriptName("all"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>218</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>218</Number>
              <Code>		File targetFile = new File(targetFolder, createShellScriptName("all"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>219</Line>
          <Column>15</Column>
          <NodeId>3</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>219</Number>
              <Code>		writer.save(targetFile, sb.toString(), true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>4</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>5</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>6</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>9</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710037" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="197" Column="22" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=37" SeverityIndex="1">
      <Path ResultId="1000471" PathId="37" SimilarityId="-254811760">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>197</Line>
          <Column>22</Column>
          <NodeId>1</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>197</Number>
              <Code>			File targetFile = new File(targetFolder, shellName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>197</Line>
          <Column>9</Column>
          <NodeId>2</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>197</Number>
              <Code>			File targetFile = new File(targetFolder, shellName);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>198</Line>
          <Column>16</Column>
          <NodeId>3</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>198</Number>
              <Code>			writer.save(targetFile, sb.toString(), true);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>18</Line>
          <Column>24</Column>
          <NodeId>4</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>18</Number>
              <Code>	public void save(File targetFile, String text, boolean overwrite) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>22</Line>
          <Column>7</Column>
          <NodeId>5</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>22</Number>
              <Code>		if (targetFile.exists() &amp;&amp; overwrite) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>29</Line>
          <Column>8</Column>
          <NodeId>6</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (!targetFile.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>30</Line>
          <Column>22</Column>
          <NodeId>7</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			File parentFile = targetFile.getParentFile();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>9</Column>
          <NodeId>8</NodeId>
          <Name>targetFile</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>9</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
  <Query id="4446" cweId="474" name="Portability_Flaw_Locale_Dependent_Comparison" group="Java_Low_Visibility" Severity="Low" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="1" QueryPath="Java\Cx\Java Low Visibility\Portability Flaw Locale Dependent Comparison Version:1" QueryVersionCode="104375129">
    <Result NodeId="10004710085" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=85" SeverityIndex="1">
      <Path ResultId="1000471" PathId="85" SimilarityId="14970098">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>38</Line>
          <Column>61</Column>
          <NodeId>12</NodeId>
          <Name>springValue</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>			SpringValue extracted = springValueExtractor.extract(data.springValue);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>46</Line>
          <Column>36</Column>
          <NodeId>13</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>	public SpringValue extract(String string) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>23</Column>
          <NodeId>14</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>35</Column>
          <NodeId>15</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>12</Column>
          <NodeId>16</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>53</Line>
          <Column>22</Column>
          <NodeId>17</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>53</Number>
              <Code>		for (String split: splitted) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>19</Column>
          <NodeId>18</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>29</Column>
          <NodeId>19</NodeId>
          <Name>trim</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>5</Column>
          <NodeId>20</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>56</Line>
          <Column>37</Column>
          <NodeId>21</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>				if (firstNotEmpty.length()&gt;1 &amp;&amp; firstNotEmpty.endsWith("}")) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>56</Line>
          <Column>9</Column>
          <NodeId>22</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>				if (firstNotEmpty.length()&gt;1 &amp;&amp; firstNotEmpty.endsWith("}")) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>67</Line>
          <Column>19</Column>
          <NodeId>23</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>67</Number>
              <Code>		int leftIndex = firstNotEmpty.indexOf(":");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>67</Line>
          <Column>40</Column>
          <NodeId>24</NodeId>
          <Name>indexOf</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>67</Number>
              <Code>		int leftIndex = firstNotEmpty.indexOf(":");</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710086" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="47" Column="57" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=86" SeverityIndex="1">
      <Path ResultId="1000471" PathId="86" SimilarityId="-1112206738">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>47</Line>
          <Column>57</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>47</Number>
              <Code>		data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>47</Line>
          <Column>7</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>47</Number>
              <Code>		data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>48</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>69</Line>
          <Column>59</Column>
          <NodeId>4</NodeId>
          <Name>buildDataBy</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>				DocAnnotationData data2 = DocGeneratorUtil.buildDataBy(info2, field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>69</Line>
          <Column>23</Column>
          <NodeId>5</NodeId>
          <Name>data2</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>				DocAnnotationData data2 = DocGeneratorUtil.buildDataBy(info2, field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>71</Line>
          <Column>13</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>				list.add(data2);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>48</Line>
          <Column>5</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>				list.add(data0);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>60</Line>
          <Column>5</Column>
          <NodeId>8</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>60</Number>
              <Code>				list.add(data1);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>76</Line>
          <Column>10</Column>
          <NodeId>9</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>50</Line>
          <Column>56</Column>
          <NodeId>10</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		return mockedAdaptersSprintValueDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>133</Line>
          <Column>106</Column>
          <NodeId>11</NodeId>
          <Name>fetchMockAdapterSpringValueDocumentationParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>133</Number>
              <Code>		String text = propertiesGenerator.generate(getCollector().fetchMockAdapterSpringValueDocumentationParts());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>24</Line>
          <Column>49</Column>
          <NodeId>12</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>24</Number>
              <Code>	public String generate(List&lt;DocAnnotationData&gt; list) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>25</Line>
          <Column>19</Column>
          <NodeId>13</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>25</Number>
              <Code>		return generate(list, AcceptAllSpringValueFilter.INSTANCE);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>49</Column>
          <NodeId>14</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public String generate(List&lt;DocAnnotationData&gt; list, SpringValueFilter filter) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>23</Column>
          <NodeId>15</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>38</Line>
          <Column>61</Column>
          <NodeId>16</NodeId>
          <Name>springValue</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>			SpringValue extracted = springValueExtractor.extract(data.springValue);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>46</Line>
          <Column>36</Column>
          <NodeId>17</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>	public SpringValue extract(String string) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>23</Column>
          <NodeId>18</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>35</Column>
          <NodeId>19</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>12</Column>
          <NodeId>20</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>53</Line>
          <Column>22</Column>
          <NodeId>21</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>53</Number>
              <Code>		for (String split: splitted) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>19</Column>
          <NodeId>22</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>29</Column>
          <NodeId>23</NodeId>
          <Name>trim</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>5</Column>
          <NodeId>24</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>56</Line>
          <Column>37</Column>
          <NodeId>25</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>				if (firstNotEmpty.length()&gt;1 &amp;&amp; firstNotEmpty.endsWith("}")) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>56</Line>
          <Column>9</Column>
          <NodeId>26</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>				if (firstNotEmpty.length()&gt;1 &amp;&amp; firstNotEmpty.endsWith("}")) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>67</Line>
          <Column>19</Column>
          <NodeId>27</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>67</Number>
              <Code>		int leftIndex = firstNotEmpty.indexOf(":");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>67</Line>
          <Column>40</Column>
          <NodeId>28</NodeId>
          <Name>indexOf</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>67</Number>
              <Code>		int leftIndex = firstNotEmpty.indexOf(":");</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710087" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=87" SeverityIndex="1">
      <Path ResultId="1000471" PathId="87" SimilarityId="1611860193">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>38</Line>
          <Column>61</Column>
          <NodeId>12</NodeId>
          <Name>springValue</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>			SpringValue extracted = springValueExtractor.extract(data.springValue);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>46</Line>
          <Column>36</Column>
          <NodeId>13</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>	public SpringValue extract(String string) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>23</Column>
          <NodeId>14</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>35</Column>
          <NodeId>15</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>12</Column>
          <NodeId>16</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>53</Line>
          <Column>22</Column>
          <NodeId>17</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>53</Number>
              <Code>		for (String split: splitted) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>19</Column>
          <NodeId>18</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>29</Column>
          <NodeId>19</NodeId>
          <Name>trim</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>5</Column>
          <NodeId>20</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>56</Line>
          <Column>37</Column>
          <NodeId>21</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>				if (firstNotEmpty.length()&gt;1 &amp;&amp; firstNotEmpty.endsWith("}")) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>56</Line>
          <Column>59</Column>
          <NodeId>22</NodeId>
          <Name>endsWith</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>				if (firstNotEmpty.length()&gt;1 &amp;&amp; firstNotEmpty.endsWith("}")) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710088" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="47" Column="57" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=88" SeverityIndex="1">
      <Path ResultId="1000471" PathId="88" SimilarityId="525461733">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>47</Line>
          <Column>57</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>47</Number>
              <Code>		data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>47</Line>
          <Column>7</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>47</Number>
              <Code>		data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>48</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>69</Line>
          <Column>59</Column>
          <NodeId>4</NodeId>
          <Name>buildDataBy</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>				DocAnnotationData data2 = DocGeneratorUtil.buildDataBy(info2, field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>69</Line>
          <Column>23</Column>
          <NodeId>5</NodeId>
          <Name>data2</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>				DocAnnotationData data2 = DocGeneratorUtil.buildDataBy(info2, field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>71</Line>
          <Column>13</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>				list.add(data2);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>48</Line>
          <Column>5</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>				list.add(data0);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>60</Line>
          <Column>5</Column>
          <NodeId>8</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>60</Number>
              <Code>				list.add(data1);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>76</Line>
          <Column>10</Column>
          <NodeId>9</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>50</Line>
          <Column>56</Column>
          <NodeId>10</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		return mockedAdaptersSprintValueDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>133</Line>
          <Column>106</Column>
          <NodeId>11</NodeId>
          <Name>fetchMockAdapterSpringValueDocumentationParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>133</Number>
              <Code>		String text = propertiesGenerator.generate(getCollector().fetchMockAdapterSpringValueDocumentationParts());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>24</Line>
          <Column>49</Column>
          <NodeId>12</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>24</Number>
              <Code>	public String generate(List&lt;DocAnnotationData&gt; list) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>25</Line>
          <Column>19</Column>
          <NodeId>13</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>25</Number>
              <Code>		return generate(list, AcceptAllSpringValueFilter.INSTANCE);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>49</Column>
          <NodeId>14</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public String generate(List&lt;DocAnnotationData&gt; list, SpringValueFilter filter) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>23</Column>
          <NodeId>15</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>38</Line>
          <Column>61</Column>
          <NodeId>16</NodeId>
          <Name>springValue</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>			SpringValue extracted = springValueExtractor.extract(data.springValue);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>46</Line>
          <Column>36</Column>
          <NodeId>17</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>	public SpringValue extract(String string) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>23</Column>
          <NodeId>18</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>35</Column>
          <NodeId>19</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>12</Column>
          <NodeId>20</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>53</Line>
          <Column>22</Column>
          <NodeId>21</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>53</Number>
              <Code>		for (String split: splitted) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>19</Column>
          <NodeId>22</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>29</Column>
          <NodeId>23</NodeId>
          <Name>trim</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>55</Line>
          <Column>5</Column>
          <NodeId>24</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>55</Number>
              <Code>				firstNotEmpty=split.trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>56</Line>
          <Column>37</Column>
          <NodeId>25</NodeId>
          <Name>firstNotEmpty</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>				if (firstNotEmpty.length()&gt;1 &amp;&amp; firstNotEmpty.endsWith("}")) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>56</Line>
          <Column>59</Column>
          <NodeId>26</NodeId>
          <Name>endsWith</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>				if (firstNotEmpty.length()&gt;1 &amp;&amp; firstNotEmpty.endsWith("}")) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710089" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=89" SeverityIndex="1">
      <Path ResultId="1000471" PathId="89" SimilarityId="-1267874058">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>38</Line>
          <Column>61</Column>
          <NodeId>12</NodeId>
          <Name>springValue</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>			SpringValue extracted = springValueExtractor.extract(data.springValue);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>46</Line>
          <Column>36</Column>
          <NodeId>13</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>	public SpringValue extract(String string) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>23</Column>
          <NodeId>14</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>35</Column>
          <NodeId>15</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>12</Column>
          <NodeId>16</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>53</Line>
          <Column>22</Column>
          <NodeId>17</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>53</Number>
              <Code>		for (String split: splitted) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>54</Line>
          <Column>30</Column>
          <NodeId>18</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>54</Number>
              <Code>			if (! StringUtils.isEmpty(split)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>54</Line>
          <Column>29</Column>
          <NodeId>19</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>54</Number>
              <Code>			if (! StringUtils.isEmpty(split)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710090" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="47" Column="57" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=90" SeverityIndex="1">
      <Path ResultId="1000471" PathId="90" SimilarityId="-959572742">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>47</Line>
          <Column>57</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>47</Number>
              <Code>		data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>47</Line>
          <Column>7</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>47</Number>
              <Code>		data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>48</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>69</Line>
          <Column>59</Column>
          <NodeId>4</NodeId>
          <Name>buildDataBy</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>				DocAnnotationData data2 = DocGeneratorUtil.buildDataBy(info2, field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>69</Line>
          <Column>23</Column>
          <NodeId>5</NodeId>
          <Name>data2</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>				DocAnnotationData data2 = DocGeneratorUtil.buildDataBy(info2, field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>71</Line>
          <Column>13</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>				list.add(data2);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>48</Line>
          <Column>5</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>				list.add(data0);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>60</Line>
          <Column>5</Column>
          <NodeId>8</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>60</Number>
              <Code>				list.add(data1);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>76</Line>
          <Column>10</Column>
          <NodeId>9</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>50</Line>
          <Column>56</Column>
          <NodeId>10</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		return mockedAdaptersSprintValueDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>133</Line>
          <Column>106</Column>
          <NodeId>11</NodeId>
          <Name>fetchMockAdapterSpringValueDocumentationParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>133</Number>
              <Code>		String text = propertiesGenerator.generate(getCollector().fetchMockAdapterSpringValueDocumentationParts());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>24</Line>
          <Column>49</Column>
          <NodeId>12</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>24</Number>
              <Code>	public String generate(List&lt;DocAnnotationData&gt; list) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>25</Line>
          <Column>19</Column>
          <NodeId>13</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>25</Number>
              <Code>		return generate(list, AcceptAllSpringValueFilter.INSTANCE);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>49</Column>
          <NodeId>14</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public String generate(List&lt;DocAnnotationData&gt; list, SpringValueFilter filter) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>23</Column>
          <NodeId>15</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>38</Line>
          <Column>61</Column>
          <NodeId>16</NodeId>
          <Name>springValue</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>			SpringValue extracted = springValueExtractor.extract(data.springValue);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>46</Line>
          <Column>36</Column>
          <NodeId>17</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>	public SpringValue extract(String string) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>23</Column>
          <NodeId>18</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>35</Column>
          <NodeId>19</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>12</Column>
          <NodeId>20</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>53</Line>
          <Column>22</Column>
          <NodeId>21</NodeId>
          <Name>splitted</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>53</Number>
              <Code>		for (String split: splitted) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>54</Line>
          <Column>30</Column>
          <NodeId>22</NodeId>
          <Name>split</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>54</Number>
              <Code>			if (! StringUtils.isEmpty(split)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>54</Line>
          <Column>29</Column>
          <NodeId>23</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>54</Number>
              <Code>			if (! StringUtils.isEmpty(split)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710091" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=91" SeverityIndex="1">
      <Path ResultId="1000471" PathId="91" SimilarityId="-1684105371">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>123</Line>
          <Column>85</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>123</Number>
              <Code>		String text = propertiesGenerator.generate(getCollector().fetchMustBeDocumentParts());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>24</Line>
          <Column>49</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>24</Number>
              <Code>	public String generate(List&lt;DocAnnotationData&gt; list) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>25</Line>
          <Column>19</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>25</Number>
              <Code>		return generate(list, AcceptAllSpringValueFilter.INSTANCE);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>49</Column>
          <NodeId>12</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public String generate(List&lt;DocAnnotationData&gt; list, SpringValueFilter filter) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>23</Column>
          <NodeId>13</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>35</Line>
          <Column>32</Column>
          <NodeId>14</NodeId>
          <Name>springValue</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>35</Number>
              <Code>			if (StringUtils.isEmpty(data.springValue)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>35</Line>
          <Column>27</Column>
          <NodeId>15</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>35</Number>
              <Code>			if (StringUtils.isEmpty(data.springValue)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710092" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="47" Column="57" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=92" SeverityIndex="1">
      <Path ResultId="1000471" PathId="92" SimilarityId="1317566057">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>47</Line>
          <Column>57</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>47</Number>
              <Code>		data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>47</Line>
          <Column>7</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>47</Number>
              <Code>		data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>48</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>69</Line>
          <Column>59</Column>
          <NodeId>4</NodeId>
          <Name>buildDataBy</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>				DocAnnotationData data2 = DocGeneratorUtil.buildDataBy(info2, field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>69</Line>
          <Column>23</Column>
          <NodeId>5</NodeId>
          <Name>data2</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>				DocAnnotationData data2 = DocGeneratorUtil.buildDataBy(info2, field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>71</Line>
          <Column>13</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>				list.add(data2);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>48</Line>
          <Column>5</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>				list.add(data0);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>60</Line>
          <Column>5</Column>
          <NodeId>8</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>60</Number>
              <Code>				list.add(data1);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockedAdaptersSpringValueDataCollector.java</FileName>
          <Line>76</Line>
          <Column>10</Column>
          <NodeId>9</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>50</Line>
          <Column>56</Column>
          <NodeId>10</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		return mockedAdaptersSprintValueDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>133</Line>
          <Column>106</Column>
          <NodeId>11</NodeId>
          <Name>fetchMockAdapterSpringValueDocumentationParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>133</Number>
              <Code>		String text = propertiesGenerator.generate(getCollector().fetchMockAdapterSpringValueDocumentationParts());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>24</Line>
          <Column>49</Column>
          <NodeId>12</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>24</Number>
              <Code>	public String generate(List&lt;DocAnnotationData&gt; list) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>25</Line>
          <Column>19</Column>
          <NodeId>13</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>25</Number>
              <Code>		return generate(list, AcceptAllSpringValueFilter.INSTANCE);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>49</Column>
          <NodeId>14</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public String generate(List&lt;DocAnnotationData&gt; list, SpringValueFilter filter) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>23</Column>
          <NodeId>15</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>35</Line>
          <Column>32</Column>
          <NodeId>16</NodeId>
          <Name>springValue</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>35</Number>
              <Code>			if (StringUtils.isEmpty(data.springValue)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SystemPropertiesDescriptionGenerator.java</FileName>
          <Line>35</Line>
          <Column>27</Column>
          <NodeId>17</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>35</Number>
              <Code>			if (StringUtils.isEmpty(data.springValue)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710093" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=93" SeverityIndex="1">
      <Path ResultId="1000471" PathId="93" SimilarityId="-120623336">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>37</Column>
          <NodeId>17</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>10</Column>
          <NodeId>18</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>87</Line>
          <Column>32</Column>
          <NodeId>19</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>87</Number>
              <Code>			result.scheduleDefinition = cron;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>87</Line>
          <Column>10</Column>
          <NodeId>20</NodeId>
          <Name>scheduleDefinition</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>87</Number>
              <Code>			result.scheduleDefinition = cron;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>88</Line>
          <Column>11</Column>
          <NodeId>21</NodeId>
          <Name>result</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>88</Number>
              <Code>			return result;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>44</Column>
          <NodeId>22</NodeId>
          <Name>extractSimpleString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>18</Column>
          <NodeId>23</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>67</Line>
          <Column>45</Column>
          <NodeId>24</NodeId>
          <Name>scheduleDefinition</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>67</Number>
              <Code>		if (getValueExtractor().isSpringValue(data.scheduleDefinition)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>81</Line>
          <Column>38</Column>
          <NodeId>25</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>81</Number>
              <Code>	public boolean isSpringValue(String string) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>85</Line>
          <Column>38</Column>
          <NodeId>26</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>85</Number>
              <Code>		return (string.startsWith("${") &amp;&amp; string.endsWith("}"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>85</Line>
          <Column>11</Column>
          <NodeId>27</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>85</Number>
              <Code>		return (string.startsWith("${") &amp;&amp; string.endsWith("}"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>85</Line>
          <Column>28</Column>
          <NodeId>28</NodeId>
          <Name>startsWith</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>85</Number>
              <Code>		return (string.startsWith("${") &amp;&amp; string.endsWith("}"));</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710094" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=94" SeverityIndex="1">
      <Path ResultId="1000471" PathId="94" SimilarityId="1654384026">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>37</Column>
          <NodeId>17</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>10</Column>
          <NodeId>18</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>87</Line>
          <Column>32</Column>
          <NodeId>19</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>87</Number>
              <Code>			result.scheduleDefinition = cron;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>87</Line>
          <Column>10</Column>
          <NodeId>20</NodeId>
          <Name>scheduleDefinition</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>87</Number>
              <Code>			result.scheduleDefinition = cron;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>88</Line>
          <Column>11</Column>
          <NodeId>21</NodeId>
          <Name>result</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>88</Number>
              <Code>			return result;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>44</Column>
          <NodeId>22</NodeId>
          <Name>extractSimpleString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>18</Column>
          <NodeId>23</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>67</Line>
          <Column>45</Column>
          <NodeId>24</NodeId>
          <Name>scheduleDefinition</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>67</Number>
              <Code>		if (getValueExtractor().isSpringValue(data.scheduleDefinition)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>81</Line>
          <Column>38</Column>
          <NodeId>25</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>81</Number>
              <Code>	public boolean isSpringValue(String string) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>85</Line>
          <Column>38</Column>
          <NodeId>26</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>85</Number>
              <Code>		return (string.startsWith("${") &amp;&amp; string.endsWith("}"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>85</Line>
          <Column>53</Column>
          <NodeId>27</NodeId>
          <Name>endsWith</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>85</Number>
              <Code>		return (string.startsWith("${") &amp;&amp; string.endsWith("}"));</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710095" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=95" SeverityIndex="1">
      <Path ResultId="1000471" PathId="95" SimilarityId="-1989252249">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>37</Column>
          <NodeId>17</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>10</Column>
          <NodeId>18</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>87</Line>
          <Column>32</Column>
          <NodeId>19</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>87</Number>
              <Code>			result.scheduleDefinition = cron;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>87</Line>
          <Column>10</Column>
          <NodeId>20</NodeId>
          <Name>scheduleDefinition</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>87</Number>
              <Code>			result.scheduleDefinition = cron;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>88</Line>
          <Column>11</Column>
          <NodeId>21</NodeId>
          <Name>result</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>88</Number>
              <Code>			return result;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>44</Column>
          <NodeId>22</NodeId>
          <Name>extractSimpleString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>18</Column>
          <NodeId>23</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>67</Line>
          <Column>45</Column>
          <NodeId>24</NodeId>
          <Name>scheduleDefinition</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>67</Number>
              <Code>		if (getValueExtractor().isSpringValue(data.scheduleDefinition)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>81</Line>
          <Column>38</Column>
          <NodeId>25</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>81</Number>
              <Code>	public boolean isSpringValue(String string) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>82</Line>
          <Column>27</Column>
          <NodeId>26</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>82</Number>
              <Code>		if (StringUtils.isEmpty(string)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>82</Line>
          <Column>26</Column>
          <NodeId>27</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>82</Number>
              <Code>		if (StringUtils.isEmpty(string)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710096" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=96" SeverityIndex="1">
      <Path ResultId="1000471" PathId="96" SimilarityId="-1738419788">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>37</Column>
          <NodeId>17</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>10</Column>
          <NodeId>18</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>85</Line>
          <Column>28</Column>
          <NodeId>19</NodeId>
          <Name>cron</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>85</Number>
              <Code>		if (!StringUtils.isEmpty(cron)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>85</Line>
          <Column>27</Column>
          <NodeId>20</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>85</Number>
              <Code>		if (!StringUtils.isEmpty(cron)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710097" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=97" SeverityIndex="1">
      <Path ResultId="1000471" PathId="97" SimilarityId="-685233549">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>96</Line>
          <Column>19</Column>
          <NodeId>17</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>96</Number>
              <Code>		appendFixedRate(springScheduled, sb);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>122</Line>
          <Column>41</Column>
          <NodeId>18</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>122</Number>
              <Code>	private void appendFixedRate(Scheduled springScheduled, StringBuilder sb) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>123</Line>
          <Column>28</Column>
          <NodeId>19</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>123</Number>
              <Code>		String fixedRateString = springScheduled.fixedRateString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>123</Line>
          <Column>59</Column>
          <NodeId>20</NodeId>
          <Name>fixedRateString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>123</Number>
              <Code>		String fixedRateString = springScheduled.fixedRateString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>123</Line>
          <Column>10</Column>
          <NodeId>21</NodeId>
          <Name>fixedRateString</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>123</Number>
              <Code>		String fixedRateString = springScheduled.fixedRateString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>131</Line>
          <Column>36</Column>
          <NodeId>22</NodeId>
          <Name>fixedRateString</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>131</Number>
              <Code>			sb.append("fixed rate:").append(fixedRateString).append(" ");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>131</Line>
          <Column>4</Column>
          <NodeId>23</NodeId>
          <Name>append</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>131</Number>
              <Code>			sb.append("fixed rate:").append(fixedRateString).append(" ");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>131</Line>
          <Column>4</Column>
          <NodeId>24</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>131</Number>
              <Code>			sb.append("fixed rate:").append(fixedRateString).append(" ");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>98</Line>
          <Column>18</Column>
          <NodeId>25</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>98</Number>
              <Code>		String fixed = sb.toString().trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>98</Line>
          <Column>29</Column>
          <NodeId>26</NodeId>
          <Name>toString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>98</Number>
              <Code>		String fixed = sb.toString().trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>98</Line>
          <Column>36</Column>
          <NodeId>27</NodeId>
          <Name>trim</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>98</Number>
              <Code>		String fixed = sb.toString().trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>98</Line>
          <Column>10</Column>
          <NodeId>28</NodeId>
          <Name>fixed</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>98</Number>
              <Code>		String fixed = sb.toString().trim();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>100</Line>
          <Column>27</Column>
          <NodeId>29</NodeId>
          <Name>fixed</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>100</Number>
              <Code>		if (StringUtils.isEmpty(fixed)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>100</Line>
          <Column>26</Column>
          <NodeId>30</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>100</Number>
              <Code>		if (StringUtils.isEmpty(fixed)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710098" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=98" SeverityIndex="1">
      <Path ResultId="1000471" PathId="98" SimilarityId="2062802382">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>96</Line>
          <Column>19</Column>
          <NodeId>17</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>96</Number>
              <Code>		appendFixedRate(springScheduled, sb);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>122</Line>
          <Column>41</Column>
          <NodeId>18</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>122</Number>
              <Code>	private void appendFixedRate(Scheduled springScheduled, StringBuilder sb) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>123</Line>
          <Column>28</Column>
          <NodeId>19</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>123</Number>
              <Code>		String fixedRateString = springScheduled.fixedRateString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>123</Line>
          <Column>59</Column>
          <NodeId>20</NodeId>
          <Name>fixedRateString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>123</Number>
              <Code>		String fixedRateString = springScheduled.fixedRateString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>123</Line>
          <Column>10</Column>
          <NodeId>21</NodeId>
          <Name>fixedRateString</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>123</Number>
              <Code>		String fixedRateString = springScheduled.fixedRateString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>130</Line>
          <Column>28</Column>
          <NodeId>22</NodeId>
          <Name>fixedRateString</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		if (!StringUtils.isEmpty(fixedRateString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>130</Line>
          <Column>27</Column>
          <NodeId>23</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		if (!StringUtils.isEmpty(fixedRateString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710099" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=99" SeverityIndex="1">
      <Path ResultId="1000471" PathId="99" SimilarityId="-702818331">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>96</Line>
          <Column>19</Column>
          <NodeId>17</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>96</Number>
              <Code>		appendFixedRate(springScheduled, sb);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>122</Line>
          <Column>41</Column>
          <NodeId>18</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>122</Number>
              <Code>	private void appendFixedRate(Scheduled springScheduled, StringBuilder sb) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>123</Line>
          <Column>28</Column>
          <NodeId>19</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>123</Number>
              <Code>		String fixedRateString = springScheduled.fixedRateString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>123</Line>
          <Column>59</Column>
          <NodeId>20</NodeId>
          <Name>fixedRateString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>123</Number>
              <Code>		String fixedRateString = springScheduled.fixedRateString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>123</Line>
          <Column>10</Column>
          <NodeId>21</NodeId>
          <Name>fixedRateString</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>123</Number>
              <Code>		String fixedRateString = springScheduled.fixedRateString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>124</Line>
          <Column>27</Column>
          <NodeId>22</NodeId>
          <Name>fixedRateString</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>124</Number>
              <Code>		if (StringUtils.isEmpty(fixedRateString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>124</Line>
          <Column>26</Column>
          <NodeId>23</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>124</Number>
              <Code>		if (StringUtils.isEmpty(fixedRateString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710100" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=100" SeverityIndex="1">
      <Path ResultId="1000471" PathId="100" SimilarityId="-449895528">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>95</Line>
          <Column>20</Column>
          <NodeId>17</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>95</Number>
              <Code>		appendFixedDelay(springScheduled, sb);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>110</Line>
          <Column>42</Column>
          <NodeId>18</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>110</Number>
              <Code>	private void appendFixedDelay(Scheduled springScheduled, StringBuilder sb) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>111</Line>
          <Column>29</Column>
          <NodeId>19</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>111</Number>
              <Code>		String fixedDelayString = springScheduled.fixedDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>111</Line>
          <Column>61</Column>
          <NodeId>20</NodeId>
          <Name>fixedDelayString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>111</Number>
              <Code>		String fixedDelayString = springScheduled.fixedDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>111</Line>
          <Column>10</Column>
          <NodeId>21</NodeId>
          <Name>fixedDelayString</Name>
          <Type></Type>
          <Length>16</Length>
          <Snippet>
            <Line>
              <Number>111</Number>
              <Code>		String fixedDelayString = springScheduled.fixedDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>118</Line>
          <Column>28</Column>
          <NodeId>22</NodeId>
          <Name>fixedDelayString</Name>
          <Type></Type>
          <Length>16</Length>
          <Snippet>
            <Line>
              <Number>118</Number>
              <Code>		if (!StringUtils.isEmpty(fixedDelayString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>118</Line>
          <Column>27</Column>
          <NodeId>23</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>118</Number>
              <Code>		if (!StringUtils.isEmpty(fixedDelayString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710101" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=101" SeverityIndex="1">
      <Path ResultId="1000471" PathId="101" SimilarityId="373355503">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>95</Line>
          <Column>20</Column>
          <NodeId>17</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>95</Number>
              <Code>		appendFixedDelay(springScheduled, sb);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>110</Line>
          <Column>42</Column>
          <NodeId>18</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>110</Number>
              <Code>	private void appendFixedDelay(Scheduled springScheduled, StringBuilder sb) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>111</Line>
          <Column>29</Column>
          <NodeId>19</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>111</Number>
              <Code>		String fixedDelayString = springScheduled.fixedDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>111</Line>
          <Column>61</Column>
          <NodeId>20</NodeId>
          <Name>fixedDelayString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>111</Number>
              <Code>		String fixedDelayString = springScheduled.fixedDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>111</Line>
          <Column>10</Column>
          <NodeId>21</NodeId>
          <Name>fixedDelayString</Name>
          <Type></Type>
          <Length>16</Length>
          <Snippet>
            <Line>
              <Number>111</Number>
              <Code>		String fixedDelayString = springScheduled.fixedDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>112</Line>
          <Column>27</Column>
          <NodeId>22</NodeId>
          <Name>fixedDelayString</Name>
          <Type></Type>
          <Length>16</Length>
          <Snippet>
            <Line>
              <Number>112</Number>
              <Code>		if (StringUtils.isEmpty(fixedDelayString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>112</Line>
          <Column>26</Column>
          <NodeId>23</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>112</Number>
              <Code>		if (StringUtils.isEmpty(fixedDelayString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710102" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=102" SeverityIndex="1">
      <Path ResultId="1000471" PathId="102" SimilarityId="-835780232">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>94</Line>
          <Column>22</Column>
          <NodeId>17</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>94</Number>
              <Code>		appendInitialDelay(springScheduled, sb);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>134</Line>
          <Column>44</Column>
          <NodeId>18</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>134</Number>
              <Code>	private void appendInitialDelay(Scheduled springScheduled, StringBuilder sb) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>135</Line>
          <Column>31</Column>
          <NodeId>19</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>135</Number>
              <Code>		String initialDelayString = springScheduled.initialDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>135</Line>
          <Column>65</Column>
          <NodeId>20</NodeId>
          <Name>initialDelayString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>135</Number>
              <Code>		String initialDelayString = springScheduled.initialDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>135</Line>
          <Column>10</Column>
          <NodeId>21</NodeId>
          <Name>initialDelayString</Name>
          <Type></Type>
          <Length>18</Length>
          <Snippet>
            <Line>
              <Number>135</Number>
              <Code>		String initialDelayString = springScheduled.initialDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>142</Line>
          <Column>28</Column>
          <NodeId>22</NodeId>
          <Name>initialDelayString</Name>
          <Type></Type>
          <Length>18</Length>
          <Snippet>
            <Line>
              <Number>142</Number>
              <Code>		if (!StringUtils.isEmpty(initialDelayString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>142</Line>
          <Column>27</Column>
          <NodeId>23</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>142</Number>
              <Code>		if (!StringUtils.isEmpty(initialDelayString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710103" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=103" SeverityIndex="1">
      <Path ResultId="1000471" PathId="103" SimilarityId="-2036150705">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>30</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/ScheduleDescriptionGenerator.java</FileName>
          <Line>39</Line>
          <Column>68</Column>
          <NodeId>12</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			SpringSchedule extracted = springScheduledExtractor.extract(data.springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>65</Line>
          <Column>42</Column>
          <NodeId>13</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>65</Number>
              <Code>	public SpringSchedule extract(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>14</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		SpringSchedule data = extractSimpleString(springScheduled);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>76</Line>
          <Column>55</Column>
          <NodeId>15</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>76</Number>
              <Code>	private SpringSchedule extractSimpleString(Scheduled springScheduled) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>84</Line>
          <Column>17</Column>
          <NodeId>16</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>84</Number>
              <Code>		String cron = springScheduled.cron();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>94</Line>
          <Column>22</Column>
          <NodeId>17</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>94</Number>
              <Code>		appendInitialDelay(springScheduled, sb);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>134</Line>
          <Column>44</Column>
          <NodeId>18</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>134</Number>
              <Code>	private void appendInitialDelay(Scheduled springScheduled, StringBuilder sb) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>135</Line>
          <Column>31</Column>
          <NodeId>19</NodeId>
          <Name>springScheduled</Name>
          <Type></Type>
          <Length>15</Length>
          <Snippet>
            <Line>
              <Number>135</Number>
              <Code>		String initialDelayString = springScheduled.initialDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>135</Line>
          <Column>65</Column>
          <NodeId>20</NodeId>
          <Name>initialDelayString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>135</Number>
              <Code>		String initialDelayString = springScheduled.initialDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>135</Line>
          <Column>10</Column>
          <NodeId>21</NodeId>
          <Name>initialDelayString</Name>
          <Type></Type>
          <Length>18</Length>
          <Snippet>
            <Line>
              <Number>135</Number>
              <Code>		String initialDelayString = springScheduled.initialDelayString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>136</Line>
          <Column>27</Column>
          <NodeId>22</NodeId>
          <Name>initialDelayString</Name>
          <Type></Type>
          <Length>18</Length>
          <Snippet>
            <Line>
              <Number>136</Number>
              <Code>		if (StringUtils.isEmpty(initialDelayString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringScheduleExtractor.java</FileName>
          <Line>136</Line>
          <Column>26</Column>
          <NodeId>23</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>136</Number>
              <Code>		if (StringUtils.isEmpty(initialDelayString)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710104" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=104" SeverityIndex="1">
      <Path ResultId="1000471" PathId="104" SimilarityId="-1072996518">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>68</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>28</Line>
          <Column>27</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>		List&lt;DocAnnotationData&gt; list = collector.fetchMustBeDocumentParts();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>29</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>29</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>35</Line>
          <Column>32</Column>
          <NodeId>12</NodeId>
          <Name>springValue</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>35</Number>
              <Code>			if (StringUtils.isEmpty(data.springValue)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/MockPropertiesDescriptionGenerator.java</FileName>
          <Line>35</Line>
          <Column>27</Column>
          <NodeId>13</NodeId>
          <Name>isEmpty</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>35</Number>
              <Code>			if (StringUtils.isEmpty(data.springValue)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710105" FileName="java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java" Status="Recurrent" Line="31" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=105" SeverityIndex="1">
      <Path ResultId="1000471" PathId="105" SimilarityId="1836946722">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>31</Line>
          <Column>8</Column>
          <NodeId>2</NodeId>
          <Name>scope</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			data.scope=toCamelOne(fetchClass(element)).toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/DocGeneratorUtil.java</FileName>
          <Line>33</Line>
          <Column>10</Column>
          <NodeId>3</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>		return data;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>74</Column>
          <NodeId>4</NodeId>
          <Name>buildDataForMustBeDocumented</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>69</Line>
          <Column>22</Column>
          <NodeId>5</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>69</Number>
              <Code>			DocAnnotationData data = DocGeneratorUtil.buildDataForMustBeDocumented(info,field);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>71</Line>
          <Column>12</Column>
          <NodeId>6</NodeId>
          <Name>add</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>71</Number>
              <Code>			list.add(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/MustBeDocumentedDataCollector.java</FileName>
          <Line>74</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>74</Number>
              <Code>		return list;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/ClasspathDataCollector.java</FileName>
          <Line>46</Line>
          <Column>47</Column>
          <NodeId>8</NodeId>
          <Name>collect</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>		return mustbeDocumentedDataCollector.collect();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>40</Line>
          <Column>103</Column>
          <NodeId>9</NodeId>
          <Name>fetchMustBeDocumentParts</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>40</Number>
              <Code>		new KubernetesTemplateFilesGenerator().generate(files, new ClasspathDataCollector().fetchMustBeDocumentParts());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>43</Line>
          <Column>71</Column>
          <NodeId>10</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>43</Number>
              <Code>	public void generate(KubernetesFiles result, List&lt;DocAnnotationData&gt; list) throws IOException {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>44</Line>
          <Column>23</Column>
          <NodeId>11</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>44</Number>
              <Code>		if (list == null || list.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>48</Line>
          <Column>3</Column>
          <NodeId>12</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		list.add(newSecret("spring.datasource.username", "database", "Define username for database access"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>49</Line>
          <Column>3</Column>
          <NodeId>13</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>49</Number>
              <Code>		list.add(newSecret("spring.datasource.password", "database", "The password for database access"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>52</Line>
          <Column>38</Column>
          <NodeId>14</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>52</Number>
              <Code>		generateDeploymentFilePart(result, list);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>86</Line>
          <Column>90</Column>
          <NodeId>15</NodeId>
          <Name>list</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>86</Number>
              <Code>	private void generateDeploymentFilePart(KubernetesFiles result, List&lt;DocAnnotationData&gt; list) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>88</Line>
          <Column>35</Column>
          <NodeId>16</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>88</Number>
              <Code>			generateDeploymentCode(result, data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>111</Line>
          <Column>80</Column>
          <NodeId>17</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>111</Number>
              <Code>	private void generateDeploymentCode(KubernetesFiles result, DocAnnotationData data) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>114</Line>
          <Column>28</Column>
          <NodeId>18</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>114</Number>
              <Code>		String inspect = findKey(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>231</Line>
          <Column>43</Column>
          <NodeId>19</NodeId>
          <Name>data</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>231</Number>
              <Code>	private String findKey(DocAnnotationData data) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>233</Line>
          <Column>61</Column>
          <NodeId>20</NodeId>
          <Name>springValue</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>233</Number>
              <Code>			SpringValue extracted = springValueExtractor.extract(data.springValue);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>46</Line>
          <Column>36</Column>
          <NodeId>21</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>46</Number>
              <Code>	public SpringValue extract(String string) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>51</Line>
          <Column>23</Column>
          <NodeId>22</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>51</Number>
              <Code>		String[] splitted = string.split("\\$\\{");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>63</Line>
          <Column>14</Column>
          <NodeId>23</NodeId>
          <Name>string</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>63</Number>
              <Code>			value.key=string;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>63</Line>
          <Column>9</Column>
          <NodeId>24</NodeId>
          <Name>key</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>63</Number>
              <Code>			value.key=string;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>64</Line>
          <Column>11</Column>
          <NodeId>25</NodeId>
          <Name>value</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>64</Number>
              <Code>			return value;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>233</Line>
          <Column>56</Column>
          <NodeId>26</NodeId>
          <Name>extract</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>233</Number>
              <Code>			SpringValue extracted = springValueExtractor.extract(data.springValue);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>233</Line>
          <Column>16</Column>
          <NodeId>27</NodeId>
          <Name>extracted</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>233</Number>
              <Code>			SpringValue extracted = springValueExtractor.extract(data.springValue);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>235</Line>
          <Column>12</Column>
          <NodeId>28</NodeId>
          <Name>extracted</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>235</Number>
              <Code>				return extracted.getKey();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/spring/SpringValueExtractor.java</FileName>
          <Line>12</Line>
          <Column>11</Column>
          <NodeId>29</NodeId>
          <Name>key</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>12</Number>
              <Code>			return key;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>235</Line>
          <Column>28</Column>
          <NodeId>30</NodeId>
          <Name>getKey</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>235</Number>
              <Code>				return extracted.getKey();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>114</Line>
          <Column>27</Column>
          <NodeId>31</NodeId>
          <Name>findKey</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>114</Number>
              <Code>		String inspect = findKey(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>114</Line>
          <Column>10</Column>
          <NodeId>32</NodeId>
          <Name>inspect</Name>
          <Type></Type>
          <Length>7</Length>
          <Snippet>
            <Line>
              <Number>114</Number>
              <Code>		String inspect = findKey(data);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>115</Line>
          <Column>26</Column>
          <NodeId>33</NodeId>
          <Name>inspect</Name>
          <Type></Type>
          <Length>7</Length>
          <Snippet>
            <Line>
              <Number>115</Number>
              <Code>		if (inspect == null || inspect.isEmpty()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>118</Line>
          <Column>22</Column>
          <NodeId>34</NodeId>
          <Name>inspect</Name>
          <Type></Type>
          <Length>7</Length>
          <Snippet>
            <Line>
              <Number>118</Number>
              <Code>		String springENV = inspect.replace('.', '_').toUpperCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>118</Line>
          <Column>37</Column>
          <NodeId>35</NodeId>
          <Name>replace</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>118</Number>
              <Code>		String springENV = inspect.replace('.', '_').toUpperCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710106" FileName="java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java" Status="Recurrent" Line="66" Column="45" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=106" SeverityIndex="1">
      <Path ResultId="1000471" PathId="106" SimilarityId="-176764598">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>66</Line>
          <Column>45</Column>
          <NodeId>1</NodeId>
          <Name>toLowerCase</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>66</Number>
              <Code>		return useCase.getSimpleName().toLowerCase();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>49</Line>
          <Column>29</Column>
          <NodeId>2</NodeId>
          <Name>createIdentifier</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>49</Number>
              <Code>		sb.append(createIdentifier(useCase));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>49</Line>
          <Column>12</Column>
          <NodeId>3</NodeId>
          <Name>append</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>49</Number>
              <Code>		sb.append(createIdentifier(useCase));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>50</Line>
          <Column>3</Column>
          <NodeId>4</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>52</Line>
          <Column>4</Column>
          <NodeId>5</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>52</Number>
              <Code>			sb.append(UseCaseRestDoc.DEFAULT_VARIANT);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>17</Column>
          <NodeId>6</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>28</Column>
          <NodeId>7</NodeId>
          <Name>toString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>10</Column>
          <NodeId>8</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>57</Line>
          <Column>37</Column>
          <NodeId>9</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>57</Number>
              <Code>		if (alreadyCreatedPathes.contains(path)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>57</Line>
          <Column>36</Column>
          <NodeId>10</NodeId>
          <Name>contains</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>57</Number>
              <Code>		if (alreadyCreatedPathes.contains(path)) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
  <Query id="1663" categories="PCI DSS v3.2;PCI DSS (3.2) - 6.5.5 - Improper error handling,NIST SP 800-53;SC-5 Denial of Service Protection (P1)" cweId="248" name="Uncaught_Exception" group="Java_Low_Visibility" Severity="Low" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="1" QueryPath="Java\Cx\Java Low Visibility\Uncaught Exception Version:1" QueryVersionCode="68040281">
    <Result NodeId="10004710038" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="30" Column="4" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=38" SeverityIndex="1">
      <Path ResultId="1000471" PathId="38" SimilarityId="633473184">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>30</Line>
          <Column>4</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>30</Number>
              <Code>			throw new IllegalArgumentException("call with target gen folder as first parameter only!");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>28</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710039" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="159" Column="4" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=39" SeverityIndex="1">
      <Path ResultId="1000471" PathId="39" SimilarityId="1477291663">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>159</Line>
          <Column>4</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>159</Number>
              <Code>			throw new IllegalStateException(e + " folder not found :" + envFolder.getAbsolutePath());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>38</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710040" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="253" Column="5" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=40" SeverityIndex="1">
      <Path ResultId="1000471" PathId="40" SimilarityId="-539544069">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>253</Line>
          <Column>5</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>253</Number>
              <Code>				throw new IOException("Was not able to create secret file:" + secretFile);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>38</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710041" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="285" Column="4" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=41" SeverityIndex="1">
      <Path ResultId="1000471" PathId="41" SimilarityId="-187695247">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>285</Line>
          <Column>4</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>285</Number>
              <Code>			throw new IllegalStateException("folder does not exist:" + folder.getAbsolutePath());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>38</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710042" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelAsciiDocGenerator.java" Status="Recurrent" Line="28" Column="4" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=42" SeverityIndex="1">
      <Path ResultId="1000471" PathId="42" SimilarityId="1232761483">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelAsciiDocGenerator.java</FileName>
          <Line>28</Line>
          <Column>4</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>			throw new IllegalArgumentException();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>28</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710043" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="100" Column="5" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=43" SeverityIndex="1">
      <Path ResultId="1000471" PathId="43" SimilarityId="831395861">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>100</Line>
          <Column>5</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>100</Number>
              <Code>				throw new IllegalStateException("UseCaseRestDoc annotation may only added one time to test method!");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>28</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710044" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="152" Column="3" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=44" SeverityIndex="1">
      <Path ResultId="1000471" PathId="44" SimilarityId="1834357012">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>152</Line>
          <Column>3</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>152</Number>
              <Code>		throw new IllegalStateException("No restdoc found for Usecase:"+entry.usecaseEntry.getAnnotationName()+"\nIt is annotated as @UseCaseRestDoc, but no restdoc files generated!\n"</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>28</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710045" FileName="java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java" Status="Recurrent" Line="58" Column="4" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=45" SeverityIndex="1">
      <Path ResultId="1000471" PathId="45" SimilarityId="-1532081173">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>58</Line>
          <Column>4</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>58</Number>
              <Code>			throw new IllegalStateException("The path: " + path</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>28</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710046" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="20" Column="4" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=46" SeverityIndex="1">
      <Path ResultId="1000471" PathId="46" SimilarityId="-1280834570">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>20</Line>
          <Column>4</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>20</Number>
              <Code>			throw new IllegalArgumentException("null not allowed as file!");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>38</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710047" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="20" Column="4" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=47" SeverityIndex="1">
      <Path ResultId="1000471" PathId="47" SimilarityId="967222842">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>20</Line>
          <Column>4</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>20</Number>
              <Code>			throw new IllegalArgumentException("null not allowed as file!");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>28</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710048" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="25" Column="5" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=48" SeverityIndex="1">
      <Path ResultId="1000471" PathId="48" SimilarityId="-502836640">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>25</Line>
          <Column>5</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>25</Number>
              <Code>				throw new IOException("was not able to delete existing file:"+targetFile);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>38</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710049" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="25" Column="5" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=49" SeverityIndex="1">
      <Path ResultId="1000471" PathId="49" SimilarityId="552622864">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>25</Line>
          <Column>5</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>25</Number>
              <Code>				throw new IOException("was not able to delete existing file:"+targetFile);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>28</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710050" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="32" Column="5" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=50" SeverityIndex="1">
      <Path ResultId="1000471" PathId="50" SimilarityId="-1834390286">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>32</Line>
          <Column>5</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>32</Number>
              <Code>				throw new IllegalStateException("Not able to create folder structure for:"+targetFile);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>38</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710051" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="32" Column="5" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=51" SeverityIndex="1">
      <Path ResultId="1000471" PathId="51" SimilarityId="-425516866">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>32</Line>
          <Column>5</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>32</Number>
              <Code>				throw new IllegalStateException("Not able to create folder structure for:"+targetFile);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>28</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710052" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="35" Column="5" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=52" SeverityIndex="1">
      <Path ResultId="1000471" PathId="52" SimilarityId="1320994839">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>35</Line>
          <Column>5</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>35</Number>
              <Code>				throw new IllegalStateException("was not able to create new file:"+targetFile);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>38</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>38</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710053" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="35" Column="5" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=53" SeverityIndex="1">
      <Path ResultId="1000471" PathId="53" SimilarityId="1544410425">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>35</Line>
          <Column>5</Column>
          <NodeId>1</NodeId>
          <Name>ThrowStmt</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>35</Number>
              <Code>				throw new IllegalStateException("was not able to create new file:"+targetFile);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>28</Line>
          <Column>21</Column>
          <NodeId>2</NodeId>
          <Name>main</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>28</Number>
              <Code>	public static void main(String[] args) throws Exception {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
  <Query id="3591" cweId="474" name="Portability_Flaw_In_File_Separator" group="Java_Low_Visibility" Severity="Low" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="1" QueryPath="Java\Cx\Java Low Visibility\Portability Flaw In File Separator Version:2" QueryVersionCode="92401623">
    <Result NodeId="10004710056" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="263" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=56" SeverityIndex="1">
      <Path ResultId="1000471" PathId="56" SimilarityId="-506123131">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>""secret/""</Name>
          <Type></Type>
          <Length>9</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>263</Line>
          <Column>23</Column>
          <NodeId>2</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>263</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "secret/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710057" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="267" Column="58" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=57" SeverityIndex="1">
      <Path ResultId="1000471" PathId="57" SimilarityId="-2078347927">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>267</Line>
          <Column>58</Column>
          <NodeId>1</NodeId>
          <Name>""gen/""</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>267</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "gen/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>267</Line>
          <Column>23</Column>
          <NodeId>2</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>267</Number>
              <Code>		return assertExists(new File(ensureKubernetesFolder(), "gen/"));</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710058" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="271" Column="32" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=58" SeverityIndex="1">
      <Path ResultId="1000471" PathId="58" SimilarityId="-1745065351">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>271</Line>
          <Column>32</Column>
          <NodeId>1</NodeId>
          <Name>""./sechub-server""</Name>
          <Type></Type>
          <Length>17</Length>
          <Snippet>
            <Line>
              <Number>271</Number>
              <Code>		File secHubServer = new File("./sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>271</Line>
          <Column>23</Column>
          <NodeId>2</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>271</Number>
              <Code>		File secHubServer = new File("./sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710059" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="274" Column="28" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=59" SeverityIndex="1">
      <Path ResultId="1000471" PathId="59" SimilarityId="-763757465">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>274</Line>
          <Column>28</Column>
          <NodeId>1</NodeId>
          <Name>""./../sechub-server""</Name>
          <Type></Type>
          <Length>20</Length>
          <Snippet>
            <Line>
              <Number>274</Number>
              <Code>			secHubServer = new File("./../sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>274</Line>
          <Column>19</Column>
          <NodeId>2</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>274</Number>
              <Code>			secHubServer = new File("./../sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710060" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="33" Column="45" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=60" SeverityIndex="1">
      <Path ResultId="1000471" PathId="60" SimilarityId="1065625410">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>33</Line>
          <Column>45</Column>
          <NodeId>1</NodeId>
          <Name>""documents/gen/""</Name>
          <Type></Type>
          <Length>16</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>	public static final String DOCUMENTS_GEN = "documents/gen/";</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>33</Line>
          <Column>29</Column>
          <NodeId>2</NodeId>
          <Name>DOCUMENTS_GEN</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>33</Number>
              <Code>	public static final String DOCUMENTS_GEN = "documents/gen/";</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>116</Line>
          <Column>64</Column>
          <NodeId>3</NodeId>
          <Name>scanForSpringRestDocGenFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>116</Number>
              <Code>			File projectRestDocGenFolder = scanForSpringRestDocGenFolder(restDocEntry);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>116</Line>
          <Column>64</Column>
          <NodeId>4</NodeId>
          <Name>scanForSpringRestDocGenFolder</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>116</Number>
              <Code>			File projectRestDocGenFolder = scanForSpringRestDocGenFolder(restDocEntry);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>117</Line>
          <Column>65</Column>
          <NodeId>5</NodeId>
          <Name>copyToDocumentationProject</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>117</Number>
              <Code>			restDocEntry.copiedRestDocFolder = copyToDocumentationProject(projectRestDocGenFolder, id);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>130</Line>
          <Column>65</Column>
          <NodeId>6</NodeId>
          <Name>DOCUMENTS_GEN</Name>
          <Type></Type>
          <Length>13</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		File targetFolder = new File(sechHubDoc, "src/docs/asciidoc/"+DOCUMENTS_GEN + id);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>130</Line>
          <Column>23</Column>
          <NodeId>7</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		File targetFolder = new File(sechHubDoc, "src/docs/asciidoc/"+DOCUMENTS_GEN + id);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710061" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="57" Column="26" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=61" SeverityIndex="1">
      <Path ResultId="1000471" PathId="61" SimilarityId="-1903268327">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>57</Line>
          <Column>26</Column>
          <NodeId>1</NodeId>
          <Name>""./..""</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>57</Number>
              <Code>			rootFolder = new File("./..");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>57</Line>
          <Column>17</Column>
          <NodeId>2</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>57</Number>
              <Code>			rootFolder = new File("./..");</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710062" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="130" Column="44" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=62" SeverityIndex="1">
      <Path ResultId="1000471" PathId="62" SimilarityId="-1211131297">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>130</Line>
          <Column>44</Column>
          <NodeId>1</NodeId>
          <Name>""src/docs/asciidoc/""</Name>
          <Type></Type>
          <Length>20</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		File targetFolder = new File(sechHubDoc, "src/docs/asciidoc/"+DOCUMENTS_GEN + id);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>130</Line>
          <Column>23</Column>
          <NodeId>2</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		File targetFolder = new File(sechHubDoc, "src/docs/asciidoc/"+DOCUMENTS_GEN + id);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710063" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="146" Column="39" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=63" SeverityIndex="1">
      <Path ResultId="1000471" PathId="63" SimilarityId="-969489449">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>146</Line>
          <Column>39</Column>
          <NodeId>1</NodeId>
          <Name>""generated-snippets/""</Name>
          <Type></Type>
          <Length>21</Length>
          <Snippet>
            <Line>
              <Number>146</Number>
              <Code>			File expected = new File(buildDir, "generated-snippets/" + entry.path);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>146</Line>
          <Column>20</Column>
          <NodeId>2</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>146</Number>
              <Code>			File expected = new File(buildDir, "generated-snippets/" + entry.path);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710064" FileName="java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java" Status="Recurrent" Line="48" Column="13" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=64" SeverityIndex="1">
      <Path ResultId="1000471" PathId="64" SimilarityId="-1440241434">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>48</Line>
          <Column>13</Column>
          <NodeId>1</NodeId>
          <Name>""/""</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>48</Line>
          <Column>12</Column>
          <NodeId>2</NodeId>
          <Name>append</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>49</Line>
          <Column>3</Column>
          <NodeId>3</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>49</Number>
              <Code>		sb.append(createIdentifier(useCase));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>50</Line>
          <Column>3</Column>
          <NodeId>4</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>52</Line>
          <Column>4</Column>
          <NodeId>5</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>52</Number>
              <Code>			sb.append(UseCaseRestDoc.DEFAULT_VARIANT);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>17</Column>
          <NodeId>6</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>28</Column>
          <NodeId>7</NodeId>
          <Name>toString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>10</Column>
          <NodeId>8</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>62</Line>
          <Column>10</Column>
          <NodeId>9</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>62</Number>
              <Code>		return path;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>113</Line>
          <Column>45</Column>
          <NodeId>10</NodeId>
          <Name>createPath</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>113</Number>
              <Code>			String id = RestDocPathFactory.createPath(useCaseClass, restDoc.variant());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>113</Line>
          <Column>11</Column>
          <NodeId>11</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>113</Number>
              <Code>			String id = RestDocPathFactory.createPath(useCaseClass, restDoc.variant());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>117</Line>
          <Column>91</Column>
          <NodeId>12</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>117</Number>
              <Code>			restDocEntry.copiedRestDocFolder = copyToDocumentationProject(projectRestDocGenFolder, id);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>129</Line>
          <Column>79</Column>
          <NodeId>13</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>129</Number>
              <Code>	private File copyToDocumentationProject(File projectRestDocGenFolder, String id) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>130</Line>
          <Column>81</Column>
          <NodeId>14</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		File targetFolder = new File(sechHubDoc, "src/docs/asciidoc/"+DOCUMENTS_GEN + id);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>130</Line>
          <Column>23</Column>
          <NodeId>15</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		File targetFolder = new File(sechHubDoc, "src/docs/asciidoc/"+DOCUMENTS_GEN + id);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710065" FileName="java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java" Status="Recurrent" Line="48" Column="13" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=65" SeverityIndex="1">
      <Path ResultId="1000471" PathId="65" SimilarityId="-1139439871">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>48</Line>
          <Column>13</Column>
          <NodeId>1</NodeId>
          <Name>""/""</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>48</Line>
          <Column>12</Column>
          <NodeId>2</NodeId>
          <Name>append</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>49</Line>
          <Column>3</Column>
          <NodeId>3</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>49</Number>
              <Code>		sb.append(createIdentifier(useCase));</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>50</Line>
          <Column>3</Column>
          <NodeId>4</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>52</Line>
          <Column>4</Column>
          <NodeId>5</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>52</Number>
              <Code>			sb.append(UseCaseRestDoc.DEFAULT_VARIANT);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>17</Column>
          <NodeId>6</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>28</Column>
          <NodeId>7</NodeId>
          <Name>toString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>10</Column>
          <NodeId>8</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>62</Line>
          <Column>10</Column>
          <NodeId>9</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>62</Number>
              <Code>		return path;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>113</Line>
          <Column>45</Column>
          <NodeId>10</NodeId>
          <Name>createPath</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>113</Number>
              <Code>			String id = RestDocPathFactory.createPath(useCaseClass, restDoc.variant());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>113</Line>
          <Column>11</Column>
          <NodeId>11</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>113</Number>
              <Code>			String id = RestDocPathFactory.createPath(useCaseClass, restDoc.variant());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>115</Line>
          <Column>24</Column>
          <NodeId>12</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>115</Number>
              <Code>			restDocEntry.path = id;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>115</Line>
          <Column>16</Column>
          <NodeId>13</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>115</Number>
              <Code>			restDocEntry.path = id;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>116</Line>
          <Column>65</Column>
          <NodeId>14</NodeId>
          <Name>restDocEntry</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>116</Number>
              <Code>			File projectRestDocGenFolder = scanForSpringRestDocGenFolder(restDocEntry);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>143</Line>
          <Column>65</Column>
          <NodeId>15</NodeId>
          <Name>entry</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>143</Number>
              <Code>	private File scanForSpringRestDocGenFolder(UseCaseRestDocEntry entry) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>146</Line>
          <Column>68</Column>
          <NodeId>16</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>146</Number>
              <Code>			File expected = new File(buildDir, "generated-snippets/" + entry.path);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>146</Line>
          <Column>20</Column>
          <NodeId>17</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>146</Number>
              <Code>			File expected = new File(buildDir, "generated-snippets/" + entry.path);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710066" FileName="java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java" Status="Recurrent" Line="50" Column="13" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=66" SeverityIndex="1">
      <Path ResultId="1000471" PathId="66" SimilarityId="-1440241434">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>50</Line>
          <Column>13</Column>
          <NodeId>1</NodeId>
          <Name>""/""</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>50</Line>
          <Column>12</Column>
          <NodeId>2</NodeId>
          <Name>append</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>52</Line>
          <Column>4</Column>
          <NodeId>3</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>52</Number>
              <Code>			sb.append(UseCaseRestDoc.DEFAULT_VARIANT);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>17</Column>
          <NodeId>4</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>28</Column>
          <NodeId>5</NodeId>
          <Name>toString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>10</Column>
          <NodeId>6</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>62</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>62</Number>
              <Code>		return path;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>113</Line>
          <Column>45</Column>
          <NodeId>8</NodeId>
          <Name>createPath</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>113</Number>
              <Code>			String id = RestDocPathFactory.createPath(useCaseClass, restDoc.variant());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>113</Line>
          <Column>11</Column>
          <NodeId>9</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>113</Number>
              <Code>			String id = RestDocPathFactory.createPath(useCaseClass, restDoc.variant());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>117</Line>
          <Column>91</Column>
          <NodeId>10</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>117</Number>
              <Code>			restDocEntry.copiedRestDocFolder = copyToDocumentationProject(projectRestDocGenFolder, id);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>129</Line>
          <Column>79</Column>
          <NodeId>11</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>129</Number>
              <Code>	private File copyToDocumentationProject(File projectRestDocGenFolder, String id) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>130</Line>
          <Column>81</Column>
          <NodeId>12</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		File targetFolder = new File(sechHubDoc, "src/docs/asciidoc/"+DOCUMENTS_GEN + id);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>130</Line>
          <Column>23</Column>
          <NodeId>13</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		File targetFolder = new File(sechHubDoc, "src/docs/asciidoc/"+DOCUMENTS_GEN + id);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710067" FileName="java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java" Status="Recurrent" Line="50" Column="13" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=67" SeverityIndex="1">
      <Path ResultId="1000471" PathId="67" SimilarityId="-1139439871">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>50</Line>
          <Column>13</Column>
          <NodeId>1</NodeId>
          <Name>""/""</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>50</Line>
          <Column>12</Column>
          <NodeId>2</NodeId>
          <Name>append</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>50</Number>
              <Code>		sb.append("/");</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>52</Line>
          <Column>4</Column>
          <NodeId>3</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>52</Number>
              <Code>			sb.append(UseCaseRestDoc.DEFAULT_VARIANT);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>17</Column>
          <NodeId>4</NodeId>
          <Name>sb</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>28</Column>
          <NodeId>5</NodeId>
          <Name>toString</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>56</Line>
          <Column>10</Column>
          <NodeId>6</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>56</Number>
              <Code>		String path = sb.toString();</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/RestDocPathFactory.java</FileName>
          <Line>62</Line>
          <Column>10</Column>
          <NodeId>7</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>62</Number>
              <Code>		return path;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>113</Line>
          <Column>45</Column>
          <NodeId>8</NodeId>
          <Name>createPath</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>113</Number>
              <Code>			String id = RestDocPathFactory.createPath(useCaseClass, restDoc.variant());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>113</Line>
          <Column>11</Column>
          <NodeId>9</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>113</Number>
              <Code>			String id = RestDocPathFactory.createPath(useCaseClass, restDoc.variant());</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>115</Line>
          <Column>24</Column>
          <NodeId>10</NodeId>
          <Name>id</Name>
          <Type></Type>
          <Length>2</Length>
          <Snippet>
            <Line>
              <Number>115</Number>
              <Code>			restDocEntry.path = id;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>115</Line>
          <Column>16</Column>
          <NodeId>11</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>115</Number>
              <Code>			restDocEntry.path = id;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>116</Line>
          <Column>65</Column>
          <NodeId>12</NodeId>
          <Name>restDocEntry</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>116</Number>
              <Code>			File projectRestDocGenFolder = scanForSpringRestDocGenFolder(restDocEntry);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>143</Line>
          <Column>65</Column>
          <NodeId>13</NodeId>
          <Name>entry</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>143</Number>
              <Code>	private File scanForSpringRestDocGenFolder(UseCaseRestDocEntry entry) {</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>146</Line>
          <Column>68</Column>
          <NodeId>14</NodeId>
          <Name>path</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>146</Number>
              <Code>			File expected = new File(buildDir, "generated-snippets/" + entry.path);</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>146</Line>
          <Column>20</Column>
          <NodeId>15</NodeId>
          <Name>File</Name>
          <Type></Type>
          <Length>3</Length>
          <Snippet>
            <Line>
              <Number>146</Number>
              <Code>			File expected = new File(buildDir, "generated-snippets/" + entry.path);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
  <Query id="605" categories="PCI DSS v3.2;PCI DSS (3.2) - 6.5.5 - Improper error handling,NIST SP 800-53;SC-5 Denial of Service Protection (P1)" cweId="248" name="Improper_Exception_Handling" group="Java_Low_Visibility" Severity="Low" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="1" QueryPath="Java\Cx\Java Low Visibility\Improper Exception Handling Version:0" QueryVersionCode="605">
    <Result NodeId="10004710001" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelAsciiDocGenerator.java" Status="Recurrent" Line="112" Column="53" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=1" SeverityIndex="1">
      <Path ResultId="1000471" PathId="1" SimilarityId="11180091">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelAsciiDocGenerator.java</FileName>
          <Line>112</Line>
          <Column>53</Column>
          <NodeId>1</NodeId>
          <Name>listFiles</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>112</Number>
              <Code>		File[] files = entry.copiedRestDocFolder.listFiles();</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710002" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="64" Column="40" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=2" SeverityIndex="1">
      <Path ResultId="1000471" PathId="2" SimilarityId="-670479541">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>64</Line>
          <Column>40</Column>
          <NodeId>1</NodeId>
          <Name>listFiles</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>64</Number>
              <Code>		File[] subDirs = rootFolder.listFiles(new FileFilter() {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710003" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="73" Column="44" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=3" SeverityIndex="1">
      <Path ResultId="1000471" PathId="3" SimilarityId="1640543071">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>73</Line>
          <Column>44</Column>
          <NodeId>1</NodeId>
          <Name>listFiles</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>73</Number>
              <Code>			File[] foundBuildDirs = subDir.listFiles(new FileFilter() {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710004" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="157" Column="24" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=4" SeverityIndex="1">
      <Path ResultId="1000471" PathId="4" SimilarityId="-263190917">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>157</Line>
          <Column>24</Column>
          <NodeId>1</NodeId>
          <Name>exists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>157</Number>
              <Code>		if (!envFolder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710005" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="272" Column="27" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=5" SeverityIndex="1">
      <Path ResultId="1000471" PathId="5" SimilarityId="1663167859">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>272</Line>
          <Column>27</Column>
          <NodeId>1</NodeId>
          <Name>exists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>272</Number>
              <Code>		if (!secHubServer.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710006" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="284" Column="21" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=6" SeverityIndex="1">
      <Path ResultId="1000471" PathId="6" SimilarityId="-1815879813">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>284</Line>
          <Column>21</Column>
          <NodeId>1</NodeId>
          <Name>exists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>284</Number>
              <Code>		if (!folder.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710007" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="54" Column="18" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=7" SeverityIndex="1">
      <Path ResultId="1000471" PathId="7" SimilarityId="19348359">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>54</Line>
          <Column>18</Column>
          <NodeId>1</NodeId>
          <Name>exists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>54</Number>
              <Code>		if (file.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710008" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="60" Column="25" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=8" SeverityIndex="1">
      <Path ResultId="1000471" PathId="8" SimilarityId="-1345018341">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>60</Line>
          <Column>25</Column>
          <NodeId>1</NodeId>
          <Name>exists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>60</Number>
              <Code>		if (!sechHubDoc.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710009" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="147" Column="23" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=9" SeverityIndex="1">
      <Path ResultId="1000471" PathId="9" SimilarityId="-1845654083">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>147</Line>
          <Column>23</Column>
          <NodeId>1</NodeId>
          <Name>exists</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>147</Number>
              <Code>			if (expected.exists()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710010" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="77" Column="29" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=10" SeverityIndex="1">
      <Path ResultId="1000471" PathId="10" SimilarityId="509530377">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>77</Line>
          <Column>29</Column>
          <NodeId>1</NodeId>
          <Name>isDirectory</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>77</Number>
              <Code>					return file.isDirectory() &amp;&amp; file.getName().equals("build");</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710011" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="68" Column="28" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=11" SeverityIndex="1">
      <Path ResultId="1000471" PathId="11" SimilarityId="1134856433">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>68</Line>
          <Column>28</Column>
          <NodeId>1</NodeId>
          <Name>isDirectory</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>68</Number>
              <Code>				return file.isDirectory();</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
  <Query id="3884" categories="FISMA 2014;Access Control,NIST SP 800-53;AC-3 Access Enforcement (P1),OWASP Top 10 2017;A6-Security Misconfiguration" cweId="732" name="Incorrect_Permission_Assignment_For_Critical_Resources" group="Java_Low_Visibility" Severity="Low" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="1" QueryPath="Java\Cx\Java Low Visibility\Incorrect Permission Assignment For Critical Resources Version:1" QueryVersionCode="96413556">
    <Result NodeId="10004710070" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="274" Column="4" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=70" SeverityIndex="1">
      <Path ResultId="1000471" PathId="70" SimilarityId="-1721453111">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>274</Line>
          <Column>4</Column>
          <NodeId>1</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>274</Number>
              <Code>			secHubServer = new File("./../sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710071" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="57" Column="4" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=71" SeverityIndex="1">
      <Path ResultId="1000471" PathId="71" SimilarityId="1261181921">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>57</Line>
          <Column>4</Column>
          <NodeId>1</NodeId>
          <Name>rootFolder</Name>
          <Type></Type>
          <Length>10</Length>
          <Snippet>
            <Line>
              <Number>57</Number>
              <Code>			rootFolder = new File("./..");</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710072" FileName="java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java" Status="Recurrent" Line="34" Column="8" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=72" SeverityIndex="1">
      <Path ResultId="1000471" PathId="72" SimilarityId="-1450408927">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/AsciidocGenerator.java</FileName>
          <Line>34</Line>
          <Column>8</Column>
          <NodeId>1</NodeId>
          <Name>documentsGenFolder</Name>
          <Type></Type>
          <Length>18</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>		File documentsGenFolder = new File(path);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710073" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="271" Column="8" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=73" SeverityIndex="1">
      <Path ResultId="1000471" PathId="73" SimilarityId="341668353">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>271</Line>
          <Column>8</Column>
          <NodeId>1</NodeId>
          <Name>secHubServer</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>271</Number>
              <Code>		File secHubServer = new File("./sechub-server");</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710074" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelAsciiDocGenerator.java" Status="Recurrent" Line="112" Column="10" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=74" SeverityIndex="1">
      <Path ResultId="1000471" PathId="74" SimilarityId="1975386593">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelAsciiDocGenerator.java</FileName>
          <Line>112</Line>
          <Column>10</Column>
          <NodeId>1</NodeId>
          <Name>files</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>112</Number>
              <Code>		File[] files = entry.copiedRestDocFolder.listFiles();</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710075" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="52" Column="8" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=75" SeverityIndex="1">
      <Path ResultId="1000471" PathId="75" SimilarityId="276527073">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>52</Line>
          <Column>8</Column>
          <NodeId>1</NodeId>
          <Name>file</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>52</Number>
              <Code>		File file = new File("sechub-doc");</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710076" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="130" Column="8" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=76" SeverityIndex="1">
      <Path ResultId="1000471" PathId="76" SimilarityId="1189596287">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>130</Line>
          <Column>8</Column>
          <NodeId>1</NodeId>
          <Name>targetFolder</Name>
          <Type></Type>
          <Length>12</Length>
          <Snippet>
            <Line>
              <Number>130</Number>
              <Code>		File targetFolder = new File(sechHubDoc, "src/docs/asciidoc/"+DOCUMENTS_GEN + id);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710077" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="146" Column="9" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=77" SeverityIndex="1">
      <Path ResultId="1000471" PathId="77" SimilarityId="1454105633">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>146</Line>
          <Column>9</Column>
          <NodeId>1</NodeId>
          <Name>expected</Name>
          <Type></Type>
          <Length>8</Length>
          <Snippet>
            <Line>
              <Number>146</Number>
              <Code>			File expected = new File(buildDir, "generated-snippets/" + entry.path);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
  <Query id="3890" categories="FISMA 2014;Identification And Authentication,NIST SP 800-53;AC-3 Access Enforcement (P1)" cweId="285" name="Improper_Resource_Access_Authorization" group="Java_Low_Visibility" Severity="Low" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="1" QueryPath="Java\Cx\Java Low Visibility\Improper Resource Access Authorization Version:3" QueryVersionCode="96524674">
    <Result NodeId="10004710078" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="39" Column="12" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=78" SeverityIndex="1">
      <Path ResultId="1000471" PathId="78" SimilarityId="-957772358">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>39</Line>
          <Column>12</Column>
          <NodeId>1</NodeId>
          <Name>write</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>39</Number>
              <Code>			bw.write(text);</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710079" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelAsciiDocGenerator.java" Status="Recurrent" Line="112" Column="53" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=79" SeverityIndex="1">
      <Path ResultId="1000471" PathId="79" SimilarityId="346501308">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelAsciiDocGenerator.java</FileName>
          <Line>112</Line>
          <Column>53</Column>
          <NodeId>1</NodeId>
          <Name>listFiles</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>112</Number>
              <Code>		File[] files = entry.copiedRestDocFolder.listFiles();</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710080" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="64" Column="40" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=80" SeverityIndex="1">
      <Path ResultId="1000471" PathId="80" SimilarityId="689889196">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>64</Line>
          <Column>40</Column>
          <NodeId>1</NodeId>
          <Name>listFiles</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>64</Number>
              <Code>		File[] subDirs = rootFolder.listFiles(new FileFilter() {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710081" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="73" Column="44" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=81" SeverityIndex="1">
      <Path ResultId="1000471" PathId="81" SimilarityId="-682853864">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>73</Line>
          <Column>44</Column>
          <NodeId>1</NodeId>
          <Name>listFiles</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>73</Number>
              <Code>			File[] foundBuildDirs = subDir.listFiles(new FileFilter() {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710082" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="252" Column="33" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=82" SeverityIndex="1">
      <Path ResultId="1000471" PathId="82" SimilarityId="737978044">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>252</Line>
          <Column>33</Column>
          <NodeId>1</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>252</Number>
              <Code>			if (!secretFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710083" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="34" Column="33" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=83" SeverityIndex="1">
      <Path ResultId="1000471" PathId="83" SimilarityId="-1989232676">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>34</Line>
          <Column>33</Column>
          <NodeId>1</NodeId>
          <Name>createNewFile</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>34</Number>
              <Code>			if (!targetFile.createNewFile()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710084" FileName="java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java" Status="Recurrent" Line="31" Column="51" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=84" SeverityIndex="1">
      <Path ResultId="1000471" PathId="84" SimilarityId="526950940">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/util/TextFileWriter.java</FileName>
          <Line>31</Line>
          <Column>51</Column>
          <NodeId>1</NodeId>
          <Name>mkdirs</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>31</Number>
              <Code>			if (! parentFile.exists() &amp;&amp; !parentFile.mkdirs()) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
  <Query id="3877" categories="NIST SP 800-53;AC-3 Access Enforcement (P1)" cweId="495" name="Private_Array_Returned_From_A_Public_Method" group="Java_Low_Visibility" Severity="Low" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="1" QueryPath="Java\Cx\Java Low Visibility\Private Array Returned From A Public Method Version:1" QueryVersionCode="96316382">
    <Result NodeId="10004710068" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseModel.java" Status="Recurrent" Line="48" Column="26" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=68" SeverityIndex="1">
      <Path ResultId="1000471" PathId="68" SimilarityId="852021487">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseModel.java</FileName>
          <Line>48</Line>
          <Column>26</Column>
          <NodeId>1</NodeId>
          <Name>groups</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>48</Number>
              <Code>		private UseCaseGroup[] groups;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseModel.java</FileName>
          <Line>60</Line>
          <Column>11</Column>
          <NodeId>2</NodeId>
          <Name>groups</Name>
          <Type></Type>
          <Length>6</Length>
          <Snippet>
            <Line>
              <Number>60</Number>
              <Code>			return groups;</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710069" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseModel.java" Status="Recurrent" Line="127" Column="18" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=69" SeverityIndex="1">
      <Path ResultId="1000471" PathId="69" SimilarityId="515255598">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseModel.java</FileName>
          <Line>127</Line>
          <Column>18</Column>
          <NodeId>1</NodeId>
          <Name>next</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>127</Number>
              <Code>			private int[] next;</Code>
            </Line>
          </Snippet>
        </PathNode>
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseModel.java</FileName>
          <Line>193</Line>
          <Column>12</Column>
          <NodeId>2</NodeId>
          <Name>next</Name>
          <Type></Type>
          <Length>4</Length>
          <Snippet>
            <Line>
              <Number>193</Number>
              <Code>				return next;</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
  <Query id="2756" categories="FISMA 2014;System And Information Integrity,NIST SP 800-53;AC-3 Access Enforcement (P1)" cweId="362" name="Race_Condition_Format_Flaw" group="Java_Low_Visibility" Severity="Low" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="1" QueryPath="Java\Cx\Java Low Visibility\Race Condition Format Flaw Version:2" QueryVersionCode="81399663">
    <Result NodeId="10004710055" FileName="java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java" Status="Recurrent" Line="228" Column="27" FalsePositive="False" Severity="Low" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=55" SeverityIndex="1">
      <Path ResultId="1000471" PathId="55" SimilarityId="-1470283610">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/kubernetes/KubernetesTemplateFilesGenerator.java</FileName>
          <Line>228</Line>
          <Column>27</Column>
          <NodeId>1</NodeId>
          <Name>format</Name>
          <Type></Type>
          <Length>1</Length>
          <Snippet>
            <Line>
              <Number>228</Number>
              <Code>		return dateFormat.format(new Date());</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
  <Query id="5274" cweId="778" name="Insufficient_Logging_of_Exceptions" group="Java_Best_Coding_Practice" Severity="Information" Language="Java" LanguageHash="0129784306302162" LanguageChangeDate="2018-09-05T00:00:00.0000000" SeverityIndex="0" QueryPath="Java\Cx\Java Best Coding Practice\Insufficient Logging of Exceptions Version:1" QueryVersionCode="116680451">
    <Result NodeId="10004710107" FileName="java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingModel.java" Status="Recurrent" Line="125" Column="6" FalsePositive="False" Severity="Information" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=107" SeverityIndex="0">
      <Path ResultId="1000471" PathId="107" SimilarityId="829926152">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/messaging/DomainMessagingModel.java</FileName>
          <Line>125</Line>
          <Column>6</Column>
          <NodeId>1</NodeId>
          <Name>catch</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>125</Number>
              <Code>			} catch (Exception e) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710108" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseModelDataCollector.java" Status="Recurrent" Line="88" Column="7" FalsePositive="False" Severity="Information" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=108" SeverityIndex="0">
      <Path ResultId="1000471" PathId="108" SimilarityId="1582817454">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseModelDataCollector.java</FileName>
          <Line>88</Line>
          <Column>7</Column>
          <NodeId>1</NodeId>
          <Name>catch</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>88</Number>
              <Code>				} catch (Exception e) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
    <Result NodeId="10004710109" FileName="java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java" Status="Recurrent" Line="137" Column="5" FalsePositive="False" Severity="Information" AssignToUser="" state="0" Remark="" DeepLink="https://defvm1676.intranet.example.org/CxWebClient/ViewerMain.aspx?scanid=1000471&amp;projectid=113&amp;pathid=109" SeverityIndex="0">
      <Path ResultId="1000471" PathId="109" SimilarityId="-1977688134">
        <PathNode>
          <FileName>java/com/mercedesbenz/sechub/docgen/usecase/UseCaseRestDocModelDataCollector.java</FileName>
          <Line>137</Line>
          <Column>5</Column>
          <NodeId>1</NodeId>
          <Name>catch</Name>
          <Type></Type>
          <Length>5</Length>
          <Snippet>
            <Line>
              <Number>137</Number>
              <Code>		} catch (IOException e) {</Code>
            </Line>
          </Snippet>
        </PathNode>
      </Path>
    </Result>
  </Query>
</CxXMLResults>