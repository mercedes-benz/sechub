# SPDX-License-Identifier: MIT

# This is a sample values file containing the defaults.

image: "ghcr.io/mercedes-benz/sechub/web-server:latest"
# See https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
imagePullPolicy: "IfNotPresent"
# Optional: If your image is in a private registry, you can specify pull secrets defined in k8s
#   Docs: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
#   Example:
# imagePullSecrets: |-
#   - name: sechub-pull-secret
#   - name: sps2

# Number of instances to spin up
replicaCount: 1

resources:
  requests:
    # Initial container memory size
    memory: 256Mi
  limits:
    # Maximum container memory size
    memory: 1Gi

web_server:
  security:
    # Encryption key for access token - a string of 32 characters
    encryptionKey: "Change me. Change me. Change me."
  sechubConnection:
    # Connection url to SecHub server
    url: "https://sechub-server-internal:8443"
    # trustAllCertificates - 'true' if server uses a self-signed SSL certificate
    trustAllCertificates: false
  # Possible values: server, development
  startMode: server
  logging:
    type:
      enabled: false
      appenderName: "LOGSTASH_JSON"
  spring:
    # Spring profiles (comma-separated list):
    # - Server mode:
    #   - 'ssl-cert-provided' (use included self-signed SSL cert) or
    #   - 'ssl-cert-required' (use external SSL certificate; see keystoreAlias below)
    # - SecHub connection: 'classic-auth-enabled' or leave empty for connect to configured SecHub server
    profiles: "ssl-cert-provided"
    # Configure Spring Boot's embedded Tomcat
    embeddedTomcat:
      logging:
        enabled: false
        accessLogFormat: "[ACCESS] %a %{org.apache.catalina.AccessLog.RemoteAddr}r %{X-Forwarded-For}i %{X-Forwarded-Host}i %l %t %D %F %B %S %u %r %s %b %{User-Agent}i"
  ssl:
    keystoreAlias: "undefined"
    # Alias in .p12 keystore.
    # - On `undefined`, a self-signed certificate will be used.
    # - otherwise, k8s secret `secret-web-ui-ssl` must be defined containing
    #   - `keystore_file` (containing the ssl certificate chain)
    #     Inside the .p12 keystore, an alias with this name is expected
    #     pointing to the ssl certificate to use
    #   - `keystore_password`
  # Development-only parameters:
  development:
    javaDebug: false
    # Enables analysis after application exit
    keepContainerAliveAfterApplicationCrash: false

# deploymentComment (optional):
#  When setting to a different value than before, it forces k8s to spin up a new container.
#  This way, you can force deployments e.g. when only secrets have changed.
deploymentComment: "my deployment comment"

# optional: Add annotations to template.metadata.annotations
#           Can contain multiple lines. Example for Prometheus actuator:
# templateMetadataAnnotations: |-
#   prometheus.io/scrape: "true"
#   prometheus.io/probe: "true"
#   prometheus.io/port: "10250"
#   prometheus.io/path: "/actuator/prometheus"

# ----------------------------------------------------------------------------------------------#
# Optional: Additional environment variables for the SecHub web-server container
# --------------------------------------------------------------------------------------------- #
# env: |-
#   - name: SECHUB_EXAMPLE_VAR1
#     value: "value1"
#   - name: SECHUB_EXAMPLE_VAR2
#     valueFrom:
#       secretKeyRef:
#         name: secret-web-server-example
#         key: password
