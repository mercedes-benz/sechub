import java.nio.file.Files

// SPDX-License-Identifier: MIT
/*============================================================================
* Build file for subproject
*
* Root build file: "${rootProject.projectDir}/build.gradle"
* ============================================================================
*/
dependencies {
    /* runtime */
    implementation project(':sechub-commons-model')
    implementation project(':sechub-commons-core')
    implementation project(':sechub-commons-pds')
    implementation project(':sechub-commons-archive')
    implementation project(':sechub-adapter')
    implementation project(':sechub-storage-core')
    implementation project(':sechub-storage-sharedvolume-spring')
    implementation project(':sechub-storage-s3-aws')
    implementation project(':sechub-pds-commons-core')

    implementation spring_boot_dependency.logback_classic

    implementation library.logstashLogbackEncoder
    implementation library.jgit_core
    implementation library.apache_commons_io

    /* test */
    testImplementation project(':sechub-testframework')

    testImplementation spring_boot_dependency.junit_jupiter
    testImplementation spring_boot_dependency.junit_jupiter_params
    testImplementation spring_boot_dependency.mockito_core

}

version = versionData.getPrepareWrapperVersion()

bootJar {

    doLast {
        /* Here we copy the created wrapper jar as "sechub-wrapper-prepare.jar" into the
         * pds-tools folder inside the sechub-integrationtest gradle subproject.
         *
         *  This enables integration test script to use the solution prepare.sh script
         *  and just set as tool folder: ${project.buildDir}/pds-tools
         */
        File integrationTestLaunchFile = new File("${rootProject.projectDir}/sechub-integrationtest/build/pds-tools/sechub-wrapper-prepare.jar")

        if (integrationTestLaunchFile.exists()){
            Files.delete(integrationTestLaunchFile.toPath())
        }else{
            integrationTestLaunchFile.getParentFile().mkdirs();
        }

        File buildFile = new File("${project.buildDir}/libs/sechub-wrapper-prepare-${project.version}.jar")
        Files.copy(buildFile.toPath(),integrationTestLaunchFile.toPath())
    }

}