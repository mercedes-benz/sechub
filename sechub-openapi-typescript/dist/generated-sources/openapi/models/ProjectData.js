"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SecHub API
 * The SecHub API is a collection of RESTful endpoints. It is designed to be used by users and administrators of the SecHub application.  Most of the endpoints are protected by basic authentication.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfProjectData = instanceOfProjectData;
exports.ProjectDataFromJSON = ProjectDataFromJSON;
exports.ProjectDataFromJSONTyped = ProjectDataFromJSONTyped;
exports.ProjectDataToJSON = ProjectDataToJSON;
exports.ProjectDataToJSONTyped = ProjectDataToJSONTyped;
const ProjectUserData_1 = require("./ProjectUserData");
/**
 * Check if a given object implements the ProjectData interface.
 */
function instanceOfProjectData(value) {
    if (!('projectId' in value) || value['projectId'] === undefined)
        return false;
    if (!('owner' in value) || value['owner'] === undefined)
        return false;
    if (!('isOwned' in value) || value['isOwned'] === undefined)
        return false;
    return true;
}
function ProjectDataFromJSON(json) {
    return ProjectDataFromJSONTyped(json, false);
}
function ProjectDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'projectId': json['projectId'],
        'owner': (0, ProjectUserData_1.ProjectUserDataFromJSON)(json['owner']),
        'isOwned': json['isOwned'],
        'assignedUsers': json['assignedUsers'] == null ? undefined : (json['assignedUsers'].map(ProjectUserData_1.ProjectUserDataFromJSON)),
        'enabledProfileIds': json['enabledProfileIds'] == null ? undefined : json['enabledProfileIds'],
    };
}
function ProjectDataToJSON(json) {
    return ProjectDataToJSONTyped(json, false);
}
function ProjectDataToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'projectId': value['projectId'],
        'owner': (0, ProjectUserData_1.ProjectUserDataToJSON)(value['owner']),
        'isOwned': value['isOwned'],
        'assignedUsers': value['assignedUsers'] == null ? undefined : (value['assignedUsers'].map(ProjectUserData_1.ProjectUserDataToJSON)),
        'enabledProfileIds': value['enabledProfileIds'],
    };
}
