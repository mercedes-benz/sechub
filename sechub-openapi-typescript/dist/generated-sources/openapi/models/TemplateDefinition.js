"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SecHub API
 * The SecHub API is a collection of RESTful endpoints. It is designed to be used by users and administrators of the SecHub application.  Most of the endpoints are protected by basic authentication.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfTemplateDefinition = instanceOfTemplateDefinition;
exports.TemplateDefinitionFromJSON = TemplateDefinitionFromJSON;
exports.TemplateDefinitionFromJSONTyped = TemplateDefinitionFromJSONTyped;
exports.TemplateDefinitionToJSON = TemplateDefinitionToJSON;
exports.TemplateDefinitionToJSONTyped = TemplateDefinitionToJSONTyped;
const TemplateVariable_1 = require("./TemplateVariable");
const TemplateType_1 = require("./TemplateType");
/**
 * Check if a given object implements the TemplateDefinition interface.
 */
function instanceOfTemplateDefinition(value) {
    return true;
}
function TemplateDefinitionFromJSON(json) {
    return TemplateDefinitionFromJSONTyped(json, false);
}
function TemplateDefinitionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'type': json['type'] == null ? undefined : (0, TemplateType_1.TemplateTypeFromJSON)(json['type']),
        'assets': json['assets'] == null ? undefined : json['assets'],
        'variables': json['variables'] == null ? undefined : (json['variables'].map(TemplateVariable_1.TemplateVariableFromJSON)),
    };
}
function TemplateDefinitionToJSON(json) {
    return TemplateDefinitionToJSONTyped(json, false);
}
function TemplateDefinitionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'type': (0, TemplateType_1.TemplateTypeToJSON)(value['type']),
        'assets': value['assets'],
        'variables': value['variables'] == null ? undefined : (value['variables'].map(TemplateVariable_1.TemplateVariableToJSON)),
    };
}
