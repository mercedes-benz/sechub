"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SecHub API
 * The SecHub API is a collection of RESTful endpoints. It is designed to be used by users and administrators of the SecHub application.  Most of the endpoints are protected by basic authentication.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfFalsePositiveProjectConfiguration = instanceOfFalsePositiveProjectConfiguration;
exports.FalsePositiveProjectConfigurationFromJSON = FalsePositiveProjectConfigurationFromJSON;
exports.FalsePositiveProjectConfigurationFromJSONTyped = FalsePositiveProjectConfigurationFromJSONTyped;
exports.FalsePositiveProjectConfigurationToJSON = FalsePositiveProjectConfigurationToJSON;
exports.FalsePositiveProjectConfigurationToJSONTyped = FalsePositiveProjectConfigurationToJSONTyped;
const FalsePositiveEntry_1 = require("./FalsePositiveEntry");
/**
 * Check if a given object implements the FalsePositiveProjectConfiguration interface.
 */
function instanceOfFalsePositiveProjectConfiguration(value) {
    return true;
}
function FalsePositiveProjectConfigurationFromJSON(json) {
    return FalsePositiveProjectConfigurationFromJSONTyped(json, false);
}
function FalsePositiveProjectConfigurationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'falsePositives': json['falsePositives'] == null ? undefined : (json['falsePositives'].map(FalsePositiveEntry_1.FalsePositiveEntryFromJSON)),
    };
}
function FalsePositiveProjectConfigurationToJSON(json) {
    return FalsePositiveProjectConfigurationToJSONTyped(json, false);
}
function FalsePositiveProjectConfigurationToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'falsePositives': value['falsePositives'] == null ? undefined : (value['falsePositives'].map(FalsePositiveEntry_1.FalsePositiveEntryToJSON)),
    };
}
