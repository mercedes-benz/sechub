"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SecHub API
 * The SecHub API is a collection of RESTful endpoints. It is designed to be used by users and administrators of the SecHub application.  Most of the endpoints are protected by basic authentication.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfFalsePositiveMetaData = instanceOfFalsePositiveMetaData;
exports.FalsePositiveMetaDataFromJSON = FalsePositiveMetaDataFromJSON;
exports.FalsePositiveMetaDataFromJSONTyped = FalsePositiveMetaDataFromJSONTyped;
exports.FalsePositiveMetaDataToJSON = FalsePositiveMetaDataToJSON;
exports.FalsePositiveMetaDataToJSONTyped = FalsePositiveMetaDataToJSONTyped;
const FalsePositiveWebMetaData_1 = require("./FalsePositiveWebMetaData");
const FalsePositivesFalsePositivesInnerMetaDataCode_1 = require("./FalsePositivesFalsePositivesInnerMetaDataCode");
/**
 * Check if a given object implements the FalsePositiveMetaData interface.
 */
function instanceOfFalsePositiveMetaData(value) {
    return true;
}
function FalsePositiveMetaDataFromJSON(json) {
    return FalsePositiveMetaDataFromJSONTyped(json, false);
}
function FalsePositiveMetaDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'scanType': json['scanType'] == null ? undefined : json['scanType'],
        'name': json['name'] == null ? undefined : json['name'],
        'severity': json['severity'] == null ? undefined : json['severity'],
        'code': json['code'] == null ? undefined : (0, FalsePositivesFalsePositivesInnerMetaDataCode_1.FalsePositivesFalsePositivesInnerMetaDataCodeFromJSON)(json['code']),
        'web': json['web'] == null ? undefined : (0, FalsePositiveWebMetaData_1.FalsePositiveWebMetaDataFromJSON)(json['web']),
        'cweId': json['cweId'] == null ? undefined : json['cweId'],
        'cveId': json['cveId'] == null ? undefined : json['cveId'],
        'owasp': json['owasp'] == null ? undefined : json['owasp'],
    };
}
function FalsePositiveMetaDataToJSON(json) {
    return FalsePositiveMetaDataToJSONTyped(json, false);
}
function FalsePositiveMetaDataToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'scanType': value['scanType'],
        'name': value['name'],
        'severity': value['severity'],
        'code': (0, FalsePositivesFalsePositivesInnerMetaDataCode_1.FalsePositivesFalsePositivesInnerMetaDataCodeToJSON)(value['code']),
        'web': (0, FalsePositiveWebMetaData_1.FalsePositiveWebMetaDataToJSON)(value['web']),
        'cweId': value['cweId'],
        'cveId': value['cveId'],
        'owasp': value['owasp'],
    };
}
