"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SecHub API
 * The SecHub API is a collection of RESTful endpoints. It is designed to be used by users and administrators of the SecHub application.  Most of the endpoints are protected by basic authentication.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfFalsePositiveWebRequestMetaData = instanceOfFalsePositiveWebRequestMetaData;
exports.FalsePositiveWebRequestMetaDataFromJSON = FalsePositiveWebRequestMetaDataFromJSON;
exports.FalsePositiveWebRequestMetaDataFromJSONTyped = FalsePositiveWebRequestMetaDataFromJSONTyped;
exports.FalsePositiveWebRequestMetaDataToJSON = FalsePositiveWebRequestMetaDataToJSON;
exports.FalsePositiveWebRequestMetaDataToJSONTyped = FalsePositiveWebRequestMetaDataToJSONTyped;
/**
 * Check if a given object implements the FalsePositiveWebRequestMetaData interface.
 */
function instanceOfFalsePositiveWebRequestMetaData(value) {
    return true;
}
function FalsePositiveWebRequestMetaDataFromJSON(json) {
    return FalsePositiveWebRequestMetaDataFromJSONTyped(json, false);
}
function FalsePositiveWebRequestMetaDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'method': json['method'] == null ? undefined : json['method'],
        'target': json['target'] == null ? undefined : json['target'],
        'protocol': json['protocol'] == null ? undefined : json['protocol'],
        'version': json['version'] == null ? undefined : json['version'],
        'attackVector': json['attackVector'] == null ? undefined : json['attackVector'],
    };
}
function FalsePositiveWebRequestMetaDataToJSON(json) {
    return FalsePositiveWebRequestMetaDataToJSONTyped(json, false);
}
function FalsePositiveWebRequestMetaDataToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'method': value['method'],
        'target': value['target'],
        'protocol': value['protocol'],
        'version': value['version'],
        'attackVector': value['attackVector'],
    };
}
