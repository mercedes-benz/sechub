"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SecHub API
 * The SecHub API is a collection of RESTful endpoints. It is designed to be used by users and administrators of the SecHub application.  Most of the endpoints are protected by basic authentication.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfFalsePositiveEntry = instanceOfFalsePositiveEntry;
exports.FalsePositiveEntryFromJSON = FalsePositiveEntryFromJSON;
exports.FalsePositiveEntryFromJSONTyped = FalsePositiveEntryFromJSONTyped;
exports.FalsePositiveEntryToJSON = FalsePositiveEntryToJSON;
exports.FalsePositiveEntryToJSONTyped = FalsePositiveEntryToJSONTyped;
const FalsePositiveMetaData_1 = require("./FalsePositiveMetaData");
const FalsePositiveJobData_1 = require("./FalsePositiveJobData");
const FalsePositiveProjectData_1 = require("./FalsePositiveProjectData");
/**
 * Check if a given object implements the FalsePositiveEntry interface.
 */
function instanceOfFalsePositiveEntry(value) {
    return true;
}
function FalsePositiveEntryFromJSON(json) {
    return FalsePositiveEntryFromJSONTyped(json, false);
}
function FalsePositiveEntryFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'jobData': json['jobData'] == null ? undefined : (0, FalsePositiveJobData_1.FalsePositiveJobDataFromJSON)(json['jobData']),
        'author': json['author'] == null ? undefined : json['author'],
        'metaData': json['metaData'] == null ? undefined : (0, FalsePositiveMetaData_1.FalsePositiveMetaDataFromJSON)(json['metaData']),
        'projectData': json['projectData'] == null ? undefined : (0, FalsePositiveProjectData_1.FalsePositiveProjectDataFromJSON)(json['projectData']),
        'created': json['created'] == null ? undefined : json['created'],
    };
}
function FalsePositiveEntryToJSON(json) {
    return FalsePositiveEntryToJSONTyped(json, false);
}
function FalsePositiveEntryToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'jobData': (0, FalsePositiveJobData_1.FalsePositiveJobDataToJSON)(value['jobData']),
        'author': value['author'],
        'metaData': (0, FalsePositiveMetaData_1.FalsePositiveMetaDataToJSON)(value['metaData']),
        'projectData': (0, FalsePositiveProjectData_1.FalsePositiveProjectDataToJSON)(value['projectData']),
        'created': value['created'],
    };
}
