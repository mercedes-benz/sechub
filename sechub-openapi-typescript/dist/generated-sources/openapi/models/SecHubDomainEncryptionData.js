"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SecHub API
 * The SecHub API is a collection of RESTful endpoints. It is designed to be used by users and administrators of the SecHub application.  Most of the endpoints are protected by basic authentication.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSecHubDomainEncryptionData = instanceOfSecHubDomainEncryptionData;
exports.SecHubDomainEncryptionDataFromJSON = SecHubDomainEncryptionDataFromJSON;
exports.SecHubDomainEncryptionDataFromJSONTyped = SecHubDomainEncryptionDataFromJSONTyped;
exports.SecHubDomainEncryptionDataToJSON = SecHubDomainEncryptionDataToJSON;
exports.SecHubDomainEncryptionDataToJSONTyped = SecHubDomainEncryptionDataToJSONTyped;
/**
 * Check if a given object implements the SecHubDomainEncryptionData interface.
 */
function instanceOfSecHubDomainEncryptionData(value) {
    return true;
}
function SecHubDomainEncryptionDataFromJSON(json) {
    return SecHubDomainEncryptionDataFromJSONTyped(json, false);
}
function SecHubDomainEncryptionDataFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'algorithm': json['algorithm'] == null ? undefined : json['algorithm'],
        'passwordSource': json['passwordSource'] == null ? undefined : json['passwordSource'],
        'created': json['created'] == null ? undefined : (new Date(json['created'])),
        'createdFrom': json['createdFrom'] == null ? undefined : json['createdFrom'],
        'usage': json['usage'] == null ? undefined : json['usage'],
    };
}
function SecHubDomainEncryptionDataToJSON(json) {
    return SecHubDomainEncryptionDataToJSONTyped(json, false);
}
function SecHubDomainEncryptionDataToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'algorithm': value['algorithm'],
        'passwordSource': value['passwordSource'],
        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),
        'createdFrom': value['createdFrom'],
        'usage': value['usage'],
    };
}
