"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SecHub API
 * The SecHub API is a collection of RESTful endpoints. It is designed to be used by users and administrators of the SecHub application.  Most of the endpoints are protected by basic authentication.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfTemplateVariable = instanceOfTemplateVariable;
exports.TemplateVariableFromJSON = TemplateVariableFromJSON;
exports.TemplateVariableFromJSONTyped = TemplateVariableFromJSONTyped;
exports.TemplateVariableToJSON = TemplateVariableToJSON;
exports.TemplateVariableToJSONTyped = TemplateVariableToJSONTyped;
const TemplateVariableValidation_1 = require("./TemplateVariableValidation");
/**
 * Check if a given object implements the TemplateVariable interface.
 */
function instanceOfTemplateVariable(value) {
    return true;
}
function TemplateVariableFromJSON(json) {
    return TemplateVariableFromJSONTyped(json, false);
}
function TemplateVariableFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'] == null ? undefined : json['name'],
        'optional': json['optional'] == null ? undefined : json['optional'],
        'validation': json['validation'] == null ? undefined : (0, TemplateVariableValidation_1.TemplateVariableValidationFromJSON)(json['validation']),
    };
}
function TemplateVariableToJSON(json) {
    return TemplateVariableToJSONTyped(json, false);
}
function TemplateVariableToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'optional': value['optional'],
        'validation': (0, TemplateVariableValidation_1.TemplateVariableValidationToJSON)(value['validation']),
    };
}
