"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * SecHub API
 * The SecHub API is a collection of RESTful endpoints. It is designed to be used by users and administrators of the SecHub application.  Most of the endpoints are protected by basic authentication.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfJobInformation = instanceOfJobInformation;
exports.JobInformationFromJSON = JobInformationFromJSON;
exports.JobInformationFromJSONTyped = JobInformationFromJSONTyped;
exports.JobInformationToJSON = JobInformationToJSON;
exports.JobInformationToJSONTyped = JobInformationToJSONTyped;
const JobStatus_1 = require("./JobStatus");
/**
 * Check if a given object implements the JobInformation interface.
 */
function instanceOfJobInformation(value) {
    return true;
}
function JobInformationFromJSON(json) {
    return JobInformationFromJSONTyped(json, false);
}
function JobInformationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'jobUUID': json['jobUUID'] == null ? undefined : json['jobUUID'],
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'owner': json['owner'] == null ? undefined : json['owner'],
        'status': json['status'] == null ? undefined : (0, JobStatus_1.JobStatusFromJSON)(json['status']),
        'since': json['since'] == null ? undefined : (new Date(json['since'])),
        '_configuration': json['configuration'] == null ? undefined : json['configuration'],
        'info': json['info'] == null ? undefined : json['info'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}
function JobInformationToJSON(json) {
    return JobInformationToJSONTyped(json, false);
}
function JobInformationToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'jobUUID': value['jobUUID'],
        'projectId': value['projectId'],
        'owner': value['owner'],
        'status': (0, JobStatus_1.JobStatusToJSON)(value['status']),
        'since': value['since'] == null ? undefined : ((value['since']).toISOString()),
        'configuration': value['_configuration'],
        'info': value['info'],
        'version': value['version'],
    };
}
