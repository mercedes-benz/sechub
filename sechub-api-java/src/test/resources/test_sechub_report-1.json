{
   "jobUUID": "061234c8-40aa-4dcf-81f8-7bb8f723b780",
   "result": {
      "count": 0,
      "findings": [
         {
            "id": 3,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 82,
               "column": 65,
               "source": "\tpublic void createProject(@RequestBody @Valid ProjectJsonInput input) {",
               "relevantPart": "input",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/project/ProjectJsonInput.java",
                  "line": 36,
                  "column": 37,
                  "source": "\tprivate Optional<ProjectWhiteList> whiteList = Optional.empty();",
                  "relevantPart": "whiteList"
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 4,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectUpdateAdministrationRestController.java",
               "line": 55,
               "column": 78,
               "source": "\tpublic void updateProjectWhitelist(@Validated @RequestBody ProjectJsonInput input, @PathVariable(name=\"projectId\") String projectId) {",
               "relevantPart": "input",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/project/ProjectJsonInput.java",
                  "line": 36,
                  "column": 37,
                  "source": "\tprivate Optional<ProjectWhiteList> whiteList = Optional.empty();",
                  "relevantPart": "whiteList"
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 5,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataRestController.java",
               "line": 56,
               "column": 50,
               "source": "\t\t\t@RequestBody ScanProjectMockDataConfiguration configuration",
               "relevantPart": "configuration",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataConfiguration.java",
                  "line": 27,
                  "column": 33,
                  "source": "\tprivate Optional<ScanMockData> webScan = Optional.empty();",
                  "relevantPart": "webScan"
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 6,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataRestController.java",
               "line": 56,
               "column": 50,
               "source": "\t\t\t@RequestBody ScanProjectMockDataConfiguration configuration",
               "relevantPart": "configuration",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataConfiguration.java",
                  "line": 26,
                  "column": 33,
                  "source": "\tprivate Optional<ScanMockData> codeScan = Optional.empty();",
                  "relevantPart": "codeScan"
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 7,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataRestController.java",
               "line": 56,
               "column": 50,
               "source": "\t\t\t@RequestBody ScanProjectMockDataConfiguration configuration",
               "relevantPart": "configuration",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataConfiguration.java",
                  "line": 28,
                  "column": 33,
                  "source": "\tprivate Optional<ScanMockData> infraScan = Optional.empty();",
                  "relevantPart": "infraScan"
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 8,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerRestController.java",
               "line": 67,
               "column": 44,
               "source": "\t\t\t@RequestBody @Valid SecHubConfiguration configuration) {",
               "relevantPart": "configuration",
               "calls": {
                  "location": "com/daimler/sechub/sharedkernel/configuration/SecHubConfiguration.java",
                  "line": 33,
                  "column": 48,
                  "source": "\tprivate Optional<SecHubCodeScanConfiguration> codeScan = Optional.empty();",
                  "relevantPart": "codeScan"
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 9,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerRestController.java",
               "line": 67,
               "column": 44,
               "source": "\t\t\t@RequestBody @Valid SecHubConfiguration configuration) {",
               "relevantPart": "configuration",
               "calls": {
                  "location": "com/daimler/sechub/sharedkernel/configuration/SecHubConfiguration.java",
                  "line": 31,
                  "column": 47,
                  "source": "\tprivate Optional<SecHubWebScanConfiguration> webScan = Optional.empty();",
                  "relevantPart": "webScan"
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 10,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerRestController.java",
               "line": 67,
               "column": 44,
               "source": "\t\t\t@RequestBody @Valid SecHubConfiguration configuration) {",
               "relevantPart": "configuration",
               "calls": {
                  "location": "com/daimler/sechub/sharedkernel/configuration/SecHubConfiguration.java",
                  "line": 32,
                  "column": 58,
                  "source": "\tprivate Optional<SecHubInfrastructureScanConfiguration> infraScan = Optional.empty();",
                  "relevantPart": "infraScan"
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 11,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/administration/mapping/MappingAdministrationRestController.java",
               "line": 57,
               "column": 106,
               "source": "    public void updateMapping(@PathVariable(name=\"mappingId\") String mappingId, @RequestBody MappingData mappingData) {",
               "relevantPart": "mappingData",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/mapping/MappingAdministrationRestController.java",
                  "line": 59,
                  "column": 55,
                  "source": "        updateMappingService.updateMapping(mappingId, mappingData);",
                  "relevantPart": "mappingData",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/mapping/UpdateMappingService.java",
                     "line": 43,
                     "column": 61,
                     "source": "    public void updateMapping(String mappingId, MappingData mappingData) {",
                     "relevantPart": "mappingData",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/mapping/UpdateMappingService.java",
                        "line": 54,
                        "column": 28,
                        "source": "        mappingObj.setData(mappingData.toJSON());",
                        "relevantPart": "mappingData",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/mapping/UpdateMappingService.java",
                           "line": 54,
                           "column": 46,
                           "source": "        mappingObj.setData(mappingData.toJSON());",
                           "relevantPart": "toJSON",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/mapping/Mapping.java",
                              "line": 51,
                              "column": 32,
                              "source": "    public void setData(String json) {",
                              "relevantPart": "json",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/mapping/Mapping.java",
                                 "line": 52,
                                 "column": 15,
                                 "source": "\t\tthis.data = json;",
                                 "relevantPart": "json",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/mapping/Mapping.java",
                                    "line": 52,
                                    "column": 7,
                                    "source": "\t\tthis.data = json;",
                                    "relevantPart": "data",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/mapping/UpdateMappingService.java",
                                       "line": 54,
                                       "column": 9,
                                       "source": "        mappingObj.setData(mappingData.toJSON());",
                                       "relevantPart": "mappingObj",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/mapping/UpdateMappingService.java",
                                          "line": 56,
                                          "column": 63,
                                          "source": "        mappingTransactionService.saveMappingInOwnTransaction(mappingObj);",
                                          "relevantPart": "mappingObj",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/mapping/MappingTransactionService.java",
                                             "line": 17,
                                             "column": 56,
                                             "source": "    public Mapping saveMappingInOwnTransaction(Mapping mapping) {",
                                             "relevantPart": "mapping",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/mapping/MappingTransactionService.java",
                                                "line": 19,
                                                "column": 31,
                                                "source": "        return repository.save(mapping);",
                                                "relevantPart": "save"
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 12,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 117,
               "column": 55,
               "source": "    public void changeScanResults(@RequestBody String body, @PathVariable(\"projectId\")String projectId, @PathVariable(\"sechubJobUUID\") UUID sechubJobUUID ,@PathVariable(\"productIdentifier\") ProductIdentifier productIdentifier) {",
               "relevantPart": "body",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                  "line": 133,
                  "column": 21,
                  "source": "        r.setResult(body);",
                  "relevantPart": "body",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/product/ProductResult.java",
                     "line": 122,
                     "column": 34,
                     "source": "    public void setResult(String result) {",
                     "relevantPart": "result",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/product/ProductResult.java",
                        "line": 123,
                        "column": 23,
                        "source": "        this.result = result;",
                        "relevantPart": "result",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/product/ProductResult.java",
                           "line": 123,
                           "column": 13,
                           "source": "        this.result = result;",
                           "relevantPart": "result",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                              "line": 133,
                              "column": 9,
                              "source": "        r.setResult(body);",
                              "relevantPart": "r",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                                 "line": 134,
                                 "column": 37,
                                 "source": "        productResultRepository.save(r);",
                                 "relevantPart": "save"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 13,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 159,
               "column": 105,
               "source": "    public void updateScanMapping(@PathVariable(\"mappingId\") String mappingId, @RequestBody MappingData mappingData) {",
               "relevantPart": "mappingData",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                  "line": 160,
                  "column": 63,
                  "source": "        updateScanMappingService.updateScanMapping(mappingId, mappingData);",
                  "relevantPart": "mappingData",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                     "line": 43,
                     "column": 65,
                     "source": "    public void updateScanMapping(String mappingId, MappingData mappingData) {",
                     "relevantPart": "mappingData",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                        "line": 47,
                        "column": 37,
                        "source": "        updateInDatabase(mappingId, mappingData);",
                        "relevantPart": "mappingData",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                           "line": 52,
                           "column": 65,
                           "source": "    private void updateInDatabase(String mappingId, MappingData mappingData) {",
                           "relevantPart": "mappingData",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                              "line": 60,
                              "column": 23,
                              "source": "        String json = mappingData.toJSON();",
                              "relevantPart": "mappingData",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                                 "line": 60,
                                 "column": 41,
                                 "source": "        String json = mappingData.toJSON();",
                                 "relevantPart": "toJSON",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                                    "line": 60,
                                    "column": 16,
                                    "source": "        String json = mappingData.toJSON();",
                                    "relevantPart": "json",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                                       "line": 61,
                                       "column": 28,
                                       "source": "        mappingObj.setData(json);",
                                       "relevantPart": "json",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/scan/config/ScanMapping.java",
                                          "line": 51,
                                          "column": 32,
                                          "source": "    public void setData(String json) {",
                                          "relevantPart": "json",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/scan/config/ScanMapping.java",
                                             "line": 52,
                                             "column": 15,
                                             "source": "\t\tthis.data = json;",
                                             "relevantPart": "json",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/scan/config/ScanMapping.java",
                                                "line": 52,
                                                "column": 7,
                                                "source": "\t\tthis.data = json;",
                                                "relevantPart": "data",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                                                   "line": 61,
                                                   "column": 9,
                                                   "source": "        mappingObj.setData(json);",
                                                   "relevantPart": "mappingObj",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                                                      "line": 63,
                                                      "column": 24,
                                                      "source": "        repository.save(mappingObj);",
                                                      "relevantPart": "save"
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 14,
            "name": "Unsafe Object Binding",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataRestController.java",
               "line": 56,
               "column": 50,
               "source": "\t\t\t@RequestBody ScanProjectMockDataConfiguration configuration",
               "relevantPart": "configuration",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataRestController.java",
                  "line": 59,
                  "column": 80,
                  "source": "\t\tprojectMockConfigurationService.defineProjectMockDataConfiguration(projectId,configuration);",
                  "relevantPart": "configuration",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataConfigurationService.java",
                     "line": 31,
                     "column": 100,
                     "source": "\tpublic void defineProjectMockDataConfiguration(String projectId, ScanProjectMockDataConfiguration configuration) {",
                     "relevantPart": "configuration",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataConfigurationService.java",
                        "line": 32,
                        "column": 71,
                        "source": "\t\tconfigService.set(projectId,ScanProjectConfigID.MOCK_CONFIGURATION, configuration.toJSON());",
                        "relevantPart": "configuration",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataConfigurationService.java",
                           "line": 32,
                           "column": 91,
                           "source": "\t\tconfigService.set(projectId,ScanProjectConfigID.MOCK_CONFIGURATION, configuration.toJSON());",
                           "relevantPart": "toJSON",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/project/ScanProjectConfigService.java",
                              "line": 82,
                              "column": 76,
                              "source": "    public void set(String projectId, ScanProjectConfigID configId, String data) {",
                              "relevantPart": "data",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/scan/project/ScanProjectConfigService.java",
                                 "line": 102,
                                 "column": 28,
                                 "source": "            config.setData(data);",
                                 "relevantPart": "data",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/scan/project/ScanProjectConfig.java",
                                    "line": 77,
                                    "column": 29,
                                    "source": "\tpublic void setData(String data) {",
                                    "relevantPart": "data",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/scan/project/ScanProjectConfig.java",
                                       "line": 78,
                                       "column": 15,
                                       "source": "\t\tthis.data = data;",
                                       "relevantPart": "data",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/scan/project/ScanProjectConfig.java",
                                          "line": 78,
                                          "column": 7,
                                          "source": "\t\tthis.data = data;",
                                          "relevantPart": "data",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/scan/project/ScanProjectConfigService.java",
                                             "line": 102,
                                             "column": 13,
                                             "source": "            config.setData(data);",
                                             "relevantPart": "config",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/scan/project/ScanProjectConfigService.java",
                                                "line": 103,
                                                "column": 28,
                                                "source": "            repository.save(config);",
                                                "relevantPart": "save"
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 915
         },
         {
            "id": 21,
            "name": "Denial Of Service Resource Exhaustion",
            "severity": "MEDIUM",
            "code": {
               "location": "daimler.com/sechub/util/consoleHelpers.go",
               "line": 52,
               "column": 22,
               "source": "\tresult, err = reader.ReadString('\\n')",
               "relevantPart": "ReadString",
               "calls": {
                  "location": "daimler.com/sechub/util/consoleHelpers.go",
                  "line": 52,
                  "column": 10,
                  "source": "\tresult, err = reader.ReadString('\\n')",
                  "relevantPart": "err",
                  "calls": {
                     "location": "daimler.com/sechub/util/consoleHelpers.go",
                     "line": 53,
                     "column": 43,
                     "source": "\treturn strings.TrimSuffix(result, \"\\n\"), err",
                     "relevantPart": "err",
                     "calls": {
                        "location": "daimler.com/sechub/util/consoleHelpers.go",
                        "line": 36,
                        "column": 16,
                        "source": "\t\tinput, err = ReadFromConsole()",
                        "relevantPart": "ReadFromConsole",
                        "calls": {
                           "location": "daimler.com/sechub/util/consoleHelpers.go",
                           "line": 36,
                           "column": 3,
                           "source": "\t\tinput, err = ReadFromConsole()",
                           "relevantPart": "input",
                           "calls": {
                              "location": "daimler.com/sechub/util/consoleHelpers.go",
                              "line": 40,
                              "column": 14,
                              "source": "\t\t\t\tresult = input",
                              "relevantPart": "input",
                              "calls": {
                                 "location": "daimler.com/sechub/util/consoleHelpers.go",
                                 "line": 40,
                                 "column": 5,
                                 "source": "\t\t\t\tresult = input",
                                 "relevantPart": "result",
                                 "calls": {
                                    "location": "daimler.com/sechub/util/consoleHelpers.go",
                                    "line": 34,
                                    "column": 6,
                                    "source": "\tfor result == \"\" {",
                                    "relevantPart": "result",
                                    "calls": {
                                       "location": "daimler.com/sechub/util/consoleHelpers.go",
                                       "line": 34,
                                       "column": 13,
                                       "source": "\tfor result == \"\" {",
                                       "relevantPart": "=="
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 400
         },
         {
            "id": 22,
            "name": "Denial Of Service Resource Exhaustion",
            "severity": "MEDIUM",
            "code": {
               "location": "daimler.com/sechub/util/consoleHelpers.go",
               "line": 52,
               "column": 22,
               "source": "\tresult, err = reader.ReadString('\\n')",
               "relevantPart": "ReadString",
               "calls": {
                  "location": "daimler.com/sechub/util/consoleHelpers.go",
                  "line": 52,
                  "column": 2,
                  "source": "\tresult, err = reader.ReadString('\\n')",
                  "relevantPart": "result",
                  "calls": {
                     "location": "daimler.com/sechub/util/consoleHelpers.go",
                     "line": 53,
                     "column": 28,
                     "source": "\treturn strings.TrimSuffix(result, \"\\n\"), err",
                     "relevantPart": "result",
                     "calls": {
                        "location": "daimler.com/sechub/util/consoleHelpers.go",
                        "line": 53,
                        "column": 16,
                        "source": "\treturn strings.TrimSuffix(result, \"\\n\"), err",
                        "relevantPart": "TrimSuffix",
                        "calls": {
                           "location": "daimler.com/sechub/util/consoleHelpers.go",
                           "line": 36,
                           "column": 16,
                           "source": "\t\tinput, err = ReadFromConsole()",
                           "relevantPart": "ReadFromConsole",
                           "calls": {
                              "location": "daimler.com/sechub/util/consoleHelpers.go",
                              "line": 36,
                              "column": 3,
                              "source": "\t\tinput, err = ReadFromConsole()",
                              "relevantPart": "input",
                              "calls": {
                                 "location": "daimler.com/sechub/util/consoleHelpers.go",
                                 "line": 40,
                                 "column": 14,
                                 "source": "\t\t\t\tresult = input",
                                 "relevantPart": "input",
                                 "calls": {
                                    "location": "daimler.com/sechub/util/consoleHelpers.go",
                                    "line": 40,
                                    "column": 5,
                                    "source": "\t\t\t\tresult = input",
                                    "relevantPart": "result",
                                    "calls": {
                                       "location": "daimler.com/sechub/util/consoleHelpers.go",
                                       "line": 34,
                                       "column": 6,
                                       "source": "\tfor result == \"\" {",
                                       "relevantPart": "result",
                                       "calls": {
                                          "location": "daimler.com/sechub/util/consoleHelpers.go",
                                          "line": 34,
                                          "column": 13,
                                          "source": "\tfor result == \"\" {",
                                          "relevantPart": "=="
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 400
         },
         {
            "id": 24,
            "name": "Unvalidated SSL Certificate Hostname",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/adapter/support/TrustAllSupport.java",
               "line": 90,
               "column": 45,
               "source": "\t\t\tclientBuilder.setSSLHostnameVerifier(new HostnameVerifier() {",
               "relevantPart": "anonymous_class_91_20"
            },
            "type": "codeScan",
            "cweId": 297
         },
         {
            "id": 25,
            "name": "HTTP Response Splitting",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
               "line": 50,
               "column": 40,
               "source": "\t\t\t@PathVariable(\"sechubJobUUID\") UUID sechubJobUUID, HttpServletResponse response",
               "relevantPart": "sechubJobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
                  "line": 56,
                  "column": 86,
                  "source": "\t    response.setHeader(\"Content-Disposition\", \"attachment; filename=full_scandata_\"+sechubJobUUID.toString()+\".zip\");",
                  "relevantPart": "sechubJobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
                     "line": 56,
                     "column": 108,
                     "source": "\t    response.setHeader(\"Content-Disposition\", \"attachment; filename=full_scandata_\"+sechubJobUUID.toString()+\".zip\");",
                     "relevantPart": "toString",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
                        "line": 56,
                        "column": 24,
                        "source": "\t    response.setHeader(\"Content-Disposition\", \"attachment; filename=full_scandata_\"+sechubJobUUID.toString()+\".zip\");",
                        "relevantPart": "setHeader"
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 113
         },
         {
            "id": 26,
            "name": "XSRF",
            "severity": "MEDIUM",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/configuration/AbstractAllowSecHubAPISecurityConfiguration.java",
               "line": 62,
               "column": 11,
               "source": "\t\t\tdisable(). /* disable CSRF for api so we have no CSRF-TOKEN problems - POST would not work*/",
               "relevantPart": "disable"
            },
            "type": "codeScan",
            "cweId": 352
         },
         {
            "id": 27,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 57,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_LIST_JOBS_RUNNING, method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 28,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 66,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_ADMIN_CANCELS_JOB, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 29,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 74,
               "column": 21,
               "source": "    @RequestMapping(path = AdministrationAPIConstants.API_ADMIN_RESTARTS_JOB, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 30,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 82,
               "column": 21,
               "source": "    @RequestMapping(path = AdministrationAPIConstants.API_ADMIN_RESTARTS_JOB_HARD, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 31,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/mapping/MappingAdministrationRestController.java",
               "line": 46,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_CONFIG_MAPPING, method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 32,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/mapping/MappingAdministrationRestController.java",
               "line": 55,
               "column": 21,
               "source": "    @RequestMapping(path = AdministrationAPIConstants.API_CONFIG_MAPPING, method = RequestMethod.PUT, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 33,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 80,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_CREATE_PROJECT, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 34,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 97,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_SHOW_PROJECT_DETAILS, method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 35,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 105,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_LIST_ALL_PROJECTS, method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 36,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 113,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_ASSIGN_USER_TO_PROJECT, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 37,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 122,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_UNASSIGN_USER_TO_PROJECT, method = RequestMethod.DELETE, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 38,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 131,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_DELETE_PROJECT, method = RequestMethod.DELETE, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 39,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectUpdateAdministrationRestController.java",
               "line": 54,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_UPDATE_PROJECT_WHITELIST, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 40,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/scheduler/SchedulerAdministrationRestController.java",
               "line": 44,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_SCHEDULER_ENABLE_JOB_PROCESSING, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 41,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/scheduler/SchedulerAdministrationRestController.java",
               "line": 53,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_SCHEDULER_DISABLE_JOB_PROCESSING, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 42,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/scheduler/SchedulerAdministrationRestController.java",
               "line": 62,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_SCHEDULER_STATUS_REFRESH, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 43,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/signup/AnonymousSignupRestController.java",
               "line": 45,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_SIGNUP, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 44,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/signup/SignupAdministrationRestController.java",
               "line": 45,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_DELETE_SIGNUP, method = RequestMethod.DELETE, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 45,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/signup/SignupAdministrationRestController.java",
               "line": 53,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_LIST_USER_SIGNUPS, method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 46,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/status/StatusAdministrationRestController.java",
               "line": 41,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_SCHEDULER_GET_STATUS, method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 47,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetApiTokenByOneTimeTokenRestController.java",
               "line": 31,
               "column": 14,
               "source": "\t@GetMapping(path = AdministrationAPIConstants.API_FETCH_NEW_API_TOKEN_BY_ONE_WAY_TOKEN+\"/{oneTimeToken}\",",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 48,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestNewApiTokenRestController.java",
               "line": 34,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_REQUEST_NEW_APITOKEN, method = RequestMethod.POST)",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 49,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
               "line": 63,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_ACCEPT_USER_SIGNUP, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 50,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
               "line": 72,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_LIST_ALL_USERS, method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 51,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
               "line": 80,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_LIST_ALL_ADMINS, method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 52,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
               "line": 88,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_SHOW_USER_DETAILS, method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 53,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
               "line": 96,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_DELETE_USER, method = RequestMethod.DELETE, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 54,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
               "line": 104,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_GRANT_ADMIN_RIGHTS_TO_USER, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 55,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
               "line": 112,
               "column": 18,
               "source": "\t@RequestMapping(path = AdministrationAPIConstants.API_REVOKE_ADMIN_RIGHTS_FROM_USER, method = RequestMethod.POST, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 56,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/notification/email/MockEmailRestController.java",
               "line": 41,
               "column": 4,
               "source": "\t\t\tpath = APIConstants.API_ANONYMOUS+\"integrationtest/mock/emails/to/{emailAdress}\", ",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 57,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/notification/email/MockEmailRestController.java",
               "line": 52,
               "column": 4,
               "source": "\t\t\tpath = APIConstants.API_ANONYMOUS+\"integrationtest/mock/emails\", ",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 58,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/HTMLScanResultReportModelBuilder.java",
               "line": 98,
               "column": 6,
               "source": "\t\t\t\t\tfile = cssResource.getFile();",
               "relevantPart": "file"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 59,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 78,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/project/{projectId}/scan/access/count\", method = RequestMethod.GET, produces = {",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 60,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 84,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/project/{projectId}/scan/report/count\", method = RequestMethod.GET, produces = {",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 61,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 90,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/project/{projectId}/scan/productresult/count\", method = RequestMethod.GET, produces = {",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 62,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 96,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/project/{projectId}/scan/productresult/all-shrinked/{maxLength}\", method = RequestMethod.GET, produces = {",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 63,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 115,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/project/{projectId}/job/{sechubJobUUID}/scan/productresult/{productIdentifier}\", method = RequestMethod.PUT, produces = {",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 64,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 137,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/job/{sechubJobUUID}/productresults\", method = RequestMethod.DELETE, produces = {",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 65,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 143,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/job/{sechubJobUUID}/productresults-count\", method = RequestMethod.GET, produces = {",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 66,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 150,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/scan/cancel/jobs\", method = RequestMethod.GET, produces = {",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 67,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 158,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/config/scan/mapping/{mappingId}\", method = RequestMethod.PUT)",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 68,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 163,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/config/scan/mapping/{mappingId}\", method = RequestMethod.GET)",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 69,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 174,
               "column": 21,
               "source": "    @RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/config/namepattern/{namePatternProviderId}/{name}\", method = RequestMethod.GET)",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 70,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
               "line": 48,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/scan/download/{sechubJobUUID}\", method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 71,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/log/ScanLogRestController.java",
               "line": 33,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/scan/logs\", method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 72,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/FalsePositiveRestController.java",
               "line": 41,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/false-positives\", method = RequestMethod.PUT, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 73,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/FalsePositiveRestController.java",
               "line": 53,
               "column": 21,
               "source": "    @RequestMapping(path = \"/false-positive/{jobUUID}/{findingId}\", method = RequestMethod.DELETE)",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 74,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/FalsePositiveRestController.java",
               "line": 66,
               "column": 21,
               "source": "    @RequestMapping(path = \"/false-positives\", method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 75,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataRestController.java",
               "line": 42,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/mockdata\", method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 76,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/ScanProjectMockDataRestController.java",
               "line": 53,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/mockdata\", method = RequestMethod.PUT, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 77,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
               "line": 49,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/report/{jobUUID}\", method = RequestMethod.GET, produces= {MediaType.APPLICATION_JSON_VALUE})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 78,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
               "line": 61,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/report/{jobUUID}\", method = RequestMethod.GET, produces= {\"application/xhtml+xml\", \"text/html\",\"text/html;charset=UTF-8\"})",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 79,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/IntegrationTestSchedulerRestController.java",
               "line": 34,
               "column": 18,
               "source": "\t@RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/project/{projectId}/schedule/access/count\", method = RequestMethod.GET, produces = { MediaType.APPLICATION_JSON_VALUE })",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 80,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/IntegrationTestSchedulerRestController.java",
               "line": 39,
               "column": 18,
               "source": "\t@RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/jobs/waiting\", method = RequestMethod.DELETE, produces = { MediaType.APPLICATION_JSON_VALUE })",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 81,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/IntegrationTestSchedulerRestController.java",
               "line": 44,
               "column": 18,
               "source": "\t@RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/schedule/revert/job/{sechubJobUUID}/still-running\", method = RequestMethod.PUT, produces = { MediaType.APPLICATION_JSON_VALUE })",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 82,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/IntegrationTestSchedulerRestController.java",
               "line": 49,
               "column": 18,
               "source": "\t@RequestMapping(path = APIConstants.API_ANONYMOUS + \"integrationtest/schedule/revert/job/{sechubJobUUID}/still-not-approved\", method = RequestMethod.PUT, produces = { MediaType.APPLICATION_JSON_VALUE })",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 83,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerRestController.java",
               "line": 65,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/job\", method = RequestMethod.POST)",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 84,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerRestController.java",
               "line": 77,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/job/{jobUUID}/sourcecode\", method = RequestMethod.POST)",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 85,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerRestController.java",
               "line": 94,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/job/{jobUUID}/approve\", method = RequestMethod.PUT)",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 86,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerRestController.java",
               "line": 107,
               "column": 18,
               "source": "\t@RequestMapping(path = \"/job/{jobUUID}\", method = RequestMethod.GET)",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 87,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerUploadService.java",
               "line": 78,
               "column": 5,
               "source": "\t\t\t\ttmpFile = Files.createTempFile(\"sechub_schedule_upload_tmp\", null);",
               "relevantPart": "tmpFile"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 88,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
               "line": 44,
               "column": 13,
               "source": "            parent = new File(\"./../sechub-integrationtest\");",
               "relevantPart": "parent"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 89,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/support/MockSupport.java",
               "line": 43,
               "column": 8,
               "source": "\t\tFile file = new File(path);",
               "relevantPart": "file"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 90,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
               "line": 42,
               "column": 14,
               "source": "        File parent = new File(\"./sechub-integrationtest\");",
               "relevantPart": "parent"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 91,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/storage/filesystem/SharedVolumeJobStorage.java",
               "line": 42,
               "column": 8,
               "source": "\t\tPath path = getPathToFile(name);",
               "relevantPart": "path"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 92,
            "name": "Incorrect Permission Assignment For Critical Resources",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/storage/filesystem/SharedVolumeJobStorage.java",
               "line": 67,
               "column": 9,
               "source": "\t\t\tPath pathToFile = getPathToFile(name);",
               "relevantPart": "pathToFile"
            },
            "type": "codeScan",
            "cweId": 732
         },
         {
            "id": 93,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobInformationRepository.java",
               "line": 16,
               "column": 30,
               "source": "\tpublic List<JobInformation> findAllRunningJobs();",
               "relevantPart": "findAllRunningJobs"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 94,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobInformationRepository.java",
               "line": 21,
               "column": 14,
               "source": "\tpublic void deleteJobInformationWithJobUUID(@Param(\"jobUUID\") UUID jobUUID);",
               "relevantPart": "deleteJobInformationWithJobUUID"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 95,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/authorization/AuthUserRepository.java",
               "line": 16,
               "column": 6,
               "source": "\tint countAmountOfSuperAdmins();",
               "relevantPart": "countAmountOfSuperAdmins"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 96,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/access/ScanAccessRepository.java",
               "line": 16,
               "column": 14,
               "source": "\tpublic void deleteAcessForUserAtAll(String userId);",
               "relevantPart": "deleteAcessForUserAtAll"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 97,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/access/ScanAccessRepository.java",
               "line": 20,
               "column": 14,
               "source": "\tpublic void deleteAnyAccessForProject(String projectId);",
               "relevantPart": "deleteAnyAccessForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 98,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/log/ProjectScanLogRepository.java",
               "line": 16,
               "column": 7,
               "source": "\tvoid deleteAllLogDataForProject(String projectId);",
               "relevantPart": "deleteAllLogDataForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 99,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/product/ProductResultRepository.java",
               "line": 16,
               "column": 7,
               "source": "\tvoid deleteAllResultsForProject(String projectId);",
               "relevantPart": "deleteAllResultsForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 100,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/ScanProjectConfigRepository.java",
               "line": 16,
               "column": 7,
               "source": "\tvoid deleteAllConfigurationsForProject(String projectId);",
               "relevantPart": "deleteAllConfigurationsForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 101,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/ScanReportRepository.java",
               "line": 18,
               "column": 7,
               "source": "\tvoid deleteAllReportsForProject(String projectId);",
               "relevantPart": "deleteAllReportsForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 102,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/ScanReportRepository.java",
               "line": 22,
               "column": 7,
               "source": "\tvoid deleteAllReportsForSecHubJobUUID(UUID sechubJobUUID);",
               "relevantPart": "deleteAllReportsForSecHubJobUUID"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 103,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/access/ScheduleAccessRepository.java",
               "line": 16,
               "column": 14,
               "source": "\tpublic void deleteAcessForUserAtAll(String userId);",
               "relevantPart": "deleteAcessForUserAtAll"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 104,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/access/ScheduleAccessRepository.java",
               "line": 20,
               "column": 14,
               "source": "\tpublic void deleteAnyAccessForProject(String projectId);",
               "relevantPart": "deleteAnyAccessForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 105,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/job/SecHubJobRepository.java",
               "line": 19,
               "column": 37,
               "source": "\tpublic Optional<ScheduleSecHubJob> findForProject(String projectId, UUID jobUUID);",
               "relevantPart": "findForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 106,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/job/SecHubJobRepository.java",
               "line": 22,
               "column": 14,
               "source": "\tpublic long countRunningJobs();",
               "relevantPart": "countRunningJobs"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 107,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/job/SecHubJobRepository.java",
               "line": 26,
               "column": 36,
               "source": "    public List<ScheduleSecHubJob> findAllRunningJobsStartedBefore(@Param(\"untilLocalDateTime\")LocalDateTime untilLocalDateTime);",
               "relevantPart": "findAllRunningJobsStartedBefore"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 108,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/job/SecHubJobRepository.java",
               "line": 30,
               "column": 14,
               "source": "\tpublic long countWaitingJobs();",
               "relevantPart": "countWaitingJobs"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 109,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/job/SecHubJobRepository.java",
               "line": 34,
               "column": 17,
               "source": "    public void deleteWaitingJobs();",
               "relevantPart": "deleteWaitingJobs"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 110,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/whitelist/ProjectWhitelistEntryRepository.java",
               "line": 17,
               "column": 37,
               "source": "\tpublic List<ProjectWhitelistEntry> fetchWhiteListEntriesForProject(String projectId);",
               "relevantPart": "fetchWhiteListEntriesForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 111,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/whitelist/ProjectWhitelistEntryRepository.java",
               "line": 21,
               "column": 14,
               "source": "\tpublic void deleteAllEntriesForProject(String projectId);",
               "relevantPart": "deleteAllEntriesForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 112,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobInformationRepository.java",
               "line": 21,
               "column": 69,
               "source": "\tpublic void deleteJobInformationWithJobUUID(@Param(\"jobUUID\") UUID jobUUID);",
               "relevantPart": "jobUUID"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 113,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/access/ScanAccessRepository.java",
               "line": 16,
               "column": 45,
               "source": "\tpublic void deleteAcessForUserAtAll(String userId);",
               "relevantPart": "userId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 114,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/access/ScanAccessRepository.java",
               "line": 20,
               "column": 47,
               "source": "\tpublic void deleteAnyAccessForProject(String projectId);",
               "relevantPart": "projectId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 115,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/log/ProjectScanLogRepository.java",
               "line": 16,
               "column": 41,
               "source": "\tvoid deleteAllLogDataForProject(String projectId);",
               "relevantPart": "projectId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 116,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/product/ProductResultRepository.java",
               "line": 16,
               "column": 41,
               "source": "\tvoid deleteAllResultsForProject(String projectId);",
               "relevantPart": "projectId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 117,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/project/ScanProjectConfigRepository.java",
               "line": 16,
               "column": 48,
               "source": "\tvoid deleteAllConfigurationsForProject(String projectId);",
               "relevantPart": "projectId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 118,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/ScanReportRepository.java",
               "line": 18,
               "column": 41,
               "source": "\tvoid deleteAllReportsForProject(String projectId);",
               "relevantPart": "projectId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 119,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/ScanReportRepository.java",
               "line": 22,
               "column": 45,
               "source": "\tvoid deleteAllReportsForSecHubJobUUID(UUID sechubJobUUID);",
               "relevantPart": "sechubJobUUID"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 120,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/access/ScheduleAccessRepository.java",
               "line": 16,
               "column": 45,
               "source": "\tpublic void deleteAcessForUserAtAll(String userId);",
               "relevantPart": "userId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 121,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/access/ScheduleAccessRepository.java",
               "line": 20,
               "column": 47,
               "source": "\tpublic void deleteAnyAccessForProject(String projectId);",
               "relevantPart": "projectId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 122,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/job/SecHubJobRepository.java",
               "line": 19,
               "column": 59,
               "source": "\tpublic Optional<ScheduleSecHubJob> findForProject(String projectId, UUID jobUUID);",
               "relevantPart": "projectId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 123,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/job/SecHubJobRepository.java",
               "line": 19,
               "column": 75,
               "source": "\tpublic Optional<ScheduleSecHubJob> findForProject(String projectId, UUID jobUUID);",
               "relevantPart": "jobUUID"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 124,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/job/SecHubJobRepository.java",
               "line": 26,
               "column": 110,
               "source": "    public List<ScheduleSecHubJob> findAllRunningJobsStartedBefore(@Param(\"untilLocalDateTime\")LocalDateTime untilLocalDateTime);",
               "relevantPart": "untilLocalDateTime"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 125,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/whitelist/ProjectWhitelistEntryRepository.java",
               "line": 17,
               "column": 76,
               "source": "\tpublic List<ProjectWhitelistEntry> fetchWhiteListEntriesForProject(String projectId);",
               "relevantPart": "projectId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 126,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/whitelist/ProjectWhitelistEntryRepository.java",
               "line": 21,
               "column": 48,
               "source": "\tpublic void deleteAllEntriesForProject(String projectId);",
               "relevantPart": "projectId"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 127,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 21,
               "column": 36,
               "source": "\t\tdeleteProjectToUser.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 128,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 25,
               "column": 35,
               "source": "\t\tdeleteProjectToURI.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 129,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 29,
               "column": 30,
               "source": "\t\tdeleteProject.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 130,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserRepositoryImpl.java",
               "line": 25,
               "column": 60,
               "source": "\t\tObject result = countUserIsOwnerOfProject.getSingleResult();",
               "relevantPart": "getSingleResult"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 131,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserRepositoryImpl.java",
               "line": 33,
               "column": 36,
               "source": "\t\tdeleteProjectToUser.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 132,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserRepositoryImpl.java",
               "line": 37,
               "column": 27,
               "source": "\t\tdeleteUser.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 133,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/log/ProjectScanLogRepositoryImpl.java",
               "line": 41,
               "column": 29,
               "source": "\t\treturn query.getResultList();",
               "relevantPart": "getResultList"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 134,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/product/ProductResultRepositoryImpl.java",
               "line": 40,
               "column": 29,
               "source": "\t\treturn query.getResultList();",
               "relevantPart": "getResultList"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 135,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/jpa/TypedQuerySupport.java",
               "line": 41,
               "column": 34,
               "source": "\t\t\tresult = query.getSingleResult();",
               "relevantPart": "getSingleResult"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 136,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/ScheduleAssertService.java",
               "line": 54,
               "column": 31,
               "source": "\t\tOptional<ScheduleSecHubJob> secHubJob = jobRepository.findForProject(projectId, jobUUID);",
               "relevantPart": "secHubJob"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 137,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/status/SchedulerStatusService.java",
               "line": 37,
               "column": 8,
               "source": "\t\tlong amountOfRunningJobs=jobRepository.countRunningJobs();",
               "relevantPart": "amountOfRunningJobs"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 138,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerStartHandler.java",
               "line": 53,
               "column": 37,
               "source": "            List<ScheduleSecHubJob> jobsRunningButStartedBefore = repository.findAllRunningJobsStartedBefore(LocalDateTime.now());",
               "relevantPart": "jobsRunningButStartedBefore"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 139,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/status/SchedulerStatusService.java",
               "line": 38,
               "column": 8,
               "source": "\t\tlong amountOfWaitingJobs=jobRepository.countWaitingJobs();",
               "relevantPart": "amountOfWaitingJobs"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 140,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/whitelist/ProjectWhiteListSecHubConfigurationValidationService.java",
               "line": 76,
               "column": 31,
               "source": "\t\tList<ProjectWhitelistEntry> whiteListEntries = projectWhiteListEntryRepository.fetchWhiteListEntriesForProject(configuration.getProjectId());",
               "relevantPart": "whiteListEntries"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 141,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobInformationListService.java",
               "line": 22,
               "column": 39,
               "source": "\t\treturn repository.findAllRunningJobs();",
               "relevantPart": "findAllRunningJobs"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 142,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobInformationDeleteService.java",
               "line": 33,
               "column": 45,
               "source": "\t\trepository.deleteJobInformationWithJobUUID(jobUUID);",
               "relevantPart": "deleteJobInformationWithJobUUID"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 143,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/access/ScanRevokeUserAccessAtAllService.java",
               "line": 32,
               "column": 37,
               "source": "\t\trepository.deleteAcessForUserAtAll(userId);",
               "relevantPart": "deleteAcessForUserAtAll"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 144,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/access/ScanDeleteAnyAccessToProjectAtAllService.java",
               "line": 36,
               "column": 49,
               "source": "\t\tscanAccessRepository.deleteAnyAccessForProject(projectId);",
               "relevantPart": "deleteAnyAccessForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 145,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ProjectDataDeleteService.java",
               "line": 56,
               "column": 47,
               "source": "\t\tscanLogRepository.deleteAllLogDataForProject(projectId);",
               "relevantPart": "deleteAllLogDataForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 146,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ProjectDataDeleteService.java",
               "line": 54,
               "column": 53,
               "source": "\t\tproductResultRepository.deleteAllResultsForProject(projectId);",
               "relevantPart": "deleteAllResultsForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 147,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ProjectDataDeleteService.java",
               "line": 57,
               "column": 64,
               "source": "\t\tscanProjectConfigRepository.deleteAllConfigurationsForProject(projectId);",
               "relevantPart": "deleteAllConfigurationsForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 148,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ProjectDataDeleteService.java",
               "line": 55,
               "column": 50,
               "source": "\t\tscanReportRepository.deleteAllReportsForProject(projectId);",
               "relevantPart": "deleteAllReportsForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 149,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/CreateScanReportService.java",
               "line": 56,
               "column": 52,
               "source": "\t\treportRepository.deleteAllReportsForSecHubJobUUID(sechubJobUUID);",
               "relevantPart": "deleteAllReportsForSecHubJobUUID"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 150,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/access/ScheduleRevokeUserAccessAtAllService.java",
               "line": 32,
               "column": 37,
               "source": "\t\trepository.deleteAcessForUserAtAll(userId);",
               "relevantPart": "deleteAcessForUserAtAll"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 151,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/access/ScheduleDeleteAllProjectAcessService.java",
               "line": 32,
               "column": 39,
               "source": "\t\trepository.deleteAnyAccessForProject(projectId);",
               "relevantPart": "deleteAnyAccessForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 152,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/IntegrationTestSchedulerService.java",
               "line": 26,
               "column": 37,
               "source": "        repository.deleteWaitingJobs();",
               "relevantPart": "deleteWaitingJobs"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 153,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/whitelist/ProjectWhiteListUpdateService.java",
               "line": 34,
               "column": 40,
               "source": "\t\trepository.deleteAllEntriesForProject(projectId);",
               "relevantPart": "deleteAllEntriesForProject"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 154,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/util/FileChecksumSHA256Service.java",
               "line": 45,
               "column": 28,
               "source": "            while (dis.read() != -1) ; //empty loop to clear the data",
               "relevantPart": "read"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 155,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/storage/filesystem/SharedVolumeJobStorage.java",
               "line": 68,
               "column": 14,
               "source": "\t\t\tFiles.copy(inputStream, pathToFile, StandardCopyOption.REPLACE_EXISTING);",
               "relevantPart": "copy"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 156,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/storage/filesystem/SharedVolumeJobStorage.java",
               "line": 60,
               "column": 27,
               "source": "\t\t\tFiles.createDirectories(path);",
               "relevantPart": "createDirectories"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 157,
            "name": "Improper Resource Access Authorization",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerUploadService.java",
               "line": 78,
               "column": 35,
               "source": "\t\t\t\ttmpFile = Files.createTempFile(\"sechub_schedule_upload_tmp\", null);",
               "relevantPart": "createTempFile"
            },
            "type": "codeScan",
            "cweId": 285
         },
         {
            "id": 158,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
               "line": 52,
               "column": 31,
               "source": "\t\tsb.append(request.getHeaders().toString());",
               "relevantPart": "getHeaders",
               "calls": {
                  "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                  "line": 52,
                  "column": 42,
                  "source": "\t\tsb.append(request.getHeaders().toString());",
                  "relevantPart": "toString",
                  "calls": {
                     "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                     "line": 52,
                     "column": 12,
                     "source": "\t\tsb.append(request.getHeaders().toString());",
                     "relevantPart": "append",
                     "calls": {
                        "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                        "line": 53,
                        "column": 3,
                        "source": "\t\tsb.append(\"\\n URI:\");",
                        "relevantPart": "sb",
                        "calls": {
                           "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                           "line": 54,
                           "column": 3,
                           "source": "\t\tsb.append(request.getURI().toString());",
                           "relevantPart": "sb",
                           "calls": {
                              "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                              "line": 55,
                              "column": 3,
                              "source": "\t\tsb.append(\"\\n Body:\\n\");",
                              "relevantPart": "sb",
                              "calls": {
                                 "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                 "line": 56,
                                 "column": 3,
                                 "source": "\t\tsb.append(new String(body, \"UTF-8\"));",
                                 "relevantPart": "sb",
                                 "calls": {
                                    "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                    "line": 57,
                                    "column": 3,
                                    "source": "\t\tsb.append(\"\\n\\nResponse:\");",
                                    "relevantPart": "sb",
                                    "calls": {
                                       "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                       "line": 58,
                                       "column": 3,
                                       "source": "\t\tsb.append(\"\\n Status:\");",
                                       "relevantPart": "sb",
                                       "calls": {
                                          "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                          "line": 59,
                                          "column": 3,
                                          "source": "\t\tsb.append(response.getStatusCode());",
                                          "relevantPart": "sb",
                                          "calls": {
                                             "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                             "line": 60,
                                             "column": 3,
                                             "source": "\t\tsb.append(\":\");",
                                             "relevantPart": "sb",
                                             "calls": {
                                                "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                "line": 61,
                                                "column": 3,
                                                "source": "\t\tsb.append(response.getStatusText());",
                                                "relevantPart": "sb",
                                                "calls": {
                                                   "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                   "line": 62,
                                                   "column": 3,
                                                   "source": "\t\tsb.append(\"\\n Headers:\");",
                                                   "relevantPart": "sb",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                      "line": 63,
                                                      "column": 3,
                                                      "source": "\t\tsb.append(response.getHeaders().toString());",
                                                      "relevantPart": "sb",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                         "line": 64,
                                                         "column": 3,
                                                         "source": "\t\tsb.append(\"\\n Body:\");",
                                                         "relevantPart": "sb",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                            "line": 66,
                                                            "column": 4,
                                                            "source": "\t\t\tsb.append(buffer.lines().collect(Collectors.joining(\"\\n\")));",
                                                            "relevantPart": "sb",
                                                            "calls": {
                                                               "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                               "line": 70,
                                                               "column": 3,
                                                               "source": "\t\tsb.append(response.getHeaders().toString());",
                                                               "relevantPart": "sb",
                                                               "calls": {
                                                                  "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                                  "line": 72,
                                                                  "column": 20,
                                                                  "source": "\t\tString message = sb.toString();",
                                                                  "relevantPart": "sb",
                                                                  "calls": {
                                                                     "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                                     "line": 72,
                                                                     "column": 31,
                                                                     "source": "\t\tString message = sb.toString();",
                                                                     "relevantPart": "toString",
                                                                     "calls": {
                                                                        "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                                        "line": 72,
                                                                        "column": 10,
                                                                        "source": "\t\tString message = sb.toString();",
                                                                        "relevantPart": "message",
                                                                        "calls": {
                                                                           "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                                           "line": 73,
                                                                           "column": 13,
                                                                           "source": "\t\tLOG.debug(message);",
                                                                           "relevantPart": "message",
                                                                           "calls": {
                                                                              "location": "com/daimler/sechub/adapter/TraceLogClientHTTPRequestInterceptor.java",
                                                                              "line": 73,
                                                                              "column": 12,
                                                                              "source": "\t\tLOG.debug(message);",
                                                                              "relevantPart": "debug"
                                                                           }
                                                                        }
                                                                     }
                                                                  }
                                                               }
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 159,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 67,
               "column": 59,
               "source": "\tpublic void cancelJob(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 69,
                  "column": 30,
                  "source": "\t\tjobCancelService.cancelJob(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                     "line": 51,
                     "column": 29,
                     "source": "\tpublic void cancelJob(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                        "line": 56,
                        "column": 37,
                        "source": "\t\tJobMessage message = buildMessage(jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                           "line": 62,
                           "column": 39,
                           "source": "\tprivate JobMessage buildMessage(UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                              "line": 68,
                              "column": 20,
                              "source": "\t\tprobe.setJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                 "line": 126,
                                 "column": 30,
                                 "source": "\tpublic void setJobUUID(UUID jobUUID) {",
                                 "relevantPart": "jobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                    "line": 127,
                                    "column": 18,
                                    "source": "\t\tthis.jobUUID = jobUUID;",
                                    "relevantPart": "jobUUID",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                       "line": 127,
                                       "column": 7,
                                       "source": "\t\tthis.jobUUID = jobUUID;",
                                       "relevantPart": "jobUUID",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                          "line": 68,
                                          "column": 3,
                                          "source": "\t\tprobe.setJobUUID(jobUUID);",
                                          "relevantPart": "probe",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                             "line": 69,
                                             "column": 47,
                                             "source": "\t\tExample<JobInformation> example = Example.of(probe);",
                                             "relevantPart": "of",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                                "line": 69,
                                                "column": 27,
                                                "source": "\t\tExample<JobInformation> example = Example.of(probe);",
                                                "relevantPart": "example",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                                   "line": 70,
                                                   "column": 60,
                                                   "source": "\t\tOptional<JobInformation> optJobInfo = repository.findOne(example);",
                                                   "relevantPart": "example",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                                      "line": 70,
                                                      "column": 59,
                                                      "source": "\t\tOptional<JobInformation> optJobInfo = repository.findOne(example);",
                                                      "relevantPart": "findOne",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                                         "line": 70,
                                                         "column": 28,
                                                         "source": "\t\tOptional<JobInformation> optJobInfo = repository.findOne(example);",
                                                         "relevantPart": "optJobInfo",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                                            "line": 71,
                                                            "column": 8,
                                                            "source": "\t\tif (!optJobInfo.isPresent()) {",
                                                            "relevantPart": "optJobInfo",
                                                            "calls": {
                                                               "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                                               "line": 76,
                                                               "column": 28,
                                                               "source": "\t\tJobInformation jobInfo = optJobInfo.get();",
                                                               "relevantPart": "optJobInfo",
                                                               "calls": {
                                                                  "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                                                  "line": 76,
                                                                  "column": 42,
                                                                  "source": "\t\tJobInformation jobInfo = optJobInfo.get();",
                                                                  "relevantPart": "get",
                                                                  "calls": {
                                                                     "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                                                     "line": 76,
                                                                     "column": 18,
                                                                     "source": "\t\tJobInformation jobInfo = optJobInfo.get();",
                                                                     "relevantPart": "jobInfo",
                                                                     "calls": {
                                                                        "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                                                        "line": 83,
                                                                        "column": 106,
                                                                        "source": "\t\t\tLOG.warn(\"Did not found owner {} inside user repo, so not able to resolve owner email address\",jobInfo.owner);",
                                                                        "relevantPart": "owner",
                                                                        "calls": {
                                                                           "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                                                           "line": 83,
                                                                           "column": 12,
                                                                           "source": "\t\t\tLOG.warn(\"Did not found owner {} inside user repo, so not able to resolve owner email address\",jobInfo.owner);",
                                                                           "relevantPart": "warn"
                                                                        }
                                                                     }
                                                                  }
                                                               }
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 160,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 67,
               "column": 59,
               "source": "\tpublic void cancelJob(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 69,
                  "column": 30,
                  "source": "\t\tjobCancelService.cancelJob(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                     "line": 51,
                     "column": 29,
                     "source": "\tpublic void cancelJob(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                        "line": 54,
                        "column": 58,
                        "source": "\t\tauditLogService.log(\"Requested cancelation of job {}\", jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                           "line": 37,
                           "column": 34,
                           "source": "\tpublic void log(String message, Object ...objects ) {",
                           "relevantPart": "objects",
                           "calls": {
                              "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                              "line": 43,
                              "column": 29,
                              "source": "\t\tlist.addAll(Arrays.asList(objects));",
                              "relevantPart": "objects",
                              "calls": {
                                 "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                 "line": 43,
                                 "column": 28,
                                 "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                 "relevantPart": "asList",
                                 "calls": {
                                    "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                    "line": 43,
                                    "column": 14,
                                    "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                    "relevantPart": "addAll",
                                    "calls": {
                                       "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                       "line": 47,
                                       "column": 37,
                                       "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                       "relevantPart": "list",
                                       "calls": {
                                          "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                          "line": 47,
                                          "column": 49,
                                          "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                          "relevantPart": "toArray",
                                          "calls": {
                                             "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                             "line": 47,
                                             "column": 12,
                                             "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                             "relevantPart": "info"
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 161,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 75,
               "column": 63,
               "source": "    public void restartJob(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 77,
                  "column": 45,
                  "source": "        jobRestartRequestService.restartJob(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                     "line": 55,
                     "column": 33,
                     "source": "    public void restartJob(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                        "line": 58,
                        "column": 67,
                        "source": "        auditLogService.log(\"Requested restart (soft) of job {}\", jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                           "line": 37,
                           "column": 34,
                           "source": "\tpublic void log(String message, Object ...objects ) {",
                           "relevantPart": "objects",
                           "calls": {
                              "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                              "line": 43,
                              "column": 29,
                              "source": "\t\tlist.addAll(Arrays.asList(objects));",
                              "relevantPart": "objects",
                              "calls": {
                                 "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                 "line": 43,
                                 "column": 28,
                                 "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                 "relevantPart": "asList",
                                 "calls": {
                                    "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                    "line": 43,
                                    "column": 14,
                                    "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                    "relevantPart": "addAll",
                                    "calls": {
                                       "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                       "line": 47,
                                       "column": 37,
                                       "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                       "relevantPart": "list",
                                       "calls": {
                                          "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                          "line": 47,
                                          "column": 49,
                                          "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                          "relevantPart": "toArray",
                                          "calls": {
                                             "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                             "line": 47,
                                             "column": 12,
                                             "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                             "relevantPart": "info"
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 162,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 83,
               "column": 67,
               "source": "    public void restartJobHard(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 85,
                  "column": 49,
                  "source": "        jobRestartRequestService.restartJobHard(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                     "line": 68,
                     "column": 37,
                     "source": "    public void restartJobHard(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                        "line": 71,
                        "column": 67,
                        "source": "        auditLogService.log(\"Requested restart (hard) of job {}\", jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                           "line": 37,
                           "column": 34,
                           "source": "\tpublic void log(String message, Object ...objects ) {",
                           "relevantPart": "objects",
                           "calls": {
                              "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                              "line": 43,
                              "column": 29,
                              "source": "\t\tlist.addAll(Arrays.asList(objects));",
                              "relevantPart": "objects",
                              "calls": {
                                 "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                 "line": 43,
                                 "column": 28,
                                 "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                 "relevantPart": "asList",
                                 "calls": {
                                    "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                    "line": 43,
                                    "column": 14,
                                    "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                    "relevantPart": "addAll",
                                    "calls": {
                                       "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                       "line": 47,
                                       "column": 37,
                                       "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                       "relevantPart": "list",
                                       "calls": {
                                          "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                          "line": 47,
                                          "column": 49,
                                          "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                          "relevantPart": "toArray",
                                          "calls": {
                                             "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                             "line": 47,
                                             "column": 12,
                                             "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                             "relevantPart": "info"
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 163,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
               "line": 52,
               "column": 34,
               "source": "\t\t\t@PathVariable(\"jobUUID\") UUID jobUUID",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                  "line": 55,
                  "column": 43,
                  "source": "\t\treturn fetchScanReportResult(projectId, jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                     "line": 74,
                     "column": 72,
                     "source": "\tprivate ScanReportResult fetchScanReportResult(String projectId, UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                        "line": 75,
                        "column": 63,
                        "source": "\t\treturn downloadReportService.getScanReportResult(projectId, jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                           "line": 42,
                           "column": 69,
                           "source": "\tpublic ScanReportResult getScanReportResult(String projectId, UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                              "line": 48,
                              "column": 63,
                              "source": "\t\tauditLogService.log(\"starts download of report for job: {}\",jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                 "line": 37,
                                 "column": 34,
                                 "source": "\tpublic void log(String message, Object ...objects ) {",
                                 "relevantPart": "objects",
                                 "calls": {
                                    "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                    "line": 43,
                                    "column": 29,
                                    "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                    "relevantPart": "objects",
                                    "calls": {
                                       "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                       "line": 43,
                                       "column": 28,
                                       "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                       "relevantPart": "asList",
                                       "calls": {
                                          "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                          "line": 43,
                                          "column": 14,
                                          "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                          "relevantPart": "addAll",
                                          "calls": {
                                             "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                             "line": 47,
                                             "column": 37,
                                             "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                             "relevantPart": "list",
                                             "calls": {
                                                "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                                "line": 47,
                                                "column": 49,
                                                "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                                "relevantPart": "toArray",
                                                "calls": {
                                                   "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                                   "line": 47,
                                                   "column": 12,
                                                   "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                                   "relevantPart": "info"
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 164,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
               "line": 65,
               "column": 34,
               "source": "\t\t\t@PathVariable(\"jobUUID\") UUID jobUUID",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                  "line": 68,
                  "column": 66,
                  "source": "\t\tScanReportResult scanResult = fetchScanReportResult(projectId, jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                     "line": 74,
                     "column": 72,
                     "source": "\tprivate ScanReportResult fetchScanReportResult(String projectId, UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                        "line": 75,
                        "column": 63,
                        "source": "\t\treturn downloadReportService.getScanReportResult(projectId, jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                           "line": 42,
                           "column": 69,
                           "source": "\tpublic ScanReportResult getScanReportResult(String projectId, UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                              "line": 48,
                              "column": 63,
                              "source": "\t\tauditLogService.log(\"starts download of report for job: {}\",jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                 "line": 37,
                                 "column": 34,
                                 "source": "\tpublic void log(String message, Object ...objects ) {",
                                 "relevantPart": "objects",
                                 "calls": {
                                    "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                    "line": 43,
                                    "column": 29,
                                    "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                    "relevantPart": "objects",
                                    "calls": {
                                       "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                       "line": 43,
                                       "column": 28,
                                       "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                       "relevantPart": "asList",
                                       "calls": {
                                          "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                          "line": 43,
                                          "column": 14,
                                          "source": "\t\tlist.addAll(Arrays.asList(objects));",
                                          "relevantPart": "addAll",
                                          "calls": {
                                             "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                             "line": 47,
                                             "column": 37,
                                             "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                             "relevantPart": "list",
                                             "calls": {
                                                "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                                "line": 47,
                                                "column": 49,
                                                "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                                "relevantPart": "toArray",
                                                "calls": {
                                                   "location": "com/daimler/sechub/sharedkernel/logging/AuditLogService.java",
                                                   "line": 47,
                                                   "column": 12,
                                                   "source": "\t\t\tLOG.info(AUDIT_USERNAME+message, list.toArray());",
                                                   "relevantPart": "info"
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 165,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 75,
               "column": 63,
               "source": "    public void restartJob(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 77,
                  "column": 45,
                  "source": "        jobRestartRequestService.restartJob(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                     "line": 55,
                     "column": 33,
                     "source": "    public void restartJob(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                        "line": 60,
                        "column": 43,
                        "source": "        JobMessage message = buildMessage(jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                           "line": 79,
                           "column": 42,
                           "source": "    private JobMessage buildMessage(UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                              "line": 85,
                              "column": 26,
                              "source": "        probe.setJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                 "line": 126,
                                 "column": 30,
                                 "source": "\tpublic void setJobUUID(UUID jobUUID) {",
                                 "relevantPart": "jobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                    "line": 127,
                                    "column": 18,
                                    "source": "\t\tthis.jobUUID = jobUUID;",
                                    "relevantPart": "jobUUID",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                       "line": 127,
                                       "column": 7,
                                       "source": "\t\tthis.jobUUID = jobUUID;",
                                       "relevantPart": "jobUUID",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                          "line": 85,
                                          "column": 9,
                                          "source": "        probe.setJobUUID(jobUUID);",
                                          "relevantPart": "probe",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                             "line": 86,
                                             "column": 53,
                                             "source": "        Example<JobInformation> example = Example.of(probe);",
                                             "relevantPart": "of",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                "line": 86,
                                                "column": 33,
                                                "source": "        Example<JobInformation> example = Example.of(probe);",
                                                "relevantPart": "example",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                   "line": 87,
                                                   "column": 66,
                                                   "source": "        Optional<JobInformation> optJobInfo = repository.findOne(example);",
                                                   "relevantPart": "example",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                      "line": 87,
                                                      "column": 65,
                                                      "source": "        Optional<JobInformation> optJobInfo = repository.findOne(example);",
                                                      "relevantPart": "findOne",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                         "line": 87,
                                                         "column": 34,
                                                         "source": "        Optional<JobInformation> optJobInfo = repository.findOne(example);",
                                                         "relevantPart": "optJobInfo",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                            "line": 88,
                                                            "column": 14,
                                                            "source": "        if (!optJobInfo.isPresent()) {",
                                                            "relevantPart": "optJobInfo",
                                                            "calls": {
                                                               "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                               "line": 93,
                                                               "column": 34,
                                                               "source": "        JobInformation jobInfo = optJobInfo.get();",
                                                               "relevantPart": "optJobInfo",
                                                               "calls": {
                                                                  "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                                  "line": 93,
                                                                  "column": 48,
                                                                  "source": "        JobInformation jobInfo = optJobInfo.get();",
                                                                  "relevantPart": "get",
                                                                  "calls": {
                                                                     "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                                     "line": 93,
                                                                     "column": 24,
                                                                     "source": "        JobInformation jobInfo = optJobInfo.get();",
                                                                     "relevantPart": "jobInfo",
                                                                     "calls": {
                                                                        "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                                        "line": 100,
                                                                        "column": 116,
                                                                        "source": "            LOG.warn(\"Did not found owner {} inside user repo, so not able to resolve owner email address\", jobInfo.owner);",
                                                                        "relevantPart": "owner",
                                                                        "calls": {
                                                                           "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                                           "line": 100,
                                                                           "column": 21,
                                                                           "source": "            LOG.warn(\"Did not found owner {} inside user repo, so not able to resolve owner email address\", jobInfo.owner);",
                                                                           "relevantPart": "warn"
                                                                        }
                                                                     }
                                                                  }
                                                               }
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 166,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 83,
               "column": 67,
               "source": "    public void restartJobHard(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 85,
                  "column": 49,
                  "source": "        jobRestartRequestService.restartJobHard(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                     "line": 68,
                     "column": 37,
                     "source": "    public void restartJobHard(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                        "line": 73,
                        "column": 43,
                        "source": "        JobMessage message = buildMessage(jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                           "line": 79,
                           "column": 42,
                           "source": "    private JobMessage buildMessage(UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                              "line": 85,
                              "column": 26,
                              "source": "        probe.setJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                 "line": 126,
                                 "column": 30,
                                 "source": "\tpublic void setJobUUID(UUID jobUUID) {",
                                 "relevantPart": "jobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                    "line": 127,
                                    "column": 18,
                                    "source": "\t\tthis.jobUUID = jobUUID;",
                                    "relevantPart": "jobUUID",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                       "line": 127,
                                       "column": 7,
                                       "source": "\t\tthis.jobUUID = jobUUID;",
                                       "relevantPart": "jobUUID",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                          "line": 85,
                                          "column": 9,
                                          "source": "        probe.setJobUUID(jobUUID);",
                                          "relevantPart": "probe",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                             "line": 86,
                                             "column": 53,
                                             "source": "        Example<JobInformation> example = Example.of(probe);",
                                             "relevantPart": "of",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                "line": 86,
                                                "column": 33,
                                                "source": "        Example<JobInformation> example = Example.of(probe);",
                                                "relevantPart": "example",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                   "line": 87,
                                                   "column": 66,
                                                   "source": "        Optional<JobInformation> optJobInfo = repository.findOne(example);",
                                                   "relevantPart": "example",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                      "line": 87,
                                                      "column": 65,
                                                      "source": "        Optional<JobInformation> optJobInfo = repository.findOne(example);",
                                                      "relevantPart": "findOne",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                         "line": 87,
                                                         "column": 34,
                                                         "source": "        Optional<JobInformation> optJobInfo = repository.findOne(example);",
                                                         "relevantPart": "optJobInfo",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                            "line": 88,
                                                            "column": 14,
                                                            "source": "        if (!optJobInfo.isPresent()) {",
                                                            "relevantPart": "optJobInfo",
                                                            "calls": {
                                                               "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                               "line": 93,
                                                               "column": 34,
                                                               "source": "        JobInformation jobInfo = optJobInfo.get();",
                                                               "relevantPart": "optJobInfo",
                                                               "calls": {
                                                                  "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                                  "line": 93,
                                                                  "column": 48,
                                                                  "source": "        JobInformation jobInfo = optJobInfo.get();",
                                                                  "relevantPart": "get",
                                                                  "calls": {
                                                                     "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                                     "line": 93,
                                                                     "column": 24,
                                                                     "source": "        JobInformation jobInfo = optJobInfo.get();",
                                                                     "relevantPart": "jobInfo",
                                                                     "calls": {
                                                                        "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                                        "line": 100,
                                                                        "column": 116,
                                                                        "source": "            LOG.warn(\"Did not found owner {} inside user repo, so not able to resolve owner email address\", jobInfo.owner);",
                                                                        "relevantPart": "owner",
                                                                        "calls": {
                                                                           "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                                                           "line": 100,
                                                                           "column": 21,
                                                                           "source": "            LOG.warn(\"Did not found owner {} inside user repo, so not able to resolve owner email address\", jobInfo.owner);",
                                                                           "relevantPart": "warn"
                                                                        }
                                                                     }
                                                                  }
                                                               }
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 167,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 115,
               "column": 73,
               "source": "\tpublic void assignUserToProject(@PathVariable(name=\"projectId\") String projectId, @PathVariable(name=\"userId\") String userId) {",
               "relevantPart": "projectId",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
                  "line": 117,
                  "column": 58,
                  "source": "\t\tassignUserToProjectService.assignUserToProject(userId, projectId);",
                  "relevantPart": "projectId",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                     "line": 64,
                     "column": 56,
                     "source": "\tpublic void assignUserToProject(String userId, String projectId) {",
                     "relevantPart": "projectId",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                        "line": 70,
                        "column": 57,
                        "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                        "relevantPart": "projectId",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                           "line": 70,
                           "column": 56,
                           "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                           "relevantPart": "findOrFailProject",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                              "line": 70,
                              "column": 11,
                              "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                              "relevantPart": "project",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                                 "line": 72,
                                 "column": 24,
                                 "source": "\t\tif (!project.getUsers().add(user)) {",
                                 "relevantPart": "getUsers",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                                    "line": 72,
                                    "column": 24,
                                    "source": "\t\tif (!project.getUsers().add(user)) {",
                                    "relevantPart": "getUsers",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                                       "line": 76,
                                       "column": 19,
                                       "source": "\t\tproject.getUsers().add(user);",
                                       "relevantPart": "getUsers",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                                          "line": 76,
                                          "column": 19,
                                          "source": "\t\tproject.getUsers().add(user);",
                                          "relevantPart": "getUsers",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                                             "line": 78,
                                             "column": 43,
                                             "source": "\t\ttransactionService.saveInOwnTransaction(project,user);",
                                             "relevantPart": "project",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                "line": 38,
                                                "column": 46,
                                                "source": "\tpublic Project saveInOwnTransaction(Project project, User user) {",
                                                "relevantPart": "project",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                   "line": 43,
                                                   "column": 42,
                                                   "source": "\t\tProject result = projectRepository.save(project);",
                                                   "relevantPart": "save",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                      "line": 43,
                                                      "column": 11,
                                                      "source": "\t\tProject result = projectRepository.save(project);",
                                                      "relevantPart": "result",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                         "line": 44,
                                                         "column": 45,
                                                         "source": "\t\tLOG.debug(\"Saved project:{}\", result.getId());",
                                                         "relevantPart": "getId",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                            "line": 44,
                                                            "column": 45,
                                                            "source": "\t\tLOG.debug(\"Saved project:{}\", result.getId());",
                                                            "relevantPart": "getId",
                                                            "calls": {
                                                               "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                               "line": 46,
                                                               "column": 30,
                                                               "source": "\t\tLOG.debug(\"Saved user:{}\", result.getId());",
                                                               "relevantPart": "result",
                                                               "calls": {
                                                                  "location": "com/daimler/sechub/domain/administration/project/Project.java",
                                                                  "line": 99,
                                                                  "column": 10,
                                                                  "source": "\t\treturn id;",
                                                                  "relevantPart": "id",
                                                                  "calls": {
                                                                     "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                                     "line": 46,
                                                                     "column": 42,
                                                                     "source": "\t\tLOG.debug(\"Saved user:{}\", result.getId());",
                                                                     "relevantPart": "getId",
                                                                     "calls": {
                                                                        "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                                        "line": 46,
                                                                        "column": 12,
                                                                        "source": "\t\tLOG.debug(\"Saved user:{}\", result.getId());",
                                                                        "relevantPart": "debug"
                                                                     }
                                                                  }
                                                               }
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 168,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 124,
               "column": 77,
               "source": "\tpublic void unassignUserFromProject(@PathVariable(name=\"projectId\") String projectId, @PathVariable(name=\"userId\") String userId) {",
               "relevantPart": "projectId",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
                  "line": 126,
                  "column": 64,
                  "source": "\t\tunassignUserToProjectService.unassignUserFromProject(userId, projectId);",
                  "relevantPart": "projectId",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                     "line": 57,
                     "column": 60,
                     "source": "\tpublic void unassignUserFromProject(String userId, String projectId) {",
                     "relevantPart": "projectId",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                        "line": 63,
                        "column": 57,
                        "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                        "relevantPart": "projectId",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                           "line": 63,
                           "column": 56,
                           "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                           "relevantPart": "findOrFailProject",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                              "line": 63,
                              "column": 11,
                              "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                              "relevantPart": "project",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                                 "line": 65,
                                 "column": 24,
                                 "source": "\t\tif (!project.getUsers().remove(user)) {",
                                 "relevantPart": "getUsers",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                                    "line": 65,
                                    "column": 24,
                                    "source": "\t\tif (!project.getUsers().remove(user)) {",
                                    "relevantPart": "getUsers",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                                       "line": 70,
                                       "column": 43,
                                       "source": "\t\ttransactionService.saveInOwnTransaction(project,user);",
                                       "relevantPart": "project",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                          "line": 38,
                                          "column": 46,
                                          "source": "\tpublic Project saveInOwnTransaction(Project project, User user) {",
                                          "relevantPart": "project",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                             "line": 43,
                                             "column": 42,
                                             "source": "\t\tProject result = projectRepository.save(project);",
                                             "relevantPart": "save",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                "line": 43,
                                                "column": 11,
                                                "source": "\t\tProject result = projectRepository.save(project);",
                                                "relevantPart": "result",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                   "line": 44,
                                                   "column": 45,
                                                   "source": "\t\tLOG.debug(\"Saved project:{}\", result.getId());",
                                                   "relevantPart": "getId",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                      "line": 44,
                                                      "column": 45,
                                                      "source": "\t\tLOG.debug(\"Saved project:{}\", result.getId());",
                                                      "relevantPart": "getId",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                         "line": 46,
                                                         "column": 30,
                                                         "source": "\t\tLOG.debug(\"Saved user:{}\", result.getId());",
                                                         "relevantPart": "result",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/administration/project/Project.java",
                                                            "line": 99,
                                                            "column": 10,
                                                            "source": "\t\treturn id;",
                                                            "relevantPart": "id",
                                                            "calls": {
                                                               "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                               "line": 46,
                                                               "column": 42,
                                                               "source": "\t\tLOG.debug(\"Saved user:{}\", result.getId());",
                                                               "relevantPart": "getId",
                                                               "calls": {
                                                                  "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                                  "line": 46,
                                                                  "column": 12,
                                                                  "source": "\t\tLOG.debug(\"Saved user:{}\", result.getId());",
                                                                  "relevantPart": "debug"
                                                               }
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 169,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 115,
               "column": 73,
               "source": "\tpublic void assignUserToProject(@PathVariable(name=\"projectId\") String projectId, @PathVariable(name=\"userId\") String userId) {",
               "relevantPart": "projectId",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
                  "line": 117,
                  "column": 58,
                  "source": "\t\tassignUserToProjectService.assignUserToProject(userId, projectId);",
                  "relevantPart": "projectId",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                     "line": 64,
                     "column": 56,
                     "source": "\tpublic void assignUserToProject(String userId, String projectId) {",
                     "relevantPart": "projectId",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                        "line": 70,
                        "column": 57,
                        "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                        "relevantPart": "projectId",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                           "line": 70,
                           "column": 56,
                           "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                           "relevantPart": "findOrFailProject",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                              "line": 70,
                              "column": 11,
                              "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                              "relevantPart": "project",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                                 "line": 72,
                                 "column": 24,
                                 "source": "\t\tif (!project.getUsers().add(user)) {",
                                 "relevantPart": "getUsers",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                                    "line": 72,
                                    "column": 24,
                                    "source": "\t\tif (!project.getUsers().add(user)) {",
                                    "relevantPart": "getUsers",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                                       "line": 76,
                                       "column": 19,
                                       "source": "\t\tproject.getUsers().add(user);",
                                       "relevantPart": "getUsers",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                                          "line": 76,
                                          "column": 19,
                                          "source": "\t\tproject.getUsers().add(user);",
                                          "relevantPart": "getUsers",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/project/ProjectAssignUserService.java",
                                             "line": 78,
                                             "column": 43,
                                             "source": "\t\ttransactionService.saveInOwnTransaction(project,user);",
                                             "relevantPart": "project",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                "line": 38,
                                                "column": 46,
                                                "source": "\tpublic Project saveInOwnTransaction(Project project, User user) {",
                                                "relevantPart": "project",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                   "line": 43,
                                                   "column": 42,
                                                   "source": "\t\tProject result = projectRepository.save(project);",
                                                   "relevantPart": "save",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                      "line": 43,
                                                      "column": 11,
                                                      "source": "\t\tProject result = projectRepository.save(project);",
                                                      "relevantPart": "result",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                         "line": 44,
                                                         "column": 45,
                                                         "source": "\t\tLOG.debug(\"Saved project:{}\", result.getId());",
                                                         "relevantPart": "getId",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/administration/project/Project.java",
                                                            "line": 99,
                                                            "column": 10,
                                                            "source": "\t\treturn id;",
                                                            "relevantPart": "id",
                                                            "calls": {
                                                               "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                               "line": 44,
                                                               "column": 45,
                                                               "source": "\t\tLOG.debug(\"Saved project:{}\", result.getId());",
                                                               "relevantPart": "getId",
                                                               "calls": {
                                                                  "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                                  "line": 44,
                                                                  "column": 12,
                                                                  "source": "\t\tLOG.debug(\"Saved project:{}\", result.getId());",
                                                                  "relevantPart": "debug"
                                                               }
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 170,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 124,
               "column": 77,
               "source": "\tpublic void unassignUserFromProject(@PathVariable(name=\"projectId\") String projectId, @PathVariable(name=\"userId\") String userId) {",
               "relevantPart": "projectId",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
                  "line": 126,
                  "column": 64,
                  "source": "\t\tunassignUserToProjectService.unassignUserFromProject(userId, projectId);",
                  "relevantPart": "projectId",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                     "line": 57,
                     "column": 60,
                     "source": "\tpublic void unassignUserFromProject(String userId, String projectId) {",
                     "relevantPart": "projectId",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                        "line": 63,
                        "column": 57,
                        "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                        "relevantPart": "projectId",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                           "line": 63,
                           "column": 56,
                           "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                           "relevantPart": "findOrFailProject",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                              "line": 63,
                              "column": 11,
                              "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                              "relevantPart": "project",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                                 "line": 65,
                                 "column": 24,
                                 "source": "\t\tif (!project.getUsers().remove(user)) {",
                                 "relevantPart": "getUsers",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                                    "line": 65,
                                    "column": 24,
                                    "source": "\t\tif (!project.getUsers().remove(user)) {",
                                    "relevantPart": "getUsers",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/project/ProjectUnassignUserService.java",
                                       "line": 70,
                                       "column": 43,
                                       "source": "\t\ttransactionService.saveInOwnTransaction(project,user);",
                                       "relevantPart": "project",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                          "line": 38,
                                          "column": 46,
                                          "source": "\tpublic Project saveInOwnTransaction(Project project, User user) {",
                                          "relevantPart": "project",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                             "line": 43,
                                             "column": 42,
                                             "source": "\t\tProject result = projectRepository.save(project);",
                                             "relevantPart": "save",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                "line": 43,
                                                "column": 11,
                                                "source": "\t\tProject result = projectRepository.save(project);",
                                                "relevantPart": "result",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                   "line": 44,
                                                   "column": 45,
                                                   "source": "\t\tLOG.debug(\"Saved project:{}\", result.getId());",
                                                   "relevantPart": "getId",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/administration/project/Project.java",
                                                      "line": 99,
                                                      "column": 10,
                                                      "source": "\t\treturn id;",
                                                      "relevantPart": "id",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                         "line": 44,
                                                         "column": 45,
                                                         "source": "\t\tLOG.debug(\"Saved project:{}\", result.getId());",
                                                         "relevantPart": "getId",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                                            "line": 44,
                                                            "column": 12,
                                                            "source": "\t\tLOG.debug(\"Saved project:{}\", result.getId());",
                                                            "relevantPart": "debug"
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 171,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 132,
               "column": 67,
               "source": "\tpublic void deleteProject(@PathVariable(name=\"projectId\") String projectId) {",
               "relevantPart": "projectId",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
                  "line": 134,
                  "column": 31,
                  "source": "\t\tdeleteService.deleteProject(projectId);",
                  "relevantPart": "projectId",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                     "line": 59,
                     "column": 35,
                     "source": "\tpublic void deleteProject(String projectId) {",
                     "relevantPart": "projectId",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                        "line": 82,
                        "column": 61,
                        "source": "\t\ttransactionService.deleteWithAssociationsInOwnTransaction(projectId);",
                        "relevantPart": "projectId",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                           "line": 51,
                           "column": 60,
                           "source": "\tpublic void deleteWithAssociationsInOwnTransaction(String projectId) {",
                           "relevantPart": "projectId",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                              "line": 57,
                              "column": 53,
                              "source": "\t\tLOG.debug(\"Deleted project:{} with associations\", projectId);",
                              "relevantPart": "projectId",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/project/ProjectTransactionService.java",
                                 "line": 57,
                                 "column": 12,
                                 "source": "\t\tLOG.debug(\"Deleted project:{} with associations\", projectId);",
                                 "relevantPart": "debug"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 172,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
               "line": 132,
               "column": 67,
               "source": "\tpublic void deleteProject(@PathVariable(name=\"projectId\") String projectId) {",
               "relevantPart": "projectId",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/project/ProjectAdministrationRestController.java",
                  "line": 134,
                  "column": 31,
                  "source": "\t\tdeleteService.deleteProject(projectId);",
                  "relevantPart": "projectId",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                     "line": 59,
                     "column": 35,
                     "source": "\tpublic void deleteProject(String projectId) {",
                     "relevantPart": "projectId",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                        "line": 64,
                        "column": 57,
                        "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                        "relevantPart": "projectId",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                           "line": 64,
                           "column": 56,
                           "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                           "relevantPart": "findOrFailProject",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                              "line": 64,
                              "column": 11,
                              "source": "\t\tProject project = projectRepository.findOrFailProject(projectId);",
                              "relevantPart": "project",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                                 "line": 68,
                                 "column": 37,
                                 "source": "\t\tmessage.setProjectId(project.getId());",
                                 "relevantPart": "getId",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                                    "line": 68,
                                    "column": 24,
                                    "source": "\t\tmessage.setProjectId(project.getId());",
                                    "relevantPart": "project",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                                       "line": 71,
                                       "column": 16,
                                       "source": "\t\tUser owner = project.getOwner();",
                                       "relevantPart": "project",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                                          "line": 71,
                                          "column": 32,
                                          "source": "\t\tUser owner = project.getOwner();",
                                          "relevantPart": "getOwner",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                                             "line": 73,
                                             "column": 74,
                                             "source": "\t\t\tLOG.warn(\"No owner found for project {} while deleting\", project.getId());",
                                             "relevantPart": "getId",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/project/Project.java",
                                                "line": 99,
                                                "column": 10,
                                                "source": "\t\treturn id;",
                                                "relevantPart": "id",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                                                   "line": 73,
                                                   "column": 74,
                                                   "source": "\t\t\tLOG.warn(\"No owner found for project {} while deleting\", project.getId());",
                                                   "relevantPart": "getId",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/administration/project/ProjectDeleteService.java",
                                                      "line": 73,
                                                      "column": 12,
                                                      "source": "\t\t\tLOG.warn(\"No owner found for project {} while deleting\", project.getId());",
                                                      "relevantPart": "warn"
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 173,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetApiTokenByOneTimeTokenRestController.java",
               "line": 34,
               "column": 66,
               "source": "\tpublic String getNewAPITokenByOneTimeToken(@PathVariable String oneTimeToken) {",
               "relevantPart": "oneTimeToken",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetApiTokenByOneTimeTokenRestController.java",
                  "line": 36,
                  "column": 89,
                  "source": "\t\treturn createUserAPITokenByOneTimeTokenService.createNewAPITokenForUserByOneTimeToken(oneTimeToken);",
                  "relevantPart": "oneTimeToken",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                     "line": 67,
                     "column": 65,
                     "source": "    public String createNewAPITokenForUserByOneTimeToken(String oneTimeToken) {",
                     "relevantPart": "oneTimeToken",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                        "line": 70,
                        "column": 72,
                        "source": "        Optional<User> found = sechubUserRepository.findByOneTimeToken(oneTimeToken);",
                        "relevantPart": "oneTimeToken",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                           "line": 70,
                           "column": 71,
                           "source": "        Optional<User> found = sechubUserRepository.findByOneTimeToken(oneTimeToken);",
                           "relevantPart": "findByOneTimeToken",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                              "line": 70,
                              "column": 24,
                              "source": "        Optional<User> found = sechubUserRepository.findByOneTimeToken(oneTimeToken);",
                              "relevantPart": "found",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                                 "line": 71,
                                 "column": 14,
                                 "source": "        if (!found.isPresent()) {",
                                 "relevantPart": "found",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                                    "line": 78,
                                    "column": 21,
                                    "source": "        User user = found.get();",
                                    "relevantPart": "found",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                                       "line": 78,
                                       "column": 30,
                                       "source": "        User user = found.get();",
                                       "relevantPart": "get",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                                          "line": 78,
                                          "column": 14,
                                          "source": "        User user = found.get();",
                                          "relevantPart": "user",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                                             "line": 80,
                                             "column": 40,
                                             "source": "        if (user.isOneTimeTokenOutDated(oneTimeOutDatedMillis)) {",
                                             "relevantPart": "isOneTimeTokenOutDated",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                                                "line": 80,
                                                "column": 13,
                                                "source": "        if (user.isOneTimeTokenOutDated(oneTimeOutDatedMillis)) {",
                                                "relevantPart": "user",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                                                   "line": 94,
                                                   "column": 63,
                                                   "source": "        LOG.info(\"Updated API token for user {}\", user.getName());",
                                                   "relevantPart": "getName",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/administration/user/User.java",
                                                      "line": 110,
                                                      "column": 10,
                                                      "source": "\t\treturn name;",
                                                      "relevantPart": "name",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                                                         "line": 94,
                                                         "column": 63,
                                                         "source": "        LOG.info(\"Updated API token for user {}\", user.getName());",
                                                         "relevantPart": "getName",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/administration/user/AnonymousUserGetAPITokenByOneTimeTokenService.java",
                                                            "line": 94,
                                                            "column": 17,
                                                            "source": "        LOG.info(\"Updated API token for user {}\", user.getName());",
                                                            "relevantPart": "info"
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 174,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestNewApiTokenRestController.java",
               "line": 35,
               "column": 106,
               "source": "\tpublic void anonymousRequestToGetNewApiTokenForUserMailAdress(@PathVariable(name=\"emailAddress\") String emailAdress) {",
               "relevantPart": "emailAdress",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestNewApiTokenRestController.java",
                  "line": 37,
                  "column": 72,
                  "source": "\t\tnewApiTokenService.anonymousRequestToGetNewApiTokenForUserMailAdress(emailAdress);",
                  "relevantPart": "emailAdress",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                     "line": 47,
                     "column": 71,
                     "source": "\tpublic void anonymousRequestToGetNewApiTokenForUserMailAdress(String userEmail) {",
                     "relevantPart": "userEmail",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                        "line": 52,
                        "column": 59,
                        "source": "\t\tOptional<User> found = userRepository.findByEmailAdress(userEmail);",
                        "relevantPart": "userEmail",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                           "line": 52,
                           "column": 58,
                           "source": "\t\tOptional<User> found = userRepository.findByEmailAdress(userEmail);",
                           "relevantPart": "findByEmailAdress",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                              "line": 52,
                              "column": 18,
                              "source": "\t\tOptional<User> found = userRepository.findByEmailAdress(userEmail);",
                              "relevantPart": "found",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                                 "line": 53,
                                 "column": 9,
                                 "source": "\t\tif (! found.isPresent()) {",
                                 "relevantPart": "found",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                                    "line": 59,
                                    "column": 43,
                                    "source": "\t\tUser user = saveUserWithNewOneTimeToken(found);",
                                    "relevantPart": "found",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                                       "line": 86,
                                       "column": 58,
                                       "source": "\tprivate User saveUserWithNewOneTimeToken(Optional<User> found) {",
                                       "relevantPart": "found",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                                          "line": 89,
                                          "column": 15,
                                          "source": "\t\tUser user = found.get();",
                                          "relevantPart": "found",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                                             "line": 89,
                                             "column": 24,
                                             "source": "\t\tUser user = found.get();",
                                             "relevantPart": "get",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                                                "line": 89,
                                                "column": 8,
                                                "source": "\t\tUser user = found.get();",
                                                "relevantPart": "user",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                                                   "line": 95,
                                                   "column": 51,
                                                   "source": "\t\tLOG.debug(\"Updated one time token for user:{}\", user.getName());",
                                                   "relevantPart": "user",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/administration/user/User.java",
                                                      "line": 110,
                                                      "column": 10,
                                                      "source": "\t\treturn name;",
                                                      "relevantPart": "name",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                                                         "line": 95,
                                                         "column": 63,
                                                         "source": "\t\tLOG.debug(\"Updated one time token for user:{}\", user.getName());",
                                                         "relevantPart": "getName",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/administration/user/AnonymousUserRequestsNewApiTokenService.java",
                                                            "line": 95,
                                                            "column": 12,
                                                            "source": "\t\tLOG.debug(\"Updated one time token for user:{}\", user.getName());",
                                                            "relevantPart": "debug"
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 175,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
               "line": 65,
               "column": 67,
               "source": "\tpublic void acceptUserSignUp(@PathVariable(name=\"userId\") String userId) {",
               "relevantPart": "userId",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
                  "line": 67,
                  "column": 50,
                  "source": "\t\tcreationService.createUserFromSelfRegistration(userId);",
                  "relevantPart": "userId",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                     "line": 65,
                     "column": 52,
                     "source": "\tpublic void createUserFromSelfRegistration(String userId) {",
                     "relevantPart": "userId",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                        "line": 73,
                        "column": 75,
                        "source": "\t\tOptional<Signup> selfRegistration = selfRegistrationRepository.findById(userId);",
                        "relevantPart": "userId",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                           "line": 73,
                           "column": 74,
                           "source": "\t\tOptional<Signup> selfRegistration = selfRegistrationRepository.findById(userId);",
                           "relevantPart": "findById",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                              "line": 73,
                              "column": 20,
                              "source": "\t\tOptional<Signup> selfRegistration = selfRegistrationRepository.findById(userId);",
                              "relevantPart": "selfRegistration",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                                 "line": 74,
                                 "column": 8,
                                 "source": "\t\tif (!selfRegistration.isPresent()) {",
                                 "relevantPart": "selfRegistration",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                                    "line": 87,
                                    "column": 24,
                                    "source": "\t\tString emailAdress = selfRegistration.get().getEmailAdress();",
                                    "relevantPart": "selfRegistration",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                                       "line": 87,
                                       "column": 44,
                                       "source": "\t\tString emailAdress = selfRegistration.get().getEmailAdress();",
                                       "relevantPart": "get",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                                          "line": 87,
                                          "column": 61,
                                          "source": "\t\tString emailAdress = selfRegistration.get().getEmailAdress();",
                                          "relevantPart": "getEmailAdress",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                                             "line": 87,
                                             "column": 10,
                                             "source": "\t\tString emailAdress = selfRegistration.get().getEmailAdress();",
                                             "relevantPart": "emailAdress",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                                                "line": 95,
                                                "column": 26,
                                                "source": "\t\t\t\t\tsanitizedLogUserId, emailAdress);",
                                                "relevantPart": "emailAdress",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/administration/user/UserCreationService.java",
                                                   "line": 93,
                                                   "column": 12,
                                                   "source": "\t\t\tLOG.warn(",
                                                   "relevantPart": "warn"
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 176,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
               "line": 105,
               "column": 72,
               "source": "\tpublic void grantSuperAdminrights(@PathVariable(name=\"userId\") String userId) {",
               "relevantPart": "userId",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/user/UserAdministrationRestController.java",
                  "line": 107,
                  "column": 61,
                  "source": "\t\tuserGrantSuperAdminRightsService.grantSuperAdminRightsFor(userId);",
                  "relevantPart": "userId",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/user/UserGrantSuperAdminRightsService.java",
                     "line": 57,
                     "column": 46,
                     "source": "\tpublic void grantSuperAdminRightsFor(String userId) {",
                     "relevantPart": "userId",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/user/UserGrantSuperAdminRightsService.java",
                        "line": 62,
                        "column": 45,
                        "source": "\t\tUser user = userRepository.findOrFailUser(userId);",
                        "relevantPart": "userId",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/user/UserGrantSuperAdminRightsService.java",
                           "line": 62,
                           "column": 44,
                           "source": "\t\tUser user = userRepository.findOrFailUser(userId);",
                           "relevantPart": "findOrFailUser",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/user/UserGrantSuperAdminRightsService.java",
                              "line": 62,
                              "column": 8,
                              "source": "\t\tUser user = userRepository.findOrFailUser(userId);",
                              "relevantPart": "user",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/user/UserGrantSuperAdminRightsService.java",
                                 "line": 64,
                                 "column": 7,
                                 "source": "\t\tif (user.isSuperAdmin()) {",
                                 "relevantPart": "user",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/user/UserGrantSuperAdminRightsService.java",
                                    "line": 65,
                                    "column": 74,
                                    "source": "\t\t\tLOG.info(\"User:{} was already a super administrator, so just ignored\",user.getName());",
                                    "relevantPart": "user",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/user/User.java",
                                       "line": 110,
                                       "column": 10,
                                       "source": "\t\treturn name;",
                                       "relevantPart": "name",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/user/UserGrantSuperAdminRightsService.java",
                                          "line": 65,
                                          "column": 86,
                                          "source": "\t\t\tLOG.info(\"User:{} was already a super administrator, so just ignored\",user.getName());",
                                          "relevantPart": "getName",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/user/UserGrantSuperAdminRightsService.java",
                                             "line": 65,
                                             "column": 12,
                                             "source": "\t\t\tLOG.info(\"User:{} was already a super administrator, so just ignored\",user.getName());",
                                             "relevantPart": "info"
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 177,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 159,
               "column": 69,
               "source": "    public void updateScanMapping(@PathVariable(\"mappingId\") String mappingId, @RequestBody MappingData mappingData) {",
               "relevantPart": "mappingId",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                  "line": 160,
                  "column": 52,
                  "source": "        updateScanMappingService.updateScanMapping(mappingId, mappingData);",
                  "relevantPart": "mappingId",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                     "line": 43,
                     "column": 42,
                     "source": "    public void updateScanMapping(String mappingId, MappingData mappingData) {",
                     "relevantPart": "mappingId",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                        "line": 47,
                        "column": 26,
                        "source": "        updateInDatabase(mappingId, mappingData);",
                        "relevantPart": "mappingId",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                           "line": 52,
                           "column": 42,
                           "source": "    private void updateInDatabase(String mappingId, MappingData mappingData) {",
                           "relevantPart": "mappingId",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                              "line": 64,
                              "column": 78,
                              "source": "        LOG.info(\"Updated scan mapping in database. Id:{} ws updated to:{}\", mappingId, json);",
                              "relevantPart": "mappingId",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                                 "line": 64,
                                 "column": 17,
                                 "source": "        LOG.info(\"Updated scan mapping in database. Id:{} ws updated to:{}\", mappingId, json);",
                                 "relevantPart": "info"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 178,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 159,
               "column": 105,
               "source": "    public void updateScanMapping(@PathVariable(\"mappingId\") String mappingId, @RequestBody MappingData mappingData) {",
               "relevantPart": "mappingData",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                  "line": 160,
                  "column": 63,
                  "source": "        updateScanMappingService.updateScanMapping(mappingId, mappingData);",
                  "relevantPart": "mappingData",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                     "line": 43,
                     "column": 65,
                     "source": "    public void updateScanMapping(String mappingId, MappingData mappingData) {",
                     "relevantPart": "mappingData",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                        "line": 47,
                        "column": 37,
                        "source": "        updateInDatabase(mappingId, mappingData);",
                        "relevantPart": "mappingData",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                           "line": 52,
                           "column": 65,
                           "source": "    private void updateInDatabase(String mappingId, MappingData mappingData) {",
                           "relevantPart": "mappingData",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                              "line": 60,
                              "column": 23,
                              "source": "        String json = mappingData.toJSON();",
                              "relevantPart": "mappingData",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                                 "line": 60,
                                 "column": 41,
                                 "source": "        String json = mappingData.toJSON();",
                                 "relevantPart": "toJSON",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                                    "line": 60,
                                    "column": 16,
                                    "source": "        String json = mappingData.toJSON();",
                                    "relevantPart": "json",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                                       "line": 64,
                                       "column": 89,
                                       "source": "        LOG.info(\"Updated scan mapping in database. Id:{} ws updated to:{}\", mappingId, json);",
                                       "relevantPart": "json",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/scan/config/UpdateScanMappingService.java",
                                          "line": 64,
                                          "column": 17,
                                          "source": "        LOG.info(\"Updated scan mapping in database. Id:{} ws updated to:{}\", mappingId, json);",
                                          "relevantPart": "info"
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 179,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 175,
               "column": 88,
               "source": "    public String getIdForNameByProvider(@PathVariable(\"namePatternProviderId\") String namePatternProviderId, @PathVariable(\"name\") String name) {",
               "relevantPart": "namePatternProviderId",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                  "line": 176,
                  "column": 85,
                  "source": "        NamePatternIdprovider provider = scanConfigService.getNamePatternIdProvider(namePatternProviderId);",
                  "relevantPart": "namePatternProviderId",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/config/ScanConfigService.java",
                     "line": 59,
                     "column": 66,
                     "source": "    public NamePatternIdprovider getNamePatternIdProvider(String namePatternMappingId) {",
                     "relevantPart": "namePatternMappingId",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/config/ScanConfigService.java",
                        "line": 61,
                        "column": 60,
                        "source": "            NamePatternIdprovider provider = providers.get(namePatternMappingId);",
                        "relevantPart": "namePatternMappingId",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/config/ScanConfigService.java",
                           "line": 61,
                           "column": 59,
                           "source": "            NamePatternIdprovider provider = providers.get(namePatternMappingId);",
                           "relevantPart": "get",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/config/ScanConfigService.java",
                              "line": 61,
                              "column": 35,
                              "source": "            NamePatternIdprovider provider = providers.get(namePatternMappingId);",
                              "relevantPart": "provider",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/scan/config/ScanConfigService.java",
                                 "line": 63,
                                 "column": 24,
                                 "source": "                return provider;",
                                 "relevantPart": "provider",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                                    "line": 176,
                                    "column": 84,
                                    "source": "        NamePatternIdprovider provider = scanConfigService.getNamePatternIdProvider(namePatternProviderId);",
                                    "relevantPart": "getNamePatternIdProvider",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                                       "line": 176,
                                       "column": 31,
                                       "source": "        NamePatternIdprovider provider = scanConfigService.getNamePatternIdProvider(namePatternProviderId);",
                                       "relevantPart": "provider",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                                          "line": 180,
                                          "column": 42,
                                          "source": "        String id = provider.getIdForName(name);",
                                          "relevantPart": "getIdForName",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/scan/config/NamePatternIdprovider.java",
                                             "line": 45,
                                             "column": 59,
                                             "source": "\t\tLOG.debug(\"'{}' returns id:{} for name:{}\",getProviderId(),id,name);",
                                             "relevantPart": "getProviderId",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/scan/config/NamePatternIdprovider.java",
                                                "line": 45,
                                                "column": 59,
                                                "source": "\t\tLOG.debug(\"'{}' returns id:{} for name:{}\",getProviderId(),id,name);",
                                                "relevantPart": "getProviderId",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/scan/config/NamePatternIdprovider.java",
                                                   "line": 45,
                                                   "column": 3,
                                                   "source": "\t\tLOG.debug(\"'{}' returns id:{} for name:{}\",getProviderId(),id,name);",
                                                   "relevantPart": "LOG",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/scan/config/NamePatternIdprovider.java",
                                                      "line": 45,
                                                      "column": 12,
                                                      "source": "\t\tLOG.debug(\"'{}' returns id:{} for name:{}\",getProviderId(),id,name);",
                                                      "relevantPart": "debug"
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 180,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
               "line": 175,
               "column": 140,
               "source": "    public String getIdForNameByProvider(@PathVariable(\"namePatternProviderId\") String namePatternProviderId, @PathVariable(\"name\") String name) {",
               "relevantPart": "name",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/IntegrationTestScanRestController.java",
                  "line": 180,
                  "column": 43,
                  "source": "        String id = provider.getIdForName(name);",
                  "relevantPart": "name",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/config/NamePatternIdprovider.java",
                     "line": 37,
                     "column": 36,
                     "source": "\tpublic String getIdForName(String name) {",
                     "relevantPart": "name",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/config/NamePatternIdprovider.java",
                        "line": 45,
                        "column": 65,
                        "source": "\t\tLOG.debug(\"'{}' returns id:{} for name:{}\",getProviderId(),id,name);",
                        "relevantPart": "name",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/config/NamePatternIdprovider.java",
                           "line": 45,
                           "column": 12,
                           "source": "\t\tLOG.debug(\"'{}' returns id:{} for name:{}\",getProviderId(),id,name);",
                           "relevantPart": "debug"
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 181,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
               "line": 50,
               "column": 40,
               "source": "\t\t\t@PathVariable(\"sechubJobUUID\") UUID sechubJobUUID, HttpServletResponse response",
               "relevantPart": "sechubJobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
                  "line": 56,
                  "column": 86,
                  "source": "\t    response.setHeader(\"Content-Disposition\", \"attachment; filename=full_scandata_\"+sechubJobUUID.toString()+\".zip\");",
                  "relevantPart": "sechubJobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
                     "line": 58,
                     "column": 70,
                     "source": "\t    FullScanData fullScanData = fullScanDataService.getFullScanData(sechubJobUUID);",
                     "relevantPart": "sechubJobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/admin/FullScanDataService.java",
                        "line": 39,
                        "column": 43,
                        "source": "\tpublic FullScanData getFullScanData(UUID sechubJobUUID) {",
                        "relevantPart": "sechubJobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/admin/FullScanDataService.java",
                           "line": 47,
                           "column": 69,
                           "source": "\t\tList<ProjectScanLog> logs = projectScanLogService.fetchLogsForJob(sechubJobUUID);",
                           "relevantPart": "sechubJobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/log/ProjectScanLogService.java",
                              "line": 76,
                              "column": 51,
                              "source": "\tpublic List<ProjectScanLog> fetchLogsForJob(UUID sechubJobUUID) {",
                              "relevantPart": "sechubJobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/scan/log/ProjectScanLogService.java",
                                 "line": 78,
                                 "column": 21,
                                 "source": "\t\tlog.sechubJobUUID=sechubJobUUID;",
                                 "relevantPart": "sechubJobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/scan/log/ProjectScanLogService.java",
                                    "line": 78,
                                    "column": 6,
                                    "source": "\t\tlog.sechubJobUUID=sechubJobUUID;",
                                    "relevantPart": "sechubJobUUID"
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 182,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
               "line": 50,
               "column": 40,
               "source": "\t\t\t@PathVariable(\"sechubJobUUID\") UUID sechubJobUUID, HttpServletResponse response",
               "relevantPart": "sechubJobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
                  "line": 56,
                  "column": 86,
                  "source": "\t    response.setHeader(\"Content-Disposition\", \"attachment; filename=full_scandata_\"+sechubJobUUID.toString()+\".zip\");",
                  "relevantPart": "sechubJobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/admin/FullScanDataRestController.java",
                     "line": 58,
                     "column": 70,
                     "source": "\t    FullScanData fullScanData = fullScanDataService.getFullScanData(sechubJobUUID);",
                     "relevantPart": "sechubJobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/admin/FullScanDataService.java",
                        "line": 39,
                        "column": 43,
                        "source": "\tpublic FullScanData getFullScanData(UUID sechubJobUUID) {",
                        "relevantPart": "sechubJobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/admin/FullScanDataService.java",
                           "line": 42,
                           "column": 51,
                           "source": "\t\tLOG.debug(\"Start getting full scan data for {}\",sechubJobUUID);",
                           "relevantPart": "sechubJobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/admin/FullScanDataService.java",
                              "line": 42,
                              "column": 12,
                              "source": "\t\tLOG.debug(\"Start getting full scan data for {}\",sechubJobUUID);",
                              "relevantPart": "debug"
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 183,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
               "line": 52,
               "column": 34,
               "source": "\t\t\t@PathVariable(\"jobUUID\") UUID jobUUID",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                  "line": 55,
                  "column": 43,
                  "source": "\t\treturn fetchScanReportResult(projectId, jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                     "line": 74,
                     "column": 72,
                     "source": "\tprivate ScanReportResult fetchScanReportResult(String projectId, UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                        "line": 75,
                        "column": 63,
                        "source": "\t\treturn downloadReportService.getScanReportResult(projectId, jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                           "line": 42,
                           "column": 69,
                           "source": "\tpublic ScanReportResult getScanReportResult(String projectId, UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                              "line": 50,
                              "column": 60,
                              "source": "\t\tScanReport report = reportRepository.findBySecHubJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                                 "line": 50,
                                 "column": 59,
                                 "source": "\t\tScanReport report = reportRepository.findBySecHubJobUUID(jobUUID);",
                                 "relevantPart": "findBySecHubJobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                                    "line": 50,
                                    "column": 14,
                                    "source": "\t\tScanReport report = reportRepository.findBySecHubJobUUID(jobUUID);",
                                    "relevantPart": "report",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                                       "line": 57,
                                       "column": 31,
                                       "source": "\t\treturn new ScanReportResult(report);",
                                       "relevantPart": "report",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                          "line": 65,
                                          "column": 37,
                                          "source": "\tpublic ScanReportResult(ScanReport report) {",
                                          "relevantPart": "report",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                             "line": 67,
                                             "column": 13,
                                             "source": "\t\tjobUUID = report.getSecHubJobUUID();",
                                             "relevantPart": "report",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                                "line": 68,
                                                "column": 18,
                                                "source": "\t\ttrafficLight = report.getTrafficLightAsString();",
                                                "relevantPart": "report",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                                   "line": 70,
                                                   "column": 41,
                                                   "source": "\t\t\tresult = SecHubResult.fromJSONString(report.getResult());",
                                                   "relevantPart": "report",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                                      "line": 76,
                                                      "column": 117,
                                                      "source": "\t\t\tLOG.error(\"{} FATAL PROBLEM! Failed to create sechub result for origin:\\n{}\",UUIDTraceLogID.traceLogID(jobUUID), report.getResult());",
                                                      "relevantPart": "report",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/scan/report/ScanReport.java",
                                                         "line": 92,
                                                         "column": 10,
                                                         "source": "\t\treturn result;",
                                                         "relevantPart": "result",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                                            "line": 76,
                                                            "column": 133,
                                                            "source": "\t\t\tLOG.error(\"{} FATAL PROBLEM! Failed to create sechub result for origin:\\n{}\",UUIDTraceLogID.traceLogID(jobUUID), report.getResult());",
                                                            "relevantPart": "getResult",
                                                            "calls": {
                                                               "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                                               "line": 76,
                                                               "column": 13,
                                                               "source": "\t\t\tLOG.error(\"{} FATAL PROBLEM! Failed to create sechub result for origin:\\n{}\",UUIDTraceLogID.traceLogID(jobUUID), report.getResult());",
                                                               "relevantPart": "error"
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 184,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
               "line": 65,
               "column": 34,
               "source": "\t\t\t@PathVariable(\"jobUUID\") UUID jobUUID",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                  "line": 68,
                  "column": 66,
                  "source": "\t\tScanReportResult scanResult = fetchScanReportResult(projectId, jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                     "line": 74,
                     "column": 72,
                     "source": "\tprivate ScanReportResult fetchScanReportResult(String projectId, UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/report/ScanReportRestController.java",
                        "line": 75,
                        "column": 63,
                        "source": "\t\treturn downloadReportService.getScanReportResult(projectId, jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                           "line": 42,
                           "column": 69,
                           "source": "\tpublic ScanReportResult getScanReportResult(String projectId, UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                              "line": 50,
                              "column": 60,
                              "source": "\t\tScanReport report = reportRepository.findBySecHubJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                                 "line": 50,
                                 "column": 59,
                                 "source": "\t\tScanReport report = reportRepository.findBySecHubJobUUID(jobUUID);",
                                 "relevantPart": "findBySecHubJobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                                    "line": 50,
                                    "column": 14,
                                    "source": "\t\tScanReport report = reportRepository.findBySecHubJobUUID(jobUUID);",
                                    "relevantPart": "report",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/scan/report/DownloadScanReportService.java",
                                       "line": 57,
                                       "column": 31,
                                       "source": "\t\treturn new ScanReportResult(report);",
                                       "relevantPart": "report",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                          "line": 65,
                                          "column": 37,
                                          "source": "\tpublic ScanReportResult(ScanReport report) {",
                                          "relevantPart": "report",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                             "line": 67,
                                             "column": 13,
                                             "source": "\t\tjobUUID = report.getSecHubJobUUID();",
                                             "relevantPart": "report",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                                "line": 68,
                                                "column": 18,
                                                "source": "\t\ttrafficLight = report.getTrafficLightAsString();",
                                                "relevantPart": "report",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                                   "line": 70,
                                                   "column": 41,
                                                   "source": "\t\t\tresult = SecHubResult.fromJSONString(report.getResult());",
                                                   "relevantPart": "report",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                                      "line": 76,
                                                      "column": 117,
                                                      "source": "\t\t\tLOG.error(\"{} FATAL PROBLEM! Failed to create sechub result for origin:\\n{}\",UUIDTraceLogID.traceLogID(jobUUID), report.getResult());",
                                                      "relevantPart": "report",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/scan/report/ScanReport.java",
                                                         "line": 92,
                                                         "column": 10,
                                                         "source": "\t\treturn result;",
                                                         "relevantPart": "result",
                                                         "calls": {
                                                            "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                                            "line": 76,
                                                            "column": 133,
                                                            "source": "\t\t\tLOG.error(\"{} FATAL PROBLEM! Failed to create sechub result for origin:\\n{}\",UUIDTraceLogID.traceLogID(jobUUID), report.getResult());",
                                                            "relevantPart": "getResult",
                                                            "calls": {
                                                               "location": "com/daimler/sechub/domain/scan/report/ScanReportResult.java",
                                                               "line": 76,
                                                               "column": 13,
                                                               "source": "\t\t\tLOG.error(\"{} FATAL PROBLEM! Failed to create sechub result for origin:\\n{}\",UUIDTraceLogID.traceLogID(jobUUID), report.getResult());",
                                                               "relevantPart": "error"
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 185,
            "name": "Log Forging",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerRestController.java",
               "line": 97,
               "column": 35,
               "source": "\t\t\t\t@PathVariable(\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/schedule/SchedulerRestController.java",
                  "line": 98,
                  "column": 42,
                  "source": "\t\tapproveJobService.approveJob(projectId,jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/schedule/SchedulerApproveJobService.java",
                     "line": 33,
                     "column": 48,
                     "source": "\tpublic void approveJob(String projectId, UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/schedule/SchedulerApproveJobService.java",
                        "line": 47,
                        "column": 35,
                        "source": "\t\tLOG.info(\"job {} now approved\", jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/schedule/SchedulerApproveJobService.java",
                           "line": 47,
                           "column": 11,
                           "source": "\t\tLOG.info(\"job {} now approved\", jobUUID);",
                           "relevantPart": "info"
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 117
         },
         {
            "id": 186,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/support/MockSupport.java",
               "line": 44,
               "column": 18,
               "source": "\t\tif (file.exists()) {",
               "relevantPart": "exists"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 187,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
               "line": 43,
               "column": 27,
               "source": "        if (!parent.exists()) {",
               "relevantPart": "exists"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 188,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
               "line": 45,
               "column": 31,
               "source": "            if (!parent.exists()) {",
               "relevantPart": "exists"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 189,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
               "line": 55,
               "column": 24,
               "source": "        if (file.exists()) {",
               "relevantPart": "exists"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 190,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/storage/filesystem/SharedVolumeJobStorage.java",
               "line": 94,
               "column": 49,
               "source": "\t\treturn getPathToFile(fileName).toFile().exists();",
               "relevantPart": "exists"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 191,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 21,
               "column": 36,
               "source": "\t\tdeleteProjectToUser.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 192,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 25,
               "column": 35,
               "source": "\t\tdeleteProjectToURI.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 193,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 29,
               "column": 30,
               "source": "\t\tdeleteProject.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 194,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserRepositoryImpl.java",
               "line": 25,
               "column": 60,
               "source": "\t\tObject result = countUserIsOwnerOfProject.getSingleResult();",
               "relevantPart": "getSingleResult"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 195,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserRepositoryImpl.java",
               "line": 33,
               "column": 36,
               "source": "\t\tdeleteProjectToUser.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 196,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserRepositoryImpl.java",
               "line": 37,
               "column": 27,
               "source": "\t\tdeleteUser.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 197,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/log/ProjectScanLogRepositoryImpl.java",
               "line": 41,
               "column": 29,
               "source": "\t\treturn query.getResultList();",
               "relevantPart": "getResultList"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 198,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/product/ProductResultRepositoryImpl.java",
               "line": 40,
               "column": 29,
               "source": "\t\treturn query.getResultList();",
               "relevantPart": "getResultList"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 199,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobInformationListService.java",
               "line": 22,
               "column": 39,
               "source": "\t\treturn repository.findAllRunningJobs();",
               "relevantPart": "findAllRunningJobs"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 200,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobInformationDeleteService.java",
               "line": 33,
               "column": 45,
               "source": "\t\trepository.deleteJobInformationWithJobUUID(jobUUID);",
               "relevantPart": "deleteJobInformationWithJobUUID"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 201,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/access/ScanRevokeUserAccessAtAllService.java",
               "line": 32,
               "column": 37,
               "source": "\t\trepository.deleteAcessForUserAtAll(userId);",
               "relevantPart": "deleteAcessForUserAtAll"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 202,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/access/ScanDeleteAnyAccessToProjectAtAllService.java",
               "line": 36,
               "column": 49,
               "source": "\t\tscanAccessRepository.deleteAnyAccessForProject(projectId);",
               "relevantPart": "deleteAnyAccessForProject"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 203,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ProjectDataDeleteService.java",
               "line": 56,
               "column": 47,
               "source": "\t\tscanLogRepository.deleteAllLogDataForProject(projectId);",
               "relevantPart": "deleteAllLogDataForProject"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 204,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ProjectDataDeleteService.java",
               "line": 54,
               "column": 53,
               "source": "\t\tproductResultRepository.deleteAllResultsForProject(projectId);",
               "relevantPart": "deleteAllResultsForProject"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 205,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ProjectDataDeleteService.java",
               "line": 57,
               "column": 64,
               "source": "\t\tscanProjectConfigRepository.deleteAllConfigurationsForProject(projectId);",
               "relevantPart": "deleteAllConfigurationsForProject"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 206,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ProjectDataDeleteService.java",
               "line": 55,
               "column": 50,
               "source": "\t\tscanReportRepository.deleteAllReportsForProject(projectId);",
               "relevantPart": "deleteAllReportsForProject"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 207,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/access/ScheduleRevokeUserAccessAtAllService.java",
               "line": 32,
               "column": 37,
               "source": "\t\trepository.deleteAcessForUserAtAll(userId);",
               "relevantPart": "deleteAcessForUserAtAll"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 208,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/access/ScheduleDeleteAllProjectAcessService.java",
               "line": 32,
               "column": 39,
               "source": "\t\trepository.deleteAnyAccessForProject(projectId);",
               "relevantPart": "deleteAnyAccessForProject"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 209,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/IntegrationTestSchedulerService.java",
               "line": 26,
               "column": 37,
               "source": "        repository.deleteWaitingJobs();",
               "relevantPart": "deleteWaitingJobs"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 210,
            "name": "Improper Exception Handling",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/whitelist/ProjectWhiteListUpdateService.java",
               "line": 34,
               "column": 40,
               "source": "\t\trepository.deleteAllEntriesForProject(projectId);",
               "relevantPart": "deleteAllEntriesForProject"
            },
            "type": "codeScan",
            "cweId": 248
         },
         {
            "id": 211,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/checkmarx/support/CheckmarxScanSupport.java",
               "line": 70,
               "column": 71,
               "source": "            if (context.isIncrementalScan() && failureText.toLowerCase().contains(\"full scan\")) {",
               "relevantPart": "toLowerCase",
               "calls": {
                  "location": "com/daimler/sechub/adapter/checkmarx/support/CheckmarxScanSupport.java",
                  "line": 70,
                  "column": 82,
                  "source": "            if (context.isIncrementalScan() && failureText.toLowerCase().contains(\"full scan\")) {",
                  "relevantPart": "contains"
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 212,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/TargetType.java",
               "line": 62,
               "column": 28,
               "source": "\t\treturn name().toLowerCase()+\"://\";",
               "relevantPart": "toLowerCase",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/Target.java",
                  "line": 106,
                  "column": 56,
                  "source": "\t\treturn identifier.startsWith(type.getIdentifierPrefix());",
                  "relevantPart": "getIdentifierPrefix",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/Target.java",
                     "line": 106,
                     "column": 31,
                     "source": "\t\treturn identifier.startsWith(type.getIdentifierPrefix());",
                     "relevantPart": "startsWith"
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 213,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoSourceRelevantPartResolver.java",
               "line": 16,
               "column": 34,
               "source": "        return result.toLowerCase();",
               "relevantPart": "toLowerCase",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoFalsePositiveCodeScanStrategy.java",
                  "line": 144,
                  "column": 51,
                  "source": "        return relevantPartResolver.toRelevantPart(serecoFirstElement.getSource());",
                  "relevantPart": "toRelevantPart",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoFalsePositiveCodeScanStrategy.java",
                     "line": 134,
                     "column": 53,
                     "source": "                relevant4 = createRelevantReplacment(serecoLastElement);",
                     "relevantPart": "createRelevantReplacment",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoFalsePositiveCodeScanStrategy.java",
                        "line": 134,
                        "column": 17,
                        "source": "                relevant4 = createRelevantReplacment(serecoLastElement);",
                        "relevantPart": "relevant4",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoFalsePositiveCodeScanStrategy.java",
                           "line": 137,
                           "column": 31,
                           "source": "        if (!relevant3.equals(relevant4)) {",
                           "relevantPart": "relevant4",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoFalsePositiveCodeScanStrategy.java",
                              "line": 137,
                              "column": 30,
                              "source": "        if (!relevant3.equals(relevant4)) {",
                              "relevantPart": "equals"
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 214,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoSourceRelevantPartResolver.java",
               "line": 16,
               "column": 34,
               "source": "        return result.toLowerCase();",
               "relevantPart": "toLowerCase",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoFalsePositiveCodeScanStrategy.java",
                  "line": 144,
                  "column": 51,
                  "source": "        return relevantPartResolver.toRelevantPart(serecoFirstElement.getSource());",
                  "relevantPart": "toRelevantPart",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoFalsePositiveCodeScanStrategy.java",
                     "line": 118,
                     "column": 49,
                     "source": "            relevant2 = createRelevantReplacment(serecoFirstElement);",
                     "relevantPart": "createRelevantReplacment",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoFalsePositiveCodeScanStrategy.java",
                        "line": 118,
                        "column": 13,
                        "source": "            relevant2 = createRelevantReplacment(serecoFirstElement);",
                        "relevantPart": "relevant2",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoFalsePositiveCodeScanStrategy.java",
                           "line": 120,
                           "column": 31,
                           "source": "        if (!relevant1.equals(relevant2)) {",
                           "relevantPart": "relevant2",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/product/sereco/SerecoFalsePositiveCodeScanStrategy.java",
                              "line": 120,
                              "column": 30,
                              "source": "        if (!relevant1.equals(relevant2)) {",
                              "relevantPart": "equals"
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 215,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
               "line": 40,
               "column": 36,
               "source": "\t\tString target = given.toLowerCase();",
               "relevantPart": "toLowerCase",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                  "line": 40,
                  "column": 10,
                  "source": "\t\tString target = given.toLowerCase();",
                  "relevantPart": "target",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                     "line": 41,
                     "column": 40,
                     "source": "\t\tString[] targetPart = splitByDivider(target);",
                     "relevantPart": "target",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                        "line": 55,
                        "column": 41,
                        "source": "\tprivate String[] splitByDivider(String pattern) {",
                        "relevantPart": "pattern",
                        "calls": {
                           "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                           "line": 56,
                           "column": 20,
                           "source": "\t\tString[] parts = pattern.split(Pattern.quote(\"\" + divider));",
                           "relevantPart": "pattern",
                           "calls": {
                              "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                              "line": 56,
                              "column": 33,
                              "source": "\t\tString[] parts = pattern.split(Pattern.quote(\"\" + divider));",
                              "relevantPart": "split",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                                 "line": 56,
                                 "column": 12,
                                 "source": "\t\tString[] parts = pattern.split(Pattern.quote(\"\" + divider));",
                                 "relevantPart": "parts",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                                    "line": 61,
                                    "column": 24,
                                    "source": "\t\t\tlowerCaseParts[i++]=caseVariant.toLowerCase();",
                                    "relevantPart": "caseVariant",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                                       "line": 61,
                                       "column": 47,
                                       "source": "\t\t\tlowerCaseParts[i++]=caseVariant.toLowerCase();",
                                       "relevantPart": "toLowerCase",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                                          "line": 61,
                                          "column": 4,
                                          "source": "\t\t\tlowerCaseParts[i++]=caseVariant.toLowerCase();",
                                          "relevantPart": "lowerCaseParts",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                                             "line": 64,
                                             "column": 10,
                                             "source": "\t\treturn lowerCaseParts;",
                                             "relevantPart": "lowerCaseParts",
                                             "calls": {
                                                "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                                                "line": 41,
                                                "column": 39,
                                                "source": "\t\tString[] targetPart = splitByDivider(target);",
                                                "relevantPart": "splitByDivider",
                                                "calls": {
                                                   "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                                                   "line": 41,
                                                   "column": 12,
                                                   "source": "\t\tString[] targetPart = splitByDivider(target);",
                                                   "relevantPart": "targetPart",
                                                   "calls": {
                                                      "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                                                      "line": 50,
                                                      "column": 69,
                                                      "source": "\t\t\taccepted = patternParts[i].equals(\"*\") || patternParts[i].equals(targetPart[i]);",
                                                      "relevantPart": "targetPart",
                                                      "calls": {
                                                         "location": "com/daimler/sechub/domain/scan/resolve/DividedStringPatternMatcher.java",
                                                         "line": 50,
                                                         "column": 68,
                                                         "source": "\t\t\taccepted = patternParts[i].equals(\"*\") || patternParts[i].equals(targetPart[i]);",
                                                         "relevantPart": "equals"
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 216,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/resolve/IntranetEndsWithURITargetResolveStrategy.java",
               "line": 45,
               "column": 47,
               "source": "\t\tString hostNameLowercased = host.toLowerCase();",
               "relevantPart": "toLowerCase",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/resolve/IntranetEndsWithURITargetResolveStrategy.java",
                  "line": 45,
                  "column": 10,
                  "source": "\t\tString hostNameLowercased = host.toLowerCase();",
                  "relevantPart": "hostNameLowercased",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/resolve/IntranetEndsWithURITargetResolveStrategy.java",
                     "line": 47,
                     "column": 8,
                     "source": "\t\t\tif (hostNameLowercased.endsWith(endsWith)) {",
                     "relevantPart": "hostNameLowercased",
                     "calls": {
                        "location": "com/daimler/sechub/domain/scan/resolve/IntranetEndsWithURITargetResolveStrategy.java",
                        "line": 47,
                        "column": 35,
                        "source": "\t\t\tif (hostNameLowercased.endsWith(endsWith)) {",
                        "relevantPart": "endsWith"
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 217,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
               "line": 35,
               "column": 38,
               "source": "\t\tString key= keyValue[0].toUpperCase();",
               "relevantPart": "toUpperCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                  "line": 35,
                  "column": 10,
                  "source": "\t\tString key= keyValue[0].toUpperCase();",
                  "relevantPart": "key",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                     "line": 37,
                     "column": 20,
                     "source": "\t\tif (key==null || key.isEmpty()) {",
                     "relevantPart": "key",
                     "calls": {
                        "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                        "line": 46,
                        "column": 14,
                        "source": "\t\thandleNIST(key,value,classification);",
                        "relevantPart": "key",
                        "calls": {
                           "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                           "line": 64,
                           "column": 33,
                           "source": "\tprivate void handleNIST(String key, String value, SerecoClassification classification) {",
                           "relevantPart": "key",
                           "calls": {
                              "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                              "line": 66,
                              "column": 9,
                              "source": "\t\tif (! key.contains(\"NIST\")) {",
                              "relevantPart": "key",
                              "calls": {
                                 "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                 "line": 66,
                                 "column": 21,
                                 "source": "\t\tif (! key.contains(\"NIST\")) {",
                                 "relevantPart": "contains"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 218,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
               "line": 35,
               "column": 38,
               "source": "\t\tString key= keyValue[0].toUpperCase();",
               "relevantPart": "toUpperCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                  "line": 35,
                  "column": 10,
                  "source": "\t\tString key= keyValue[0].toUpperCase();",
                  "relevantPart": "key",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                     "line": 37,
                     "column": 20,
                     "source": "\t\tif (key==null || key.isEmpty()) {",
                     "relevantPart": "key",
                     "calls": {
                        "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                        "line": 45,
                        "column": 15,
                        "source": "\t\thandleFISMA(key,value,classification);",
                        "relevantPart": "key",
                        "calls": {
                           "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                           "line": 49,
                           "column": 34,
                           "source": "\tprivate void handleFISMA(String key, String value, SerecoClassification classification) {",
                           "relevantPart": "key",
                           "calls": {
                              "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                              "line": 51,
                              "column": 9,
                              "source": "\t\tif (! key.contains(\"FISMA\")) {",
                              "relevantPart": "key",
                              "calls": {
                                 "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                 "line": 51,
                                 "column": 21,
                                 "source": "\t\tif (! key.contains(\"FISMA\")) {",
                                 "relevantPart": "contains"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 219,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
               "line": 35,
               "column": 38,
               "source": "\t\tString key= keyValue[0].toUpperCase();",
               "relevantPart": "toUpperCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                  "line": 35,
                  "column": 10,
                  "source": "\t\tString key= keyValue[0].toUpperCase();",
                  "relevantPart": "key",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                     "line": 37,
                     "column": 20,
                     "source": "\t\tif (key==null || key.isEmpty()) {",
                     "relevantPart": "key",
                     "calls": {
                        "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                        "line": 44,
                        "column": 13,
                        "source": "\t\thandlePCI(key,value, classification);\t\t",
                        "relevantPart": "key",
                        "calls": {
                           "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                           "line": 107,
                           "column": 32,
                           "source": "\tprivate void handlePCI(String key, String value, SerecoClassification classification) {",
                           "relevantPart": "key",
                           "calls": {
                              "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                              "line": 109,
                              "column": 9,
                              "source": "\t\tif (! key.contains(\"PCI\")) {",
                              "relevantPart": "key",
                              "calls": {
                                 "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                 "line": 113,
                                 "column": 15,
                                 "source": "\t\thandlePCI32(key, value, classification);",
                                 "relevantPart": "key",
                                 "calls": {
                                    "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                    "line": 140,
                                    "column": 34,
                                    "source": "\tprivate void handlePCI32(String key, String value, SerecoClassification classification) {",
                                    "relevantPart": "key",
                                    "calls": {
                                       "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                       "line": 141,
                                       "column": 7,
                                       "source": "\t\tif (key.indexOf(\"V3.2\") == -1) {",
                                       "relevantPart": "key",
                                       "calls": {
                                          "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                          "line": 141,
                                          "column": 18,
                                          "source": "\t\tif (key.indexOf(\"V3.2\") == -1) {",
                                          "relevantPart": "indexOf"
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 220,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
               "line": 35,
               "column": 38,
               "source": "\t\tString key= keyValue[0].toUpperCase();",
               "relevantPart": "toUpperCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                  "line": 35,
                  "column": 10,
                  "source": "\t\tString key= keyValue[0].toUpperCase();",
                  "relevantPart": "key",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                     "line": 37,
                     "column": 20,
                     "source": "\t\tif (key==null || key.isEmpty()) {",
                     "relevantPart": "key",
                     "calls": {
                        "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                        "line": 44,
                        "column": 13,
                        "source": "\t\thandlePCI(key,value, classification);\t\t",
                        "relevantPart": "key",
                        "calls": {
                           "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                           "line": 107,
                           "column": 32,
                           "source": "\tprivate void handlePCI(String key, String value, SerecoClassification classification) {",
                           "relevantPart": "key",
                           "calls": {
                              "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                              "line": 109,
                              "column": 9,
                              "source": "\t\tif (! key.contains(\"PCI\")) {",
                              "relevantPart": "key",
                              "calls": {
                                 "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                 "line": 112,
                                 "column": 15,
                                 "source": "\t\thandlePCI31(key, value, classification);",
                                 "relevantPart": "key",
                                 "calls": {
                                    "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                    "line": 133,
                                    "column": 34,
                                    "source": "\tprivate void handlePCI31(String key, String value, SerecoClassification classification) {",
                                    "relevantPart": "key",
                                    "calls": {
                                       "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                       "line": 134,
                                       "column": 7,
                                       "source": "\t\tif (key.indexOf(\"V3.1\") == -1) {",
                                       "relevantPart": "key",
                                       "calls": {
                                          "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                          "line": 134,
                                          "column": 18,
                                          "source": "\t\tif (key.indexOf(\"V3.1\") == -1) {",
                                          "relevantPart": "indexOf"
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 221,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
               "line": 35,
               "column": 38,
               "source": "\t\tString key= keyValue[0].toUpperCase();",
               "relevantPart": "toUpperCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                  "line": 35,
                  "column": 10,
                  "source": "\t\tString key= keyValue[0].toUpperCase();",
                  "relevantPart": "key",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                     "line": 37,
                     "column": 20,
                     "source": "\t\tif (key==null || key.isEmpty()) {",
                     "relevantPart": "key",
                     "calls": {
                        "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                        "line": 44,
                        "column": 13,
                        "source": "\t\thandlePCI(key,value, classification);\t\t",
                        "relevantPart": "key",
                        "calls": {
                           "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                           "line": 107,
                           "column": 32,
                           "source": "\tprivate void handlePCI(String key, String value, SerecoClassification classification) {",
                           "relevantPart": "key",
                           "calls": {
                              "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                              "line": 109,
                              "column": 9,
                              "source": "\t\tif (! key.contains(\"PCI\")) {",
                              "relevantPart": "key",
                              "calls": {
                                 "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                 "line": 109,
                                 "column": 21,
                                 "source": "\t\tif (! key.contains(\"PCI\")) {",
                                 "relevantPart": "contains"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 222,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
               "line": 35,
               "column": 38,
               "source": "\t\tString key= keyValue[0].toUpperCase();",
               "relevantPart": "toUpperCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                  "line": 35,
                  "column": 10,
                  "source": "\t\tString key= keyValue[0].toUpperCase();",
                  "relevantPart": "key",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                     "line": 37,
                     "column": 20,
                     "source": "\t\tif (key==null || key.isEmpty()) {",
                     "relevantPart": "key",
                     "calls": {
                        "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                        "line": 43,
                        "column": 15,
                        "source": "\t\thandleOWASP(key,value,classification);",
                        "relevantPart": "key",
                        "calls": {
                           "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                           "line": 85,
                           "column": 34,
                           "source": "\tprivate void handleOWASP(String key, String value, SerecoClassification classification) {",
                           "relevantPart": "key",
                           "calls": {
                              "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                              "line": 87,
                              "column": 9,
                              "source": "\t\tif (! key.contains(\"OWASP\")) {",
                              "relevantPart": "key",
                              "calls": {
                                 "location": "com/daimler/sechub/sereco/importer/CheckmarxCategoriesToClassificationConverter.java",
                                 "line": 87,
                                 "column": 21,
                                 "source": "\t\tif (! key.contains(\"OWASP\")) {",
                                 "relevantPart": "contains"
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 223,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/ImportSupport.java",
               "line": 125,
               "column": 51,
               "source": "\t\tString lowerCased = productId.trim().toLowerCase();",
               "relevantPart": "toLowerCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/importer/ImportSupport.java",
                  "line": 125,
                  "column": 10,
                  "source": "\t\tString lowerCased = productId.trim().toLowerCase();",
                  "relevantPart": "lowerCased",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/importer/ImportSupport.java",
                     "line": 126,
                     "column": 10,
                     "source": "\t\treturn lowerCased.equals(this.productId);",
                     "relevantPart": "lowerCased",
                     "calls": {
                        "location": "com/daimler/sechub/sereco/importer/ImportSupport.java",
                        "line": 126,
                        "column": 27,
                        "source": "\t\treturn lowerCased.equals(this.productId);",
                        "relevantPart": "equals"
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 224,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/ImportSupport.java",
               "line": 171,
               "column": 35,
               "source": "\t\treturn sb.toString().toLowerCase();",
               "relevantPart": "toLowerCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/importer/ImportSupport.java",
                  "line": 154,
                  "column": 48,
                  "source": "\t\treturn createSubStringWithoutBOMandLowercased(data, 5).startsWith(\"<?xml\");",
                  "relevantPart": "createSubStringWithoutBOMandLowercased",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/importer/ImportSupport.java",
                     "line": 154,
                     "column": 68,
                     "source": "\t\treturn createSubStringWithoutBOMandLowercased(data, 5).startsWith(\"<?xml\");",
                     "relevantPart": "startsWith"
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 225,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/ImportSupport.java",
               "line": 171,
               "column": 35,
               "source": "\t\treturn sb.toString().toLowerCase();",
               "relevantPart": "toLowerCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/importer/ImportSupport.java",
                  "line": 150,
                  "column": 48,
                  "source": "\t\treturn createSubStringWithoutBOMandLowercased(data, 1).startsWith(\"{\");",
                  "relevantPart": "createSubStringWithoutBOMandLowercased",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/importer/ImportSupport.java",
                     "line": 150,
                     "column": 68,
                     "source": "\t\treturn createSubStringWithoutBOMandLowercased(data, 1).startsWith(\"{\");",
                     "relevantPart": "startsWith"
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 226,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/NetsparkerServerityConverter.java",
               "line": 41,
               "column": 44,
               "source": "\t\t\tString upperCased = severity.toUpperCase();",
               "relevantPart": "toUpperCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/importer/NetsparkerServerityConverter.java",
                  "line": 41,
                  "column": 11,
                  "source": "\t\t\tString upperCased = severity.toUpperCase();",
                  "relevantPart": "upperCased",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/importer/NetsparkerServerityConverter.java",
                     "line": 43,
                     "column": 49,
                     "source": "\t\t\t\tif (netsparkerSeverity.name().contentEquals(upperCased)) {",
                     "relevantPart": "upperCased",
                     "calls": {
                        "location": "com/daimler/sechub/sereco/importer/NetsparkerServerityConverter.java",
                        "line": 43,
                        "column": 48,
                        "source": "\t\t\t\tif (netsparkerSeverity.name().contentEquals(upperCased)) {",
                        "relevantPart": "contentEquals"
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 227,
            "name": "Portability Flaw Locale Dependent Comparison",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sereco/metadata/SerecoSeverity.java",
               "line": 27,
               "column": 39,
               "source": "\t\tString upperCased=string.toUpperCase();",
               "relevantPart": "toUpperCase",
               "calls": {
                  "location": "com/daimler/sechub/sereco/metadata/SerecoSeverity.java",
                  "line": 27,
                  "column": 10,
                  "source": "\t\tString upperCased=string.toUpperCase();",
                  "relevantPart": "upperCased",
                  "calls": {
                     "location": "com/daimler/sechub/sereco/metadata/SerecoSeverity.java",
                     "line": 29,
                     "column": 31,
                     "source": "\t\t\tif (severity.name().equals(upperCased)) {",
                     "relevantPart": "upperCased",
                     "calls": {
                        "location": "com/daimler/sechub/sereco/metadata/SerecoSeverity.java",
                        "line": 29,
                        "column": 30,
                        "source": "\t\t\tif (severity.name().equals(upperCased)) {",
                        "relevantPart": "equals"
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 228,
            "name": "Race Condition Format Flaw",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/nessus/NessusAdapterV1.java",
               "line": 177,
               "column": 37,
               "source": "\t\tString part = MessageFormat.format(MSG_APICALL_GET_HISTORY_IDS, Long.toString(context.getNessusScanId()));",
               "relevantPart": "format"
            },
            "type": "codeScan",
            "cweId": 362
         },
         {
            "id": 229,
            "name": "Race Condition Format Flaw",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/nessus/NessusAdapterV1.java",
               "line": 182,
               "column": 37,
               "source": "\t\tString part = MessageFormat.format(MSG_APICALL_LAUNCH_SCAN, Long.toString(context.getNessusScanId()));",
               "relevantPart": "format"
            },
            "type": "codeScan",
            "cweId": 362
         },
         {
            "id": 230,
            "name": "Race Condition Format Flaw",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/nessus/NessusAdapterV1.java",
               "line": 187,
               "column": 37,
               "source": "\t\tString part = MessageFormat.format(MSG_APICALL_EXPORT_SCAN, Long.toString(context.getNessusScanId()));",
               "relevantPart": "format"
            },
            "type": "codeScan",
            "cweId": 362
         },
         {
            "id": 231,
            "name": "Race Condition Format Flaw",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/nessus/NessusAdapterV1.java",
               "line": 192,
               "column": 37,
               "source": "\t\tString part = MessageFormat.format(MSG_APICALL_EXPORT_SCAN_STATUS, Long.toString(context.getNessusScanId()),",
               "relevantPart": "format"
            },
            "type": "codeScan",
            "cweId": 362
         },
         {
            "id": 232,
            "name": "Race Condition Format Flaw",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/nessus/NessusAdapterV1.java",
               "line": 198,
               "column": 37,
               "source": "\t\tString part = MessageFormat.format(MSG_APICALL_EXPORT_SCAN_DOWNLOAD, Long.toString(context.getNessusScanId()),",
               "relevantPart": "format"
            },
            "type": "codeScan",
            "cweId": 362
         },
         {
            "id": 233,
            "name": "Race Condition Format Flaw",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/notification/user/NewAPITokenAppliedUserNotificationService.java",
               "line": 30,
               "column": 43,
               "source": "\t\temailContent.append(MessageFormat.format(\"The new api token has been applied to your user: {0}\\n\\n\",",
               "relevantPart": "format"
            },
            "type": "codeScan",
            "cweId": 362
         },
         {
            "id": 234,
            "name": "Private Array Returned From A Public Method",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/support/TrustAllSupport.java",
               "line": 111,
               "column": 31,
               "source": "\t\t\t\tprivate X509Certificate[] emptyCertificatesArray = new X509Certificate[] {};",
               "relevantPart": "emptyCertificatesArray",
               "calls": {
                  "location": "com/daimler/sechub/adapter/support/TrustAllSupport.java",
                  "line": 122,
                  "column": 13,
                  "source": "\t\t\t\t\treturn emptyCertificatesArray;",
                  "relevantPart": "emptyCertificatesArray"
               }
            },
            "type": "codeScan",
            "cweId": 495
         },
         {
            "id": 235,
            "name": "Private Array Returned From A Public Method",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/configuration/login/AutoDetectUserLoginConfiguration.java",
               "line": 11,
               "column": 17,
               "source": "\tprivate char[] user;",
               "relevantPart": "user",
               "calls": {
                  "location": "com/daimler/sechub/sharedkernel/configuration/login/AutoDetectUserLoginConfiguration.java",
                  "line": 19,
                  "column": 10,
                  "source": "\t\treturn user;",
                  "relevantPart": "user"
               }
            },
            "type": "codeScan",
            "cweId": 495
         },
         {
            "id": 236,
            "name": "Private Array Returned From A Public Method",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/configuration/login/BasicLoginConfiguration.java",
               "line": 14,
               "column": 17,
               "source": "\tprivate char[] user;",
               "relevantPart": "user",
               "calls": {
                  "location": "com/daimler/sechub/sharedkernel/configuration/login/BasicLoginConfiguration.java",
                  "line": 26,
                  "column": 10,
                  "source": "\t\treturn user;",
                  "relevantPart": "user"
               }
            },
            "type": "codeScan",
            "cweId": 495
         },
         {
            "id": 237,
            "name": "Unrestricted File Upload",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerUploadService.java",
               "line": 60,
               "column": 77,
               "source": "\tpublic void uploadSourceCode(String projectId, UUID jobUUID, MultipartFile file, String checkSum) {",
               "relevantPart": "file",
               "calls": {
                  "location": "com/daimler/sechub/domain/schedule/SchedulerUploadService.java",
                  "line": 79,
                  "column": 5,
                  "source": "\t\t\t\tfile.transferTo(tmpFile);",
                  "relevantPart": "file",
                  "calls": {
                     "location": "com/daimler/sechub/domain/schedule/SchedulerUploadService.java",
                     "line": 90,
                     "column": 38,
                     "source": "\t\t\t\tjobStorage.store(SOURCECODE_ZIP, file.getInputStream());",
                     "relevantPart": "file",
                     "calls": {
                        "location": "com/daimler/sechub/domain/schedule/SchedulerUploadService.java",
                        "line": 90,
                        "column": 57,
                        "source": "\t\t\t\tjobStorage.store(SOURCECODE_ZIP, file.getInputStream());",
                        "relevantPart": "getInputStream"
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 434
         },
         {
            "id": 238,
            "name": "Unrestricted File Upload",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerUploadService.java",
               "line": 60,
               "column": 77,
               "source": "\tpublic void uploadSourceCode(String projectId, UUID jobUUID, MultipartFile file, String checkSum) {",
               "relevantPart": "file",
               "calls": {
                  "location": "com/daimler/sechub/domain/schedule/SchedulerUploadService.java",
                  "line": 79,
                  "column": 5,
                  "source": "\t\t\t\tfile.transferTo(tmpFile);",
                  "relevantPart": "file",
                  "calls": {
                     "location": "com/daimler/sechub/domain/schedule/SchedulerUploadService.java",
                     "line": 79,
                     "column": 20,
                     "source": "\t\t\t\tfile.transferTo(tmpFile);",
                     "relevantPart": "transferTo"
                  }
               }
            },
            "type": "codeScan",
            "cweId": 434
         },
         {
            "id": 239,
            "name": "Unrestricted File Upload",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/SchedulerRestController.java",
               "line": 81,
               "column": 41,
               "source": "\t\t\t\t@RequestParam(\"file\") MultipartFile file,",
               "relevantPart": "file"
            },
            "type": "codeScan",
            "cweId": 434
         },
         {
            "id": 240,
            "name": "Heuristic Parameter Tampering",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 67,
               "column": 59,
               "source": "\tpublic void cancelJob(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 69,
                  "column": 30,
                  "source": "\t\tjobCancelService.cancelJob(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                     "line": 51,
                     "column": 29,
                     "source": "\tpublic void cancelJob(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                        "line": 56,
                        "column": 37,
                        "source": "\t\tJobMessage message = buildMessage(jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                           "line": 62,
                           "column": 39,
                           "source": "\tprivate JobMessage buildMessage(UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                              "line": 68,
                              "column": 20,
                              "source": "\t\tprobe.setJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                 "line": 126,
                                 "column": 30,
                                 "source": "\tpublic void setJobUUID(UUID jobUUID) {",
                                 "relevantPart": "jobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                    "line": 127,
                                    "column": 18,
                                    "source": "\t\tthis.jobUUID = jobUUID;",
                                    "relevantPart": "jobUUID",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                       "line": 127,
                                       "column": 7,
                                       "source": "\t\tthis.jobUUID = jobUUID;",
                                       "relevantPart": "jobUUID",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                          "line": 68,
                                          "column": 3,
                                          "source": "\t\tprobe.setJobUUID(jobUUID);",
                                          "relevantPart": "probe",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                             "line": 69,
                                             "column": 47,
                                             "source": "\t\tExample<JobInformation> example = Example.of(probe);",
                                             "relevantPart": "of"
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 472
         },
         {
            "id": 241,
            "name": "Heuristic Parameter Tampering",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 83,
               "column": 67,
               "source": "    public void restartJobHard(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 85,
                  "column": 49,
                  "source": "        jobRestartRequestService.restartJobHard(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                     "line": 68,
                     "column": 37,
                     "source": "    public void restartJobHard(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                        "line": 73,
                        "column": 43,
                        "source": "        JobMessage message = buildMessage(jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                           "line": 79,
                           "column": 42,
                           "source": "    private JobMessage buildMessage(UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                              "line": 85,
                              "column": 26,
                              "source": "        probe.setJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                 "line": 126,
                                 "column": 30,
                                 "source": "\tpublic void setJobUUID(UUID jobUUID) {",
                                 "relevantPart": "jobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                    "line": 127,
                                    "column": 18,
                                    "source": "\t\tthis.jobUUID = jobUUID;",
                                    "relevantPart": "jobUUID",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                       "line": 127,
                                       "column": 7,
                                       "source": "\t\tthis.jobUUID = jobUUID;",
                                       "relevantPart": "jobUUID",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                          "line": 85,
                                          "column": 9,
                                          "source": "        probe.setJobUUID(jobUUID);",
                                          "relevantPart": "probe",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                             "line": 86,
                                             "column": 53,
                                             "source": "        Example<JobInformation> example = Example.of(probe);",
                                             "relevantPart": "of"
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 472
         },
         {
            "id": 242,
            "name": "Heuristic Parameter Tampering",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 75,
               "column": 63,
               "source": "    public void restartJob(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 77,
                  "column": 45,
                  "source": "        jobRestartRequestService.restartJob(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                     "line": 55,
                     "column": 33,
                     "source": "    public void restartJob(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                        "line": 60,
                        "column": 43,
                        "source": "        JobMessage message = buildMessage(jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                           "line": 79,
                           "column": 42,
                           "source": "    private JobMessage buildMessage(UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                              "line": 85,
                              "column": 26,
                              "source": "        probe.setJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                 "line": 126,
                                 "column": 30,
                                 "source": "\tpublic void setJobUUID(UUID jobUUID) {",
                                 "relevantPart": "jobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                    "line": 127,
                                    "column": 18,
                                    "source": "\t\tthis.jobUUID = jobUUID;",
                                    "relevantPart": "jobUUID",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                       "line": 127,
                                       "column": 7,
                                       "source": "\t\tthis.jobUUID = jobUUID;",
                                       "relevantPart": "jobUUID",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                          "line": 85,
                                          "column": 9,
                                          "source": "        probe.setJobUUID(jobUUID);",
                                          "relevantPart": "probe",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                             "line": 86,
                                             "column": 53,
                                             "source": "        Example<JobInformation> example = Example.of(probe);",
                                             "relevantPart": "of"
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 472
         },
         {
            "id": 243,
            "name": "Heuristic SQL Injection",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 67,
               "column": 59,
               "source": "\tpublic void cancelJob(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 69,
                  "column": 30,
                  "source": "\t\tjobCancelService.cancelJob(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                     "line": 51,
                     "column": 29,
                     "source": "\tpublic void cancelJob(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                        "line": 56,
                        "column": 37,
                        "source": "\t\tJobMessage message = buildMessage(jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                           "line": 62,
                           "column": 39,
                           "source": "\tprivate JobMessage buildMessage(UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                              "line": 68,
                              "column": 20,
                              "source": "\t\tprobe.setJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                 "line": 126,
                                 "column": 30,
                                 "source": "\tpublic void setJobUUID(UUID jobUUID) {",
                                 "relevantPart": "jobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                    "line": 127,
                                    "column": 18,
                                    "source": "\t\tthis.jobUUID = jobUUID;",
                                    "relevantPart": "jobUUID",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                       "line": 127,
                                       "column": 7,
                                       "source": "\t\tthis.jobUUID = jobUUID;",
                                       "relevantPart": "jobUUID",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                          "line": 68,
                                          "column": 3,
                                          "source": "\t\tprobe.setJobUUID(jobUUID);",
                                          "relevantPart": "probe",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/job/JobCancelService.java",
                                             "line": 69,
                                             "column": 47,
                                             "source": "\t\tExample<JobInformation> example = Example.of(probe);",
                                             "relevantPart": "of"
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 89
         },
         {
            "id": 244,
            "name": "Heuristic SQL Injection",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 75,
               "column": 63,
               "source": "    public void restartJob(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 77,
                  "column": 45,
                  "source": "        jobRestartRequestService.restartJob(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                     "line": 55,
                     "column": 33,
                     "source": "    public void restartJob(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                        "line": 60,
                        "column": 43,
                        "source": "        JobMessage message = buildMessage(jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                           "line": 79,
                           "column": 42,
                           "source": "    private JobMessage buildMessage(UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                              "line": 85,
                              "column": 26,
                              "source": "        probe.setJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                 "line": 126,
                                 "column": 30,
                                 "source": "\tpublic void setJobUUID(UUID jobUUID) {",
                                 "relevantPart": "jobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                    "line": 127,
                                    "column": 18,
                                    "source": "\t\tthis.jobUUID = jobUUID;",
                                    "relevantPart": "jobUUID",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                       "line": 127,
                                       "column": 7,
                                       "source": "\t\tthis.jobUUID = jobUUID;",
                                       "relevantPart": "jobUUID",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                          "line": 85,
                                          "column": 9,
                                          "source": "        probe.setJobUUID(jobUUID);",
                                          "relevantPart": "probe",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                             "line": 86,
                                             "column": 53,
                                             "source": "        Example<JobInformation> example = Example.of(probe);",
                                             "relevantPart": "of"
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 89
         },
         {
            "id": 245,
            "name": "Heuristic SQL Injection",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
               "line": 83,
               "column": 67,
               "source": "    public void restartJobHard(@PathVariable(name=\"jobUUID\") UUID jobUUID) {",
               "relevantPart": "jobUUID",
               "calls": {
                  "location": "com/daimler/sechub/domain/administration/job/JobAdministrationRestController.java",
                  "line": 85,
                  "column": 49,
                  "source": "        jobRestartRequestService.restartJobHard(jobUUID);",
                  "relevantPart": "jobUUID",
                  "calls": {
                     "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                     "line": 68,
                     "column": 37,
                     "source": "    public void restartJobHard(UUID jobUUID) {",
                     "relevantPart": "jobUUID",
                     "calls": {
                        "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                        "line": 73,
                        "column": 43,
                        "source": "        JobMessage message = buildMessage(jobUUID);",
                        "relevantPart": "jobUUID",
                        "calls": {
                           "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                           "line": 79,
                           "column": 42,
                           "source": "    private JobMessage buildMessage(UUID jobUUID) {",
                           "relevantPart": "jobUUID",
                           "calls": {
                              "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                              "line": 85,
                              "column": 26,
                              "source": "        probe.setJobUUID(jobUUID);",
                              "relevantPart": "jobUUID",
                              "calls": {
                                 "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                 "line": 126,
                                 "column": 30,
                                 "source": "\tpublic void setJobUUID(UUID jobUUID) {",
                                 "relevantPart": "jobUUID",
                                 "calls": {
                                    "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                    "line": 127,
                                    "column": 18,
                                    "source": "\t\tthis.jobUUID = jobUUID;",
                                    "relevantPart": "jobUUID",
                                    "calls": {
                                       "location": "com/daimler/sechub/domain/administration/job/JobInformation.java",
                                       "line": 127,
                                       "column": 7,
                                       "source": "\t\tthis.jobUUID = jobUUID;",
                                       "relevantPart": "jobUUID",
                                       "calls": {
                                          "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                          "line": 85,
                                          "column": 9,
                                          "source": "        probe.setJobUUID(jobUUID);",
                                          "relevantPart": "probe",
                                          "calls": {
                                             "location": "com/daimler/sechub/domain/administration/job/JobRestartRequestService.java",
                                             "line": 86,
                                             "column": 53,
                                             "source": "        Example<JobInformation> example = Example.of(probe);",
                                             "relevantPart": "of"
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 89
         },
         {
            "id": 246,
            "name": "Use Of Hardcoded Password",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/notification/email/SMTPServerConfiguration.java",
               "line": 49,
               "column": 9,
               "source": "\tString password;",
               "relevantPart": "password"
            },
            "type": "codeScan",
            "cweId": 259
         },
         {
            "id": 247,
            "name": "Use Of Hardcoded Password",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/product/nessus/NessusInstallSetupImpl.java",
               "line": 33,
               "column": 17,
               "source": "\tprivate String intranetNessusPassword;",
               "relevantPart": "intranetNessusPassword"
            },
            "type": "codeScan",
            "cweId": 259
         },
         {
            "id": 248,
            "name": "Use Of Hardcoded Password",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/product/nessus/NessusInstallSetupImpl.java",
               "line": 37,
               "column": 17,
               "source": "\tprivate String internetNessusPassword;",
               "relevantPart": "internetNessusPassword"
            },
            "type": "codeScan",
            "cweId": 259
         },
         {
            "id": 249,
            "name": "Public Data Assigned to Private Array",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/configuration/login/AutoDetectUserLoginConfiguration.java",
               "line": 14,
               "column": 29,
               "source": "\tpublic void setUser(char[] user) {",
               "relevantPart": "user",
               "calls": {
                  "location": "com/daimler/sechub/sharedkernel/configuration/login/AutoDetectUserLoginConfiguration.java",
                  "line": 15,
                  "column": 15,
                  "source": "\t\tthis.user = user;",
                  "relevantPart": "user",
                  "calls": {
                     "location": "com/daimler/sechub/sharedkernel/configuration/login/AutoDetectUserLoginConfiguration.java",
                     "line": 15,
                     "column": 7,
                     "source": "\t\tthis.user = user;",
                     "relevantPart": "user",
                     "calls": {
                        "location": "com/daimler/sechub/sharedkernel/configuration/login/AutoDetectUserLoginConfiguration.java",
                        "line": 11,
                        "column": 17,
                        "source": "\tprivate char[] user;",
                        "relevantPart": "user"
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 496
         },
         {
            "id": 250,
            "name": "Public Data Assigned to Private Array",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/configuration/login/BasicLoginConfiguration.java",
               "line": 21,
               "column": 29,
               "source": "\tpublic void setUser(char[] user) {",
               "relevantPart": "user",
               "calls": {
                  "location": "com/daimler/sechub/sharedkernel/configuration/login/BasicLoginConfiguration.java",
                  "line": 22,
                  "column": 15,
                  "source": "\t\tthis.user = user;",
                  "relevantPart": "user",
                  "calls": {
                     "location": "com/daimler/sechub/sharedkernel/configuration/login/BasicLoginConfiguration.java",
                     "line": 22,
                     "column": 7,
                     "source": "\t\tthis.user = user;",
                     "relevantPart": "user",
                     "calls": {
                        "location": "com/daimler/sechub/sharedkernel/configuration/login/BasicLoginConfiguration.java",
                        "line": 14,
                        "column": 17,
                        "source": "\tprivate char[] user;",
                        "relevantPart": "user"
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 496
         },
         {
            "id": 251,
            "name": "Just One of Equals and Hash code Defined",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/config/ScanConfig.java",
               "line": 12,
               "column": 2,
               "source": "@JsonIgnoreProperties(ignoreUnknown = true) // we do ignore to avoid problems from wrong configured values!",
               "relevantPart": "ScanConfig"
            },
            "type": "codeScan",
            "cweId": 581
         },
         {
            "id": 252,
            "name": "Just One of Equals and Hash code Defined",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/util/SimpleStringUtils.java",
               "line": 4,
               "column": 1,
               "source": "public class SimpleStringUtils {",
               "relevantPart": "SimpleStringUtils"
            },
            "type": "codeScan",
            "cweId": 581
         },
         {
            "id": 253,
            "name": "Reversible One Way Hash",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/support/MessageDigestSupport.java",
               "line": 12,
               "column": 36,
               "source": "\t\t\tmd5 = MessageDigest.getInstance(\"MD5\");",
               "relevantPart": "\"\"MD5\"\"",
               "calls": {
                  "location": "com/daimler/sechub/adapter/support/MessageDigestSupport.java",
                  "line": 12,
                  "column": 35,
                  "source": "\t\t\tmd5 = MessageDigest.getInstance(\"MD5\");",
                  "relevantPart": "getInstance"
               }
            },
            "type": "codeScan",
            "cweId": 328
         },
         {
            "id": 254,
            "name": "Password In Comment",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/configuration/AbstractAllowSecHubAPISecurityConfiguration.java",
               "line": 29,
               "column": 98,
               "source": "\t// https://docs.spring.io/spring-security/site/docs/current/reference/htmlsingle/#core-services-password-encoding",
               "relevantPart": "password"
            },
            "type": "codeScan",
            "cweId": 615
         },
         {
            "id": 255,
            "name": "Missing Device Lock Verification",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/SecHubServerApplication.java",
               "line": 25,
               "column": 21,
               "source": "\tpublic static void main(String[] args) {",
               "relevantPart": "main"
            },
            "type": "codeScan",
            "cweId": 829
         },
         {
            "id": 256,
            "name": "Missing Rooted Device Check",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/SecHubServerApplication.java",
               "line": 25,
               "column": 21,
               "source": "\tpublic static void main(String[] args) {",
               "relevantPart": "main"
            },
            "type": "codeScan",
            "cweId": 693
         },
         {
            "id": 257,
            "name": "Improper Resource Shutdown or Release",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/domain/scan/HTMLScanResultReportModelBuilder.java",
               "line": 124,
               "column": 47,
               "source": "\t\t\tInputStream in = cssResource.getInputStream();",
               "relevantPart": "getInputStream",
               "calls": {
                  "location": "com/daimler/sechub/domain/scan/HTMLScanResultReportModelBuilder.java",
                  "line": 124,
                  "column": 16,
                  "source": "\t\t\tInputStream in = cssResource.getInputStream();",
                  "relevantPart": "in",
                  "calls": {
                     "location": "com/daimler/sechub/domain/scan/HTMLScanResultReportModelBuilder.java",
                     "line": 125,
                     "column": 70,
                     "source": "\t\t\ttry (BufferedReader br = new BufferedReader(new InputStreamReader(in, \"UTF-8\"))){",
                     "relevantPart": "in"
                  }
               }
            },
            "type": "codeScan",
            "cweId": 404
         },
         {
            "id": 258,
            "name": "Use of Broken or Risky Cryptographic Algorithm",
            "severity": "LOW",
            "code": {
               "location": "com/daimler/sechub/adapter/support/MessageDigestSupport.java",
               "line": 12,
               "column": 35,
               "source": "\t\t\tmd5 = MessageDigest.getInstance(\"MD5\");",
               "relevantPart": "getInstance"
            },
            "type": "codeScan",
            "cweId": 327
         },
         {
            "id": 259,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/adapter/mock/AbstractMockedAdapter.java",
               "line": 155,
               "column": 15,
               "source": "            } catch (InterruptedException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 260,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/InternalInitialDataService.java",
               "line": 102,
               "column": 5,
               "source": "\t\t} catch (InterruptedException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 261,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ScanJobExecutor.java",
               "line": 66,
               "column": 19,
               "source": "                } catch (InterruptedException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 262,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ScanJobExecutor.java",
               "line": 73,
               "column": 10,
               "source": "        }catch(Exception e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 263,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/scan/ScanJobExecutor.java",
               "line": 149,
               "column": 15,
               "source": "            } catch (SecHubExecutionException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 264,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/scan/product/AbstractProductExecutionService.java",
               "line": 135,
               "column": 6,
               "source": "\t\t\t} catch (Exception e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 265,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/schedule/RetryContext.java",
               "line": 86,
               "column": 5,
               "source": "\t\t} catch (InterruptedException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 266,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/sereco/importer/CheckmarxV1XMLImporter.java",
               "line": 165,
               "column": 4,
               "source": "\t\t}catch(NumberFormatException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 267,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/TraceLogID.java",
               "line": 31,
               "column": 5,
               "source": "\t\t} catch (Exception e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 268,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/jpa/TypedQuerySupport.java",
               "line": 42,
               "column": 5,
               "source": "\t\t} catch (NoResultException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 269,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/util/FileChecksumSHA256Service.java",
               "line": 47,
               "column": 10,
               "source": "        }catch(IOException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 270,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/util/HostnameBuilder.java",
               "line": 15,
               "column": 11,
               "source": "        } catch (UnknownHostException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 271,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/util/ZipSupport.java",
               "line": 16,
               "column": 5,
               "source": "\t\t} catch (IOException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 272,
            "name": "Insufficient Logging of Exceptions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/sharedkernel/validation/MappingEntryValidationImpl.java",
               "line": 59,
               "column": 15,
               "source": "            } catch (PatternSyntaxException e) {",
               "relevantPart": "catch"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 273,
            "name": "Insufficient Logging of Database Actions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 21,
               "column": 3,
               "source": "\t\tdeleteProjectToUser.executeUpdate();",
               "relevantPart": "deleteProjectToUser"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 274,
            "name": "Insufficient Logging of Database Actions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 21,
               "column": 36,
               "source": "\t\tdeleteProjectToUser.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 275,
            "name": "Insufficient Logging of Database Actions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 25,
               "column": 3,
               "source": "\t\tdeleteProjectToURI.executeUpdate();",
               "relevantPart": "deleteProjectToURI"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 276,
            "name": "Insufficient Logging of Database Actions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 25,
               "column": 35,
               "source": "\t\tdeleteProjectToURI.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 277,
            "name": "Insufficient Logging of Database Actions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 29,
               "column": 3,
               "source": "\t\tdeleteProject.executeUpdate();",
               "relevantPart": "deleteProject"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 278,
            "name": "Insufficient Logging of Database Actions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/project/ProjectRepositoryImpl.java",
               "line": 29,
               "column": 30,
               "source": "\t\tdeleteProject.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 279,
            "name": "Insufficient Logging of Database Actions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserRepositoryImpl.java",
               "line": 33,
               "column": 3,
               "source": "\t\tdeleteProjectToUser.executeUpdate();",
               "relevantPart": "deleteProjectToUser"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 280,
            "name": "Insufficient Logging of Database Actions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserRepositoryImpl.java",
               "line": 33,
               "column": 36,
               "source": "\t\tdeleteProjectToUser.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 281,
            "name": "Insufficient Logging of Database Actions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserRepositoryImpl.java",
               "line": 37,
               "column": 3,
               "source": "\t\tdeleteUser.executeUpdate();",
               "relevantPart": "deleteUser"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 282,
            "name": "Insufficient Logging of Database Actions",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/domain/administration/user/UserRepositoryImpl.java",
               "line": 37,
               "column": 27,
               "source": "\t\tdeleteUser.executeUpdate();",
               "relevantPart": "executeUpdate"
            },
            "type": "codeScan",
            "cweId": 778
         },
         {
            "id": 283,
            "name": "Portability Flaw In File Separator",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/adapter/mock/MockedAdapterSetupService.java",
               "line": 20,
               "column": 49,
               "source": "\tpublic static final String DEFAULT_FILE_PATH = \"./../sechub-other/mockdata/mockdata_setup.json\";",
               "relevantPart": "\"\"./../sechub-other/mockdata/mockdata_setup.json\"\"",
               "calls": {
                  "location": "com/daimler/sechub/adapter/mock/MockedAdapterSetupService.java",
                  "line": 20,
                  "column": 29,
                  "source": "\tpublic static final String DEFAULT_FILE_PATH = \"./../sechub-other/mockdata/mockdata_setup.json\";",
                  "relevantPart": "DEFAULT_FILE_PATH",
                  "calls": {
                     "location": "com/daimler/sechub/adapter/mock/MockedAdapterSetupService.java",
                     "line": 27,
                     "column": 20,
                     "source": "\tString filePath = DEFAULT_FILE_PATH;// set here default too when not in spring",
                     "relevantPart": "DEFAULT_FILE_PATH",
                     "calls": {
                        "location": "com/daimler/sechub/adapter/mock/MockedAdapterSetupService.java",
                        "line": 27,
                        "column": 9,
                        "source": "\tString filePath = DEFAULT_FILE_PATH;// set here default too when not in spring",
                        "relevantPart": "filePath",
                        "calls": {
                           "location": "com/daimler/sechub/adapter/mock/MockedAdapterSetupService.java",
                           "line": 40,
                           "column": 37,
                           "source": "\t\treturn createStaticResultByTargets(adapter);",
                           "relevantPart": "createStaticResultByTargets",
                           "calls": {
                              "location": "com/daimler/sechub/adapter/mock/MockedAdapterSetupService.java",
                              "line": 65,
                              "column": 20,
                              "source": "\t\tensureSetupLoaded();",
                              "relevantPart": "ensureSetupLoaded",
                              "calls": {
                                 "location": "com/daimler/sechub/adapter/mock/MockedAdapterSetupService.java",
                                 "line": 73,
                                 "column": 22,
                                 "source": "\t\tloadConfiguredSetup();",
                                 "relevantPart": "loadConfiguredSetup",
                                 "calls": {
                                    "location": "com/daimler/sechub/adapter/mock/MockedAdapterSetupService.java",
                                    "line": 79,
                                    "column": 49,
                                    "source": "\t\t\tString json = mockSupport.loadResourceString(filePath);",
                                    "relevantPart": "filePath",
                                    "calls": {
                                       "location": "com/daimler/sechub/adapter/support/MockSupport.java",
                                       "line": 23,
                                       "column": 42,
                                       "source": "\tpublic String loadResourceString(String path) {",
                                       "relevantPart": "path",
                                       "calls": {
                                          "location": "com/daimler/sechub/adapter/support/MockSupport.java",
                                          "line": 26,
                                          "column": 40,
                                          "source": "\t\ttry (InputStream stream = createPath(path)) {",
                                          "relevantPart": "path",
                                          "calls": {
                                             "location": "com/daimler/sechub/adapter/support/MockSupport.java",
                                             "line": 42,
                                             "column": 40,
                                             "source": "\tprivate InputStream createPath(String path) {",
                                             "relevantPart": "path",
                                             "calls": {
                                                "location": "com/daimler/sechub/adapter/support/MockSupport.java",
                                                "line": 43,
                                                "column": 24,
                                                "source": "\t\tFile file = new File(path);",
                                                "relevantPart": "path",
                                                "calls": {
                                                   "location": "com/daimler/sechub/adapter/support/MockSupport.java",
                                                   "line": 43,
                                                   "column": 15,
                                                   "source": "\t\tFile file = new File(path);",
                                                   "relevantPart": "File"
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                        }
                     }
                  }
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 284,
            "name": "Portability Flaw In File Separator",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
               "line": 42,
               "column": 32,
               "source": "        File parent = new File(\"./sechub-integrationtest\");",
               "relevantPart": "\"\"./sechub-integrationtest\"\"",
               "calls": {
                  "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
                  "line": 42,
                  "column": 23,
                  "source": "        File parent = new File(\"./sechub-integrationtest\");",
                  "relevantPart": "File"
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 285,
            "name": "Portability Flaw In File Separator",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
               "line": 44,
               "column": 31,
               "source": "            parent = new File(\"./../sechub-integrationtest\");",
               "relevantPart": "\"\"./../sechub-integrationtest\"\"",
               "calls": {
                  "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
                  "line": 44,
                  "column": 22,
                  "source": "            parent = new File(\"./../sechub-integrationtest\");",
                  "relevantPart": "File"
               }
            },
            "type": "codeScan",
            "cweId": 474
         },
         {
            "id": 286,
            "name": "Portability Flaw In File Separator",
            "severity": "INFO",
            "code": {
               "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
               "line": 54,
               "column": 38,
               "source": "        File file = new File(parent, \"build/sechub/integrationtest\");",
               "relevantPart": "\"\"build/sechub/integrationtest\"\"",
               "calls": {
                  "location": "com/daimler/sechub/server/IntegrationTestServerPersistentTestDataCleaner.java",
                  "line": 54,
                  "column": 21,
                  "source": "        File file = new File(parent, \"build/sechub/integrationtest\");",
                  "relevantPart": "File"
               }
            },
            "type": "codeScan",
            "cweId": 474
         }
      ]
   },
   "trafficLight": "YELLOW"
}
