{
    "components": {
        "schemas": {
            "EncryptionStatus": {
                "title": "EncryptionStatus",
                "type": "object",
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "createdFrom": {
                                                "type": "string",
                                                "description": "User id of admin who created the encryption entry"
                                            },
                                            "created": {
                                                "type": "string",
                                                "description": "Creation timestamp"
                                            },
                                            "usage": {
                                                "type": "object",
                                                "properties": {
                                                    "*": {
                                                        "type": "number",
                                                        "description": "Key value data"
                                                    }
                                                },
                                                "description": "Map containing information about usage of this encryption"
                                            },
                                            "passwordSource": {
                                                "type": "object",
                                                "properties": {
                                                    "data": {
                                                        "type": "string",
                                                        "description": "Data for password source. If type is ENVIRONMENT_VARIABLE then it is the the name of the environment variable."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Type of password source. Can be [NONE, ENVIRONMENT_VARIABLE]"
                                                    }
                                                }
                                            },
                                            "id": {
                                                "type": "string",
                                                "description": "Unique identifier"
                                            },
                                            "algorithm": {
                                                "type": "string",
                                                "description": "Algorithm used for encryption"
                                            }
                                        }
                                    }
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of the domain which will provide this encryption data elements"
                                }
                            }
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "The type description of the json content"
                    }
                }
            },
            "ExecutionProfileCreate": {
                "title": "ExecutionProfileCreate",
                "type": "object",
                "properties": {
                    "configurations": {
                        "type": "array",
                        "description": "Configurations can be linked at creation time as well - see update description",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "A short description for the profile"
                    },
                    "projectIds": {
                        "type": "array",
                        "description": "Projects can be linked by their ids at creation time as well - see update description",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enabled state of profile, default is false"
                    }
                }
            },
            "ExecutionProfileFetch": {
                "title": "ExecutionProfileFetch",
                "type": "object",
                "properties": {
                    "configurations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "productIdentifier": {
                                    "type": "string",
                                    "description": "executed product"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name of configuration"
                                },
                                "executorVersion": {
                                    "type": "number",
                                    "description": "executor version"
                                },
                                "uuid": {
                                    "type": "string",
                                    "description": "uuid of configuration"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "enabled state of this configuration"
                                }
                            }
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "A short description for the profile"
                    },
                    "projectIds": {
                        "type": "array",
                        "description": "Projects can be linked by their ids here",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enabled state of profile, default is false"
                    }
                }
            },
            "ExecutionProfileUpdate": {
                "title": "ExecutionProfileUpdate",
                "type": "object",
                "properties": {
                    "configurations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "uuid": {
                                    "type": "string",
                                    "description": "Add uuid for configuration to use here"
                                }
                            }
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "A short description for the profile"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enabled state of profile, default is false"
                    }
                }
            },
            "ExecutorConfiguration": {
                "title": "ExecutorConfiguration",
                "type": "object",
                "properties": {
                    "productIdentifier": {
                        "type": "string",
                        "description": "Executor product identifier"
                    },
                    "name": {
                        "type": "string",
                        "description": "A name for this configuration"
                    },
                    "setup": {
                        "type": "object",
                        "properties": {
                            "baseURL": {
                                "type": "string",
                                "description": "Base URL to the product"
                            },
                            "credentials": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "description": "Password, either plain (not recommended) or with env:VARIABLENAME, in last case the password will be from environment variable "
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "User name, either plain (not recommended) or with env:VARIABLENAME, in last case the user name will be from environment variable "
                                    }
                                }
                            },
                            "jobParameters": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "description": "Job parameter value"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "Job parameter key"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "executorVersion": {
                        "type": "number",
                        "description": "Executor version"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enabled state of executor, per default false"
                    }
                }
            },
            "ExecutorConfigurationId": {
                "title": "ExecutorConfigurationId",
                "type": "object"
            },
            "ExecutorConfigurationWithUUID": {
                "title": "ExecutorConfigurationWithUUID",
                "type": "object",
                "properties": {
                    "productIdentifier": {
                        "type": "string",
                        "description": "Executor product identifier"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this configuration"
                    },
                    "setup": {
                        "type": "object",
                        "properties": {
                            "baseURL": {
                                "type": "string",
                                "description": "Base URL to the product"
                            },
                            "credentials": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "description": "Password, either plain (not recommended) or with env:VARIABLENAME, in last case the password will be from environment variable "
                                    },
                                    "user": {
                                        "type": "string",
                                        "description": "User name, either plain (not recommended) or with env:VARIABLENAME, in last case the user name will be from environment variable "
                                    }
                                }
                            },
                            "jobParameters": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "description": "Job parameter value"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "Job parameter key"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "executorVersion": {
                        "type": "number",
                        "description": "Executor version"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "The uuid of this configuration"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enabled state of executor"
                    }
                }
            },
            "FalsePositives": {
                "title": "FalsePositives",
                "type": "object",
                "properties": {
                    "projectData": {
                        "type": "array",
                        "description": "Project data list containing false positive setup for the project",
                        "items": {
                            "type": "object",
                            "properties": {
                                "webScan": {
                                    "type": "object",
                                    "properties": {
                                        "cweId": {
                                            "type": "number",
                                            "description": "Defines a CWE ID for false positives which occur during webscans. This is mandatory, but can be empty. If it is not specified it matches the findings with no CWE IDs."
                                        },
                                        "methods": {
                                            "type": "array",
                                            "description": "Defines a list of (HTTP) methods for false positives which occur during webscans. This is optional and if nothing is specified, the entry applies to all methods.",
                                            "items": {
                                                "oneOf": [
                                                    {
                                                        "type": "object"
                                                    },
                                                    {
                                                        "type": "boolean"
                                                    },
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "number"
                                                    }
                                                ]
                                            }
                                        },
                                        "urlPattern": {
                                            "type": "string",
                                            "description": "Defines a url pattern for false positives which occur during webscans. Can be used with wildcards like '*.host.com'. Each entry must contain more than just wildcards, '*.*.*' or '*' are not allowed."
                                        }
                                    },
                                    "description": "Defines a section for false positives which occur during webscans."
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "A comment describing why this is a false positive."
                                },
                                "id": {
                                    "type": "string",
                                    "description": "Identifier which is used to update or remove the respective false positive entry."
                                }
                            }
                        }
                    },
                    "apiVersion": {
                        "type": "string",
                        "description": "The api version, currently only 1.0 is supported"
                    },
                    "jobData": {
                        "type": "array",
                        "description": "Job data list containing false positive setup based on former jobs",
                        "items": {
                            "type": "object",
                            "properties": {
                                "jobUUID": {
                                    "type": "string",
                                    "description": "SecHub job uuid where finding was"
                                },
                                "findingId": {
                                    "type": "number",
                                    "description": "SecHub finding identifier - identifies problem inside the job which shall be markeda as a false positive."
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "A comment describing why this is a false positive"
                                }
                            }
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the json content. Currently only accepted value is 'falsePositiveDataList' but we also still accept the deprecated type 'falsePositiveJobDataList'."
                    }
                }
            },
            "FullScanDataZIP": {
                "title": "FullScanDataZIP",
                "type": "object"
            },
            "JobId": {
                "title": "JobId",
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string",
                        "description": "A unique job id"
                    }
                }
            },
            "JobStatus": {
                "title": "JobStatus",
                "type": "object",
                "properties": {
                    "result": {
                        "type": "string",
                        "description": "Result of job"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Owner / initiator of job"
                    },
                    "jobUUID": {
                        "type": "string",
                        "description": "The job uuid"
                    },
                    "created": {
                        "type": "string",
                        "description": "Creation timestamp of job"
                    },
                    "ended": {
                        "type": "string",
                        "description": "End timestamp of job execution"
                    },
                    "started": {
                        "type": "string",
                        "description": "Start timestamp of job execution"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of job"
                    },
                    "trafficLight": {
                        "type": "string",
                        "description": "Trafficlight of job - but only available when job has been done. Possible states are GREEN, YELLOW, RED, OFF"
                    }
                }
            },
            "ListOfExecutionProfiles": {
                "title": "ListOfExecutionProfiles",
                "type": "object",
                "properties": {
                    "executionProfiles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string",
                                    "description": "A profile description"
                                },
                                "id": {
                                    "type": "string",
                                    "description": "The profile id"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enabled state of profile"
                                }
                            }
                        }
                    },
                    "type": {
                        "type": "string",
                        "description": "Always `executorProfileList` as an identifier for the list"
                    }
                }
            },
            "ListOfExecutorConfigurations": {
                "title": "ListOfExecutorConfigurations",
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Always `executorConfigurationList` as an identifier for the list"
                    },
                    "executorConfigurations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The configuration name"
                                },
                                "uuid": {
                                    "type": "string",
                                    "description": "The uuid of the configuration"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enabled state of configuration"
                                }
                            }
                        }
                    }
                }
            },
            "ListOfProjects": {
                "type": "array",
                "description": "List of project Ids",
                "items": {
                    "type": "string"
                }
            },
            "ListOfRunningJobs": {
                "title": "ListOfRunningJobs",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "owner": {
                            "type": "string",
                            "description": "Owner of the job - means user which triggered it"
                        },
                        "jobUUID": {
                            "type": "string",
                            "description": "The uuid of the running job"
                        },
                        "projectId": {
                            "type": "string",
                            "description": "The name of the project the job is running for"
                        },
                        "since": {
                            "type": "string",
                            "description": "Timestamp since when job has been started"
                        },
                        "status": {
                            "type": "string",
                            "description": "A status information "
                        }
                    }
                }
            },
            "ListOfSignups": {
                "title": "ListOfSignups",
                "type": "array",
                "description": "List of user signups",
                "items": {
                    "type": "object",
                    "properties": {
                        "emailAddress": {
                            "type": "string",
                            "description": "The email address"
                        },
                        "userId": {
                            "type": "string",
                            "description": "The user id"
                        }
                    },
                    "description": "List of user signups"
                }
            },
            "ListOfUsers": {
                "type": "array",
                "description": "List of admin Ids",
                "items": {
                    "type": "string"
                }
            },
            "MappingConfiguration": {
                "title": "MappingConfiguration",
                "type": "object",
                "properties": {
                    "entries": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "pattern": {
                                    "type": "string",
                                    "description": "Pattern"
                                },
                                "comment": {
                                    "type": "string",
                                    "description": "Comment"
                                },
                                "replacement": {
                                    "type": "string",
                                    "description": "Replacement"
                                }
                            }
                        }
                    }
                }
            },
            "MockDataConfiguration": {
                "title": "MockDataConfiguration",
                "type": "object"
            },
            "Project": {
                "title": "Project",
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string",
                        "description": "Username of the owner of this project. An owner is the person in charge"
                    },
                    "metaData": {
                        "type": "object",
                        "properties": {
                            "*": {
                                "type": "string",
                                "description": "An arbitrary metadata key-value pair"
                            }
                        },
                        "description": "An JSON object containing metadata key-value pairs defined for this project"
                    },
                    "apiVersion": {
                        "type": "string",
                        "description": "The api version, currently only 1.0 is supported"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the project to create. Is also used as a unique ID!"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the project."
                    },
                    "whiteList": {
                        "type": "object",
                        "properties": {
                            "uris": {
                                "type": "array",
                                "description": "All URIs used now for whitelisting. Former parts will be replaced completely!",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "ProjectDetails": {
                "title": "ProjectDetails",
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string",
                        "description": "Username of the owner of this project. An owner is the person in charge."
                    },
                    "metaData": {
                        "type": "object",
                        "properties": {
                            "key1": {
                                "type": "string",
                                "description": "An arbitrary metadata key"
                            }
                        },
                        "description": "An JSON object containing metadata key-value pairs defined for this project."
                    },
                    "accessLevel": {
                        "type": "string",
                        "description": "The project access level"
                    },
                    "templateIds": {
                        "type": "array",
                        "description": "A list of all templates assigned to the project",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "object"
                                },
                                {
                                    "type": "boolean"
                                },
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "number"
                                }
                            ]
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "The project description."
                    },
                    "whiteList": {
                        "type": "array",
                        "description": "A list of all whitelisted URIs. Only these ones can be scanned for the project!",
                        "items": {
                            "type": "string"
                        }
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The name of the project"
                    },
                    "users": {
                        "type": "array",
                        "description": "A list of all users having access to the project",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ProjectJobList": {
                "title": "ProjectJobList",
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "number",
                        "description": "The total pages available"
                    },
                    "page": {
                        "type": "number",
                        "description": "The page number"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "executedBy": {
                                    "type": "string",
                                    "description": "User who initiated the job"
                                },
                                "metaData": {
                                    "type": "object",
                                    "properties": {
                                        "*": {
                                            "type": "object",
                                            "description": "Meta data of job - but only contained in result, when query parameter `withMetaData` is defined as 'true'."
                                        }
                                    }
                                },
                                "jobUUID": {
                                    "type": "string",
                                    "description": "The job uuid"
                                },
                                "created": {
                                    "type": "string",
                                    "description": "Creation timestamp of job"
                                },
                                "executionResult": {
                                    "type": "string",
                                    "description": "Execution result of job"
                                },
                                "executionState": {
                                    "type": "string",
                                    "description": "Execution state of job"
                                },
                                "ended": {
                                    "type": "string",
                                    "description": "End timestamp of job execution"
                                },
                                "started": {
                                    "type": "string",
                                    "description": "Start timestamp of job execution"
                                },
                                "trafficLight": {
                                    "type": "string",
                                    "description": "Trafficlight of job - but only available when job has been done. Possible states are GREEN, YELLOW, RED, OFF"
                                }
                            }
                        }
                    }
                }
            },
            "ProjectMetaData": {
                "title": "ProjectMetaData",
                "type": "object",
                "properties": {
                    "metaData": {
                        "type": "object",
                        "properties": {
                            "key1": {
                                "type": "string",
                                "description": "An arbitrary metadata key."
                            }
                        },
                        "description": "Metadata object. Contains key-value pairs."
                    },
                    "apiVersion": {
                        "type": "string",
                        "description": "The api version, currently only 1.0 is supported"
                    }
                }
            },
            "ProjectScanLogs": {
                "title": "ProjectScanLogs",
                "type": "array",
                "description": "An array of scan log summary entries",
                "items": {
                    "type": "object",
                    "properties": {
                        "executedBy": {
                            "type": "string",
                            "description": "The user id of the user which executed the scan"
                        },
                        "sechubJobUUID": {
                            "type": "string",
                            "description": "The uuid of corresponding sechub Job."
                        },
                        "ended": {
                            "type": "string",
                            "description": "The timestamp when the scan was ended"
                        },
                        "started": {
                            "type": "string",
                            "description": "The timestamp when the scan was started"
                        },
                        "status": {
                            "type": "string",
                            "description": "A status field about scan situation"
                        }
                    },
                    "description": "An array of scan log summary entries"
                }
            },
            "ProjectWhitelistUpdate": {
                "title": "ProjectWhitelistUpdate",
                "type": "object",
                "properties": {
                    "apiVersion": {
                        "type": "string",
                        "description": "The api version, currently only 1.0 is supported"
                    },
                    "whiteList": {
                        "type": "object",
                        "properties": {
                            "uris": {
                                "type": "array",
                                "description": "All URIS used now for whitelisting. Former parts will be replaced completely!",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "ScanJob": {
                "title": "ScanJob",
                "type": "object",
                "properties": {
                    "apiVersion": {
                        "type": "string",
                        "description": "The api version, currently only 1.0 is supported"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "sources": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "fileSystem": {
                                            "type": "object",
                                            "properties": {
                                                "folders": {
                                                    "type": "array",
                                                    "description": "Sources from given file system folders",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "files": {
                                                    "type": "array",
                                                    "description": "Sources from given file system files",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Unique reference name"
                                        }
                                    }
                                }
                            },
                            "binaries": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "fileSystem": {
                                            "type": "object",
                                            "properties": {
                                                "folders": {
                                                    "type": "array",
                                                    "description": "Binaries from given file system folders",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "files": {
                                                    "type": "array",
                                                    "description": "Binaries from given file system files",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Unique reference name"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "secretScan": {
                        "type": "object",
                        "properties": {
                            "use": {
                                "type": "array",
                                "description": "Referenced data configuration objects by their unique names",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Secret scan configuration block"
                    },
                    "licenseScan": {
                        "type": "object",
                        "properties": {
                            "use": {
                                "type": "array",
                                "description": "Referenced data configuration objects by their unique names",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "License scan configuration block"
                    },
                    "infraScan": {
                        "type": "object",
                        "properties": {
                            "uris": {
                                "type": "array",
                                "description": "Infrastructure URIs to scan for",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "ips": {
                                "type": "array",
                                "description": "Infrastructure IPs to scan for",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Infrastructure configuration block"
                    },
                    "codeScan": {
                        "type": "object",
                        "properties": {
                            "fileSystem": {
                                "type": "object",
                                "properties": {
                                    "folders": {
                                        "type": "array",
                                        "description": "Code scan sources from given file system folders",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "files": {
                                        "type": "array",
                                        "description": "Code scan sources from given file system files",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "use": {
                                "type": "array",
                                "description": "Referenced data configuration objects by their unique names",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Code scan configuration block"
                    },
                    "webScan": {
                        "type": "object",
                        "properties": {
                            "maxScanDuration": {
                                "type": "object",
                                "properties": {
                                    "duration": {
                                        "type": "number",
                                        "description": "Duration of the scan as integer"
                                    },
                                    "unit": {
                                        "type": "string",
                                        "description": "Unit of the duration. Possible values are: millisecond(s), second(s), minute(s), hour(s), day(s)"
                                    }
                                }
                            },
                            "headers": {
                                "type": "array",
                                "description": "List of HTTP headers. Can be used for authentication or anything else.",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "onlyForUrls": {
                                            "type": "array",
                                            "description": "Optional list of URLs this header shall be used for like: https://mywebapp.com/path/. Can contain wildcards like: https://mywebapp.com/path/<*>/with/wildcard",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "use": {
                                            "type": "array",
                                            "description": "Reference to the data section containing a file with the value for this header, e.g if the value is to big for the sechub configuration. Always use 'sources' with a single 'file' instead 'folders'.",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Name of the defined HTTP header."
                                        },
                                        "sensitive": {
                                            "type": "boolean",
                                            "description": "Defines header masking. If 'true' the header value will be replaced with '********' inside the report, 'false' will show the value as is. Default is set to 'true'."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "Value of the defined HTTP header. Either specify the header value directly here or reference a data section with 'use' e.g. if the value is to big, but never specify both."
                                        }
                                    }
                                }
                            },
                            "clientCertificate": {
                                "type": "object",
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "description": "Password the client certificate file is protected with"
                                    },
                                    "use": {
                                        "type": "array",
                                        "description": "Reference to the data section containing the client certificate definition file. Always use 'sources' with a single 'file' instead 'folders'.",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "excludes": {
                                "type": "array",
                                "description": "Exclude URL sub-paths to scan. Example: /admin",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "includes": {
                                "type": "array",
                                "description": "Include URL sub-paths to scan. Example: /hidden",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "api": {
                                "type": "object",
                                "properties": {
                                    "apiDefinitionUrl": {
                                        "type": "string",
                                        "description": "Specifies an URL to read the API definition from."
                                    },
                                    "use": {
                                        "type": "array",
                                        "description": "Reference to the data section containing the API definition files. Always use 'sources' with 'files' instead 'folders'.",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "type": {
                                        "type": "string",
                                        "description": "Type of the API definition files that will be provided"
                                    }
                                }
                            },
                            "login": {
                                "type": "object",
                                "properties": {
                                    "totp": {
                                        "type": "object",
                                        "properties": {
                                            "seed": {
                                                "type": "string",
                                                "description": "The seed/secret for the TOTP generation. If TOTP is configured this parameter is mandatory."
                                            },
                                            "tokenLength": {
                                                "type": "number",
                                                "description": "The length of the generated TOTP. In most cases nothing is specified and the default length '6' is used."
                                            },
                                            "encodingType": {
                                                "type": "string",
                                                "description": "The encoding type of the 'seed'. The default value is 'AUTODETECT'. Currently available values are: 'BASE64', 'BASE32', 'HEX', 'PLAIN', 'AUTODETECT'"
                                            },
                                            "hashAlgorithm": {
                                                "type": "string",
                                                "description": "The hash algorithm to generate the TOTP. In most cases nothing is specified and the  default hash algorithm 'HMAC_SHA1' is used. Currently available values are: 'HMAC_SHA1', 'HMAC_SHA256', 'HMAC_SHA512'"
                                            },
                                            "validityInSeconds": {
                                                "type": "number",
                                                "description": "The time in seconds the generated TOTP is valid. In most cases nothing is specified and the default of '30' seconds is used."
                                            }
                                        },
                                        "description": "Optional TOTP configuration as an additional authentication factor."
                                    },
                                    "form": {
                                        "type": "object",
                                        "properties": {
                                            "script": {
                                                "type": "object",
                                                "properties": {
                                                    "pages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "actions": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "unit": {
                                                                                "type": "string",
                                                                                "description": "the time unit to wait: millisecond, second, minute, hour, day."
                                                                            },
                                                                            "description": {
                                                                                "type": "string",
                                                                                "description": "description"
                                                                            },
                                                                            "selector": {
                                                                                "type": "string",
                                                                                "description": "css selector"
                                                                            },
                                                                            "type": {
                                                                                "type": "string",
                                                                                "description": "action type: username, password, input, click, wait"
                                                                            },
                                                                            "value": {
                                                                                "type": "string",
                                                                                "description": "value"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "description": "script"
                                            }
                                        },
                                        "description": "form login definition"
                                    },
                                    "basic": {
                                        "type": "object",
                                        "properties": {
                                            "password": {
                                                "type": "string",
                                                "description": "password"
                                            },
                                            "user": {
                                                "type": "string",
                                                "description": "username"
                                            }
                                        },
                                        "description": "basic login definition"
                                    },
                                    "url": {
                                        "type": "string",
                                        "description": "Login URL"
                                    }
                                },
                                "description": "Webscan login definition"
                            },
                            "url": {
                                "type": "string",
                                "description": "Webscan URI to scan for"
                            }
                        },
                        "description": "Webscan configuration block"
                    }
                }
            },
            "SecHubReport": {
                "title": "SecHubReport",
                "type": "object"
            },
            "ServerRuntimeData": {
                "title": "ServerRuntimeData",
                "type": "object",
                "properties": {
                    "serverVersion": {
                        "type": "string",
                        "description": "The sechub server version."
                    }
                }
            },
            "StatusInformation": {
                "title": "StatusInformation",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "value": {
                            "type": "string",
                            "description": "Status value"
                        },
                        "key": {
                            "type": "string",
                            "description": "Status key identifier"
                        }
                    }
                }
            },
            "Templates": {
                "title": "Templates",
                "type": "object",
                "properties": {
                    "variables": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The variable name"
                                },
                                "optional": {
                                    "type": "boolean",
                                    "description": "Defines if the variable is optional. The default is false"
                                },
                                "validation": {
                                    "type": "object",
                                    "properties": {
                                        "regularExpression": {
                                            "type": "string",
                                            "description": "A regular expression which must match to accept the user input inside the variable"
                                        },
                                        "minLength": {
                                            "type": "number",
                                            "description": "The minimum content length of this variable"
                                        },
                                        "maxLength": {
                                            "type": "number",
                                            "description": "The maximum content length of this variable"
                                        }
                                    },
                                    "description": "Defines a simple validation segment."
                                }
                            }
                        }
                    },
                    "assetId": {
                        "type": "string",
                        "description": "The asset id used by the template"
                    },
                    "type": {
                        "type": "string",
                        "description": "The template type. Must be be defined when a new template is created. An update will ignore changes of this property because the type is immutable! Currently supported types are: [Lcom.mercedesbenz.sechub.commons.model.template.TemplateType;@24ae091b"
                    }
                }
            },
            "UserDetails": {
                "title": "UserDetails",
                "type": "object",
                "properties": {
                    "projects": {
                        "type": "array",
                        "description": "The projects the user has access to",
                        "items": {
                            "type": "string"
                        }
                    },
                    "superAdmin": {
                        "type": "boolean",
                        "description": "True, when this user is a super administrator"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The name of the user"
                    },
                    "email": {
                        "type": "string",
                        "description": "The email address of the user"
                    },
                    "ownedProjects": {
                        "type": "array",
                        "description": "The projects the user is owner of",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "UserSignup": {
                "title": "UserSignup",
                "type": "object",
                "properties": {
                    "emailAddress": {
                        "type": "string",
                        "description": "Email address"
                    },
                    "apiVersion": {
                        "type": "string",
                        "description": "The api version, currently only 1.0 is supported"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Wanted userid, the userid must be lowercase only!"
                    }
                }
            },
            "api-admin-asset-assetId-details924562158": {
                "type": "object",
                "properties": {
                    "assetId": {
                        "type": "string",
                        "description": "The asset identifier"
                    },
                    "files": {
                        "type": "array",
                        "description": "Array containing data about files from asset",
                        "items": {
                            "type": "object",
                            "properties": {
                                "fileName": {
                                    "type": "string",
                                    "description": "Name of file"
                                },
                                "checksum": {
                                    "type": "string",
                                    "description": "Checksum for file"
                                }
                            }
                        }
                    }
                }
            },
            "api-admin-asset-ids519982223": {
                "type": "array",
                "description": "Array contains all existing asset identifiers",
                "items": {
                    "oneOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                }
            },
            "api-admin-encryption-rotate-638361826": {
                "type": "object"
            },
            "api-admin-template-templateId1476369005": {
                "type": "object",
                "properties": {
                    "variables": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The variable name"
                                },
                                "optional": {
                                    "type": "boolean",
                                    "description": "Defines if the variable is optional. The default is false"
                                },
                                "validation": {
                                    "type": "object",
                                    "properties": {
                                        "regularExpression": {
                                            "type": "string",
                                            "description": "A regular expression which must match to accept the user input inside the variable"
                                        },
                                        "minLength": {
                                            "type": "number",
                                            "description": "The minimum content length of this variable"
                                        },
                                        "maxLength": {
                                            "type": "number",
                                            "description": "The maximum content length of this variable"
                                        }
                                    },
                                    "description": "Defines a simple validation segment."
                                }
                            }
                        }
                    },
                    "assetId": {
                        "type": "string",
                        "description": "The asset id used by the template"
                    },
                    "id": {
                        "type": "string",
                        "description": "The (unique) template id"
                    },
                    "type": {
                        "type": "string",
                        "description": "The template type. Currently supported types are: [Lcom.mercedesbenz.sechub.commons.model.template.TemplateType;@5372b370"
                    }
                }
            },
            "api-admin-templates-753726831": {
                "type": "array",
                "description": "Array contains all existing template identifiers",
                "items": {
                    "oneOf": [
                        {
                            "type": "object"
                        },
                        {
                            "type": "boolean"
                        },
                        {
                            "type": "string"
                        },
                        {
                            "type": "number"
                        }
                    ]
                }
            },
            "api-projects-387937430": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "owner": {
                            "type": "string",
                            "description": "Name of owner of the Project"
                        },
                        "isOwned": {
                            "type": "boolean",
                            "description": "If caller is owner of the project"
                        },
                        "assignedUsers": {
                            "type": "array",
                            "description": "Optional: Assigned users (only viewable by owner or admin)",
                            "items": {
                                "oneOf": [
                                    {
                                        "type": "object"
                                    },
                                    {
                                        "type": "boolean"
                                    },
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "number"
                                    }
                                ]
                            }
                        },
                        "projectId": {
                            "type": "string",
                            "description": "Project ID"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "basic": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "info": {
        "title": "SecHub API",
        "description": "SecHub API description",
        "version": "0.0.0"
    },
    "openapi": "3.0.1",
    "paths": {
        "/api/admin/admins": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin lists all admins",
                "description": "An administrator downloads a json file containing all names of SecHub admins",
                "operationId": "adminListsAllAdmins",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOfUsers"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/asset/ids": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches asset ids",
                "description": "An administrator fetches all available asset ids.",
                "operationId": "adminFetchAssetIds",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api-admin-asset-ids519982223"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/asset/{assetId}": {
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin deletes asset comletely",
                "description": "An administrator deletes an asset completely.",
                "operationId": "adminDeletesAssetCompletely",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset identifier for the asset which shall be deleted completely",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/asset/{assetId}/details": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches asset details",
                "description": "An administrator fetches details about an asset. For example: the result will contain names but also checksum of files.",
                "operationId": "adminFetchAssetDetails",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api-admin-asset-assetId-details924562158"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/asset/{assetId}/file": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin uploads an asset file",
                "description": "An administrator uploads a file for an asset. If the file already exists, it will be overriden.",
                "operationId": "adminUploadsAssetFile",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The id of the asset to which the uploaded file belongs to",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "checkSum",
                        "in": "query",
                        "description": "A sha256 checksum for file upload validation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                }
            }
        },
        "/api/admin/asset/{assetId}/file/{fileName}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin downloads an asset file",
                "description": "An administrator downloads a file fom an asset.",
                "operationId": "adminDownloadsAssetFile",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "description": "The name of the file to download from asset",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin deletes an asset file",
                "description": "An administrator deletes a file fom an asset.",
                "operationId": "adminDeletesAssetFile",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "description": "The name of the file to delete inside the asset",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/config/autoclean": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches auto cleanup configuration",
                "description": "An administrator feches current <<concept-auto-cleanup,auto cleanup>> configuration.",
                "operationId": "adminFetchesAutoCleanupConfiguration",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api-admin-encryption-rotate-638361826"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin updates auto cleanup configuration",
                "description": "An administrator changes <<concept-auto-cleanup,auto cleanup>> configuration.",
                "operationId": "adminUpdatesAutoCleanupConfiguration",
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/api-admin-encryption-rotate-638361826"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "202"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/config/execution/profile/{profileId}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches execution profile",
                "description": "An administrator fetches details about an execution profile",
                "operationId": "adminFetchesExecutionProfile",
                "parameters": [
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The profile id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExecutionProfileFetch"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin updates execution profile",
                "description": "An administrator updateds dedicated execution profile",
                "operationId": "adminUpdatesExecutionProfile",
                "parameters": [
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The profile id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/ExecutionProfileUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin creates an execution profile",
                "description": "An administrator creates an execution profile",
                "operationId": "adminCreatesExecutionProfile",
                "parameters": [
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The profile id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/ExecutionProfileCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "201"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin deletes execution profile",
                "description": "An administrator deletes execution profile",
                "operationId": "adminDeletesExecutionProfile",
                "parameters": [
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The profile id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/config/execution/profile/{profileId}/project/{projectId}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin assigns execution profile to project",
                "description": "An administrator assigns an execution profile to an existing project",
                "operationId": "adminAssignsExecutionProfileToProject",
                "parameters": [
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The profile id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "201"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin unassigns execution profile from project",
                "description": "An administrator unassigns an execution profile from a projects.",
                "operationId": "adminUnassignsExecutionProfileFromProject",
                "parameters": [
                    {
                        "name": "profileId",
                        "in": "path",
                        "description": "The profile id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/config/execution/profiles": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches execution profile list",
                "description": "An administrator fetches execution profile list",
                "operationId": "adminFetchesExecutionProfileList",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOfExecutionProfiles"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/config/executor": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin creates an executor configuration",
                "description": "An administrator creates an executor a new configuration entry.",
                "operationId": "adminCreatesExecutorConfiguration",
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/ExecutorConfiguration"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "201",
                        "content": {
                            "text/plain;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExecutorConfigurationId"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/config/executor/{uuid}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches executor configuration",
                "description": "An administrator fetches one explicit executor configuration by its uuid.",
                "operationId": "adminFetchesExecutorConfiguration",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The configuration uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExecutorConfigurationWithUUID"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin updates executor configuration setup",
                "description": "An administrator updateds dedicated executor configuration. The update does change description, enabled state and also used executors, but Will NOT change any associations between profile and projects.",
                "operationId": "adminUpdatesExecutorConfig",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The configuration uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/ExecutorConfiguration"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin deletes executor configuration",
                "description": "An administrator deletes an executor by removing the configuration entry identified by its uuid",
                "operationId": "adminDeletesExecutorConfiguration",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The configuration uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/config/executors": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches executor configuration list",
                "description": "An administrator fetches executor configuration list which contains all executor configurations",
                "operationId": "adminFetchesExecutorConfigurationList",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOfExecutorConfigurations"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/config/mapping/{mappingId}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches mapping configuration",
                "description": "An administrator fetches mapping configuration by its ID.",
                "operationId": "adminFetchesMappingConfiguration",
                "parameters": [
                    {
                        "name": "mappingId",
                        "in": "path",
                        "description": "The mapping Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MappingConfiguration"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin updates mapping configuration",
                "description": "An administrator changes mapping configuration. Mappings represents a generic mechanism to replace a given string, matched by configured regular expression pattern with a replacement string. Some of the mappings are used for adapter behaviour.",
                "operationId": "adminUpdatesMappingConfiguration",
                "parameters": [
                    {
                        "name": "mappingId",
                        "in": "path",
                        "description": "The mappingID, identifiying which mapping shall be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/MappingConfiguration"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/encryption/rotate": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin starts encryption rotation",
                "description": "An administrator starts encryption rotation.",
                "operationId": "adminStartsEncryptionRotation",
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/api-admin-encryption-rotate-638361826"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/encryption/status": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches encryption status",
                "description": "An administrator fetches encryption status from all domains where encryption is used.",
                "operationId": "adminFetchesEncryptionStatus",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EncryptionStatus"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/info/server": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches server runtime data",
                "description": "An administrator fetches the current SecHub server runtime data. Only administrators are allowed to do this because it contains the server version and knowing the exact server version makes it easier for penetration tester or attacker to attack the system.",
                "operationId": "adminFetchesServerRuntimeData",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServerRuntimeData"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/jobs/cancel/{jobUUID}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin cancels a job",
                "description": "Administrator does cancel a job by its Job UUID",
                "operationId": "adminCancelsJob",
                "parameters": [
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The job UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/jobs/restart-hard/{jobUUID}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin restarts a job (hard)",
                "description": "Admin restarts a job (hard)",
                "operationId": "adminRestartsJobHard",
                "parameters": [
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The job UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/jobs/restart/{jobUUID}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin restarts a job",
                "description": "Admin restarts a job",
                "operationId": "adminRestartsJob",
                "parameters": [
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The job UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/jobs/running": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin lists all running jobs",
                "description": "Admin lists all running jobs",
                "operationId": "adminListsAllRunningJobs",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOfRunningJobs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/project": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin creates a project",
                "description": "Admin creates a project",
                "operationId": "adminCreatesProject",
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "201"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/project/{projectId}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin shows project details",
                "description": "An administrator downloads a json file containing json with project details",
                "operationId": "adminShowsProjectDetails",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id to show details for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin changes project description",
                "description": "An administrator changes the project description",
                "operationId": "adminChangesProjectDescription",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id to change details for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/api-admin-encryption-rotate-638361826"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin deletes a project",
                "description": "Admin deletes a project",
                "operationId": "adminDeleteProject",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/project/{projectId}/accesslevel/{projectAccessLevel}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin changes project access level",
                "description": "Admin changes project access level",
                "operationId": "adminChangesProjectAccessLevel",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectAccessLevel",
                        "in": "path",
                        "description": "The new project access level. Accepted values: full(Full access to project, no restrictions), read_only(Users have only read access to existing data, No new jobs possible), none(Users have no access at all.)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/project/{projectId}/membership/{userId}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin assigns user to project",
                "description": "An administrator assigns an user to an existing sechub project.",
                "operationId": "adminAssignsUserToProject",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id of the user to assign to project",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin unassigns user from project",
                "description": "An administrator unassigns an user from a sechub project.",
                "operationId": "adminUnassignsUserFromProject",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id of the user to unassign from project",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/project/{projectId}/metadata": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Update project metadata",
                "description": "Update project metadata",
                "operationId": "updateProjectMetaData",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The id of the project for which metadata shall be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectMetaData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/project/{projectId}/owner/{userId}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin changes owner of a project",
                "description": "An administrator changes the owner of an existing sechub project.",
                "operationId": "adminChangesProjectOwner",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id of the user to assign to project as the owner",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/project/{projectId}/scan/logs": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin shows scan logs for project",
                "description": "An admin downloads a json file containing log for scans of project",
                "operationId": "adminShowsScanLogsForProject",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectScanLogs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/project/{projectId}/template/{templateId}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin assigns template to project",
                "description": "An administrator assigns a template to a project",
                "operationId": "adminAssignTemplateToProject",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The id of the template to assign to project",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin unassigns template from project",
                "description": "An administrator unassigns a template from a project",
                "operationId": "adminUnassignTemplateFromProject",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The id of the template to unassign from project",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/project/{projectId}/whitelist": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Update project whitelist",
                "description": "Update project whitelist",
                "operationId": "updateProjectWhitelist",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The id of the project for which whitelist shall be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectWhitelistUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/projects": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin lists all projects",
                "description": "An administrator downloads a json file containing all project ids",
                "operationId": "adminListsAllProjects",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOfProjects"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/scan/download/{jobUUID}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin downloads all details about a scan job",
                "description": "An administrator downloads a ZIP file containing full details of a scan. Main reason for this use case is for debugging when there are problems with security products. Another reason is for developers to adopt new security products easier.",
                "operationId": "adminDownloadsFullScanDataForJob",
                "parameters": [
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The job UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/zip": {
                                "schema": {
                                    "$ref": "#/components/schemas/FullScanDataZIP"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/scheduler/disable/job-processing": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin disables job processing in scheduler",
                "description": "An administrator disables scheduler job processing. This can be a preparation for system wide update - when scheduling is stoped, user can ask for new SecHub Jobs etc. But as long as scheduler is stopped nothing is executed - so JVMs/PODs can be updated in cluster",
                "operationId": "adminDisablesSchedulerJobProcessing",
                "responses": {
                    "202": {
                        "description": "202"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/scheduler/enable/job-processing": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin enables scheduler job processing",
                "description": "An administrator starts scheduler job processing. This can be a necessary step after a system wide update where processing of jobs was stoped before.",
                "operationId": "adminEnablesSchedulerJobProcessing",
                "responses": {
                    "202": {
                        "description": "202"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/scheduler/status/refresh": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin get scheduler status",
                "description": "An administrator wants to update information about scheduler status",
                "operationId": "adminTriggersRefreshOfSchedulerStatus",
                "responses": {
                    "202": {
                        "description": "202"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/signup/accept/{userId}": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin applies self registration",
                "description": "In this usecase the administrator will accept the self registration done by an user.",
                "operationId": "adminAcceptsSignup",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The userId of the signup which shall be accepted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "201"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/signup/{userId}": {
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin deletes user signup",
                "description": "In this usecase the administrator will not accept the self registration done by an user but delete the entry.",
                "operationId": "adminDeletesSignup",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The userId of the signup which shall be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/signups": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin lists open user signups",
                "description": "In this usecase the administrator will list the currently unapplied user self registrations/signups.",
                "operationId": "adminListsOpenUserSignups",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOfSignups"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/status": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin lists status information",
                "description": "An administrator fetches current known status information about sechub",
                "operationId": "adminListsStatusInformation",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatusInformation"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/template/{templateId}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches template",
                "description": "An administrator fetches template data by its id",
                "operationId": "adminFetchTemplate",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The (unique) template id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api-admin-template-templateId1476369005"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin creates or updates a template",
                "description": "An administrator creates or updates a template",
                "operationId": "adminCreateOrUpdateTemplate",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The (unique) template id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/Templates"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin deletes a template",
                "description": "An administrator deletes a template. Will also remove any association between projects and this template",
                "operationId": "adminDeleteTemplate",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "description": "The (unique) template id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/templates": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin fetches all template ids",
                "description": "An administrator fetches a list containing all templates ids",
                "operationId": "adminFetchAllTemplateIds",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api-admin-templates-753726831"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/user-by-email/{emailAddress}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin shows user details for email address",
                "description": "An administrator fetches user details for an email address.",
                "operationId": "adminShowsUserDetailsForEmailAddress",
                "parameters": [
                    {
                        "name": "emailAddress",
                        "in": "path",
                        "description": "The email address of user to show details for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "Basic authentication credentials",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/user/{userId}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin shows user details",
                "description": "An administrator downloads a json file containing json containing user details",
                "operationId": "adminShowsUserDetails",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id of user to show details for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetails"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin deletes a user",
                "description": "Admin deletes a user",
                "operationId": "adminDeletesUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The userId of the user who shall be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/user/{userId}/email/{emailAddress}": {
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin updates user email address",
                "description": "Admin updates user email address",
                "operationId": "adminUpdatesUserEmailAddress",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The userId of the user whose email address will be changed",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "emailAddress",
                        "in": "path",
                        "description": "The new email address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/user/{userId}/grant/superadmin": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin grants admin rights to user",
                "description": "An administrator grants admin rights to another user. So this user will become also an administrator.",
                "operationId": "adminGrantsAdminRightsToUser",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The userId of the user who becomes admin",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/user/{userId}/revoke/superadmin": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin revokes admin rights from an admin",
                "description": "An administrator revokes existing admin rights from another administrator.",
                "operationId": "adminRevokesAdminRightsFromAdmin",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The userId of the user who becomes admin",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/admin/users": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Admin lists all users",
                "description": "An administrator downloads a json file containing all user ids",
                "operationId": "adminListsAllUsers",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListOfUsers"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/anonymous/apitoken/{oneTimeToken}": {
            "get": {
                "tags": [
                    "anonymous"
                ],
                "summary": "User clicks link to get new api token",
                "description": "User clicks link to get new api token",
                "operationId": "userClicksLinkToGetNewAPIToken",
                "parameters": [
                    {
                        "name": "oneTimeToken",
                        "in": "path",
                        "description": "A one time token the user has got by a previous mail from sechub server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                }
            }
        },
        "/api/anonymous/check/alive": {
            "get": {
                "tags": [
                    "anonymous"
                ],
                "summary": "Check if the server is alive and running.",
                "description": "An anonymous user or system wants to know if the server is alive and running.",
                "operationId": "anonymousCheckAlive_get",
                "responses": {
                    "200": {
                        "description": "200"
                    }
                }
            },
            "head": {
                "tags": [
                    "anonymous"
                ],
                "summary": "Check if the server is alive and running.",
                "description": "An anonymous user or system wants to know if the server is alive and running.",
                "operationId": "anonymousCheckAlive_head",
                "responses": {
                    "200": {
                        "description": "200"
                    }
                }
            }
        },
        "/api/anonymous/refresh/apitoken/{emailAddress}": {
            "post": {
                "tags": [
                    "anonymous"
                ],
                "summary": "User requests new API token",
                "description": "User requests new API token",
                "operationId": "userRequestsNewApiToken",
                "parameters": [
                    {
                        "name": "emailAddress",
                        "in": "path",
                        "description": "Email address for user where api token shall be refreshed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                }
            }
        },
        "/api/anonymous/signup": {
            "post": {
                "tags": [
                    "anonymous"
                ],
                "summary": "User self registration",
                "description": "User self registration",
                "operationId": "userSignup",
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200"
                    }
                }
            }
        },
        "/api/management/jobs/cancel/{jobUUID}": {
            "post": {
                "tags": [
                    "management"
                ],
                "summary": "User cancels a job",
                "description": "User does cancel a job by its Job UUID",
                "operationId": "userCancelsJob",
                "parameters": [
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The job UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "204"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/project/{projectId}/false-positive/project-data/{id}": {
            "delete": {
                "tags": [
                    "project"
                ],
                "summary": "User unmarks existing false positive project data definitons",
                "description": "User unmarks existing false positive project data definitons",
                "operationId": "userUnmarksFalsePositivesProjectData",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Identifier which is used to remove the respective false positive entry.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "204"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/project/{projectId}/false-positive/{jobUUID}/{findingId}": {
            "delete": {
                "tags": [
                    "project"
                ],
                "summary": "User unmarks existing false positive definitons",
                "description": "User unmarks existing false positive definitons",
                "operationId": "userUnmarksFalsePositives",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "Job uuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "findingId",
                        "in": "path",
                        "description": "Finding id - in combination with job UUID this defines the false positive to remove",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/project/{projectId}/false-positives": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "User fetches false positive configuration of project",
                "description": "User fetches false positive configuration of project",
                "operationId": "userFetchesFalsePositiveConfigurationOfProject",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FalsePositives"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project"
                ],
                "summary": "User marks false positives",
                "description": "User marks false positives",
                "operationId": "userMarksFalsePositives",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The projectId of the project where users adds false positives for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/FalsePositives"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/project/{projectId}/job": {
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "User creates a new sechub job",
                "description": "User creates a new sechub job",
                "operationId": "userCreatesNewJob_",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The unique id of the project id where a new sechub job shall be created",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/ScanJob"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobId"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/project/{projectId}/job/{jobUUID}": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "User checks sechub job state",
                "description": "User checks sechub job state",
                "operationId": "userChecksJobStatus",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The id of the project where sechub job was started for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The SecHub jobUUID. During the job creation this unique job identifier is automatically generated by SecHub.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobStatus"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/project/{projectId}/job/{jobUUID}/approve": {
            "put": {
                "tags": [
                    "project"
                ],
                "summary": "User approves sechub job",
                "description": "User approves sechub job",
                "operationId": "userApprovesJob",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The id of the project where sechub job shall be approved",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The SecHub jobUUID. During the job creation this unique job identifier is automatically generated by SecHub.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                }
            }
        },
        "/api/project/{projectId}/job/{jobUUID}/binaries": {
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "User uploads binaries",
                "description": "User uploads binaries",
                "operationId": "userUploadsBinaries",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The id of the project for which the binaries are uploaded for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The SecHub jobUUID. During the job creation this unique job identifier is automatically generated by SecHub.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-file-size",
                        "in": "header",
                        "description": "The file size of the tar-archive to upload in bytes. Needs to be a positive integer value.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                }
            }
        },
        "/api/project/{projectId}/job/{jobUUID}/sourcecode": {
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "User uploads source code",
                "description": "User uploads source code",
                "operationId": "userUploadsSourceCode",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The id of the project where sourcecode shall be uploaded for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The SecHub jobUUID. During the job creation this unique job identifier is automatically generated by SecHub.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "checkSum",
                        "in": "query",
                        "description": "A sha256 checksum for file upload validation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200"
                    }
                }
            }
        },
        "/api/project/{projectId}/jobs": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "User lists jobs for project",
                "description": "User lists jobs for project",
                "operationId": "userListsJobsforProject",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The id of the project where job information shall be fetched for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "The wanted (maximum) size for the result set. When not defined, the default will be 1.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The wanted page number. When not defined, the default will be 0.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "metadata.labels.*",
                        "in": "query",
                        "description": "An optional dynamic query parameter to filter jobs by labels. The syntax is 'metadata.labels.${labelKey}=${labelValue}'.\n\nIt is possible to query for multiple labels (up to 10 ).\nThe filter works as an AND combination: Only jobs having all wanted label key value combinations are returned.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "withMetaData",
                        "in": "query",
                        "description": "An optional parameter to define if meta data shall be fetched as well. When not defined, the default will be false.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectJobList"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/project/{projectId}/mockdata": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "User retrieves mock data configuration for project",
                "description": "User retrieves mock data configuration for project",
                "operationId": "userRetrievesProjectMockdata",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MockDataConfiguration"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "project"
                ],
                "summary": "User defines mock data configuration for project",
                "description": "User defines mock data configuration for project",
                "operationId": "userDefinesProjectMockdata",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/MockDataConfiguration"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "200"
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/project/{projectId}/report/spdx/{jobUUID}": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "User downloads job report in SPDX format",
                "description": "User downloads job report in SPDX format",
                "operationId": "userDownloadsSpdxJobReport_json",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The job UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecHubReport"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/project/{projectId}/report/{jobUUID}": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "User downloads sechub job report",
                "description": "User downloads sechub job report",
                "operationId": "userDownloadsJobReport_",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "path",
                        "description": "The project Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "jobUUID",
                        "in": "path",
                        "description": "The job UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "text/html;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecHubReport"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SecHubReport"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        },
        "/api/projects": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "get assigned project data",
                "description": "get assigned project data",
                "operationId": "getAssignedProjectDataList",
                "responses": {
                    "200": {
                        "description": "200",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api-projects-387937430"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "basic": [
                            
                        ]
                    }
                ]
            }
        }
    },
    "servers": [
        {
            "url": "https://localhost"
        }
    ],
    "tags": [
        {
            "name": "apiVersion",
            "description": "1.0"
        }
    ]
}