/*
 * SecHub API
 * SecHub API description
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.mercedesbenz.sechub.api.internal.gen.model;

import java.io.Serializable;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * OpenApiProject
 */
@JsonPropertyOrder({ OpenApiProject.JSON_PROPERTY_OWNER, OpenApiProject.JSON_PROPERTY_META_DATA, OpenApiProject.JSON_PROPERTY_API_VERSION,
        OpenApiProject.JSON_PROPERTY_NAME, OpenApiProject.JSON_PROPERTY_DESCRIPTION, OpenApiProject.JSON_PROPERTY_WHITE_LIST })

public class OpenApiProject implements Serializable {
    private static final long serialVersionUID = 1L;

    public static final String JSON_PROPERTY_OWNER = "owner";
    private String owner;

    public static final String JSON_PROPERTY_META_DATA = "metaData";
    private OpenApiProjectMetaData metaData;

    public static final String JSON_PROPERTY_API_VERSION = "apiVersion";
    private String apiVersion;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_DESCRIPTION = "description";
    private String description;

    public static final String JSON_PROPERTY_WHITE_LIST = "whiteList";
    private OpenApiProjectWhiteList whiteList;

    public OpenApiProject() {
    }

    public OpenApiProject owner(String owner) {
        this.owner = owner;
        return this;
    }

    /**
     * Username of the owner of this project. An owner is the person in charge
     *
     * @return owner
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_OWNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getOwner() {
        return owner;
    }

    @JsonProperty(JSON_PROPERTY_OWNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOwner(String owner) {
        this.owner = owner;
    }

    public OpenApiProject metaData(OpenApiProjectMetaData metaData) {
        this.metaData = metaData;
        return this;
    }

    /**
     * Get metaData
     *
     * @return metaData
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_META_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OpenApiProjectMetaData getMetaData() {
        return metaData;
    }

    @JsonProperty(JSON_PROPERTY_META_DATA)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMetaData(OpenApiProjectMetaData metaData) {
        this.metaData = metaData;
    }

    public OpenApiProject apiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /**
     * The api version, currently only 1.0 is supported
     *
     * @return apiVersion
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_API_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getApiVersion() {
        return apiVersion;
    }

    @JsonProperty(JSON_PROPERTY_API_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
    }

    public OpenApiProject name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Name of the project to create. Is also used as a unique ID!
     *
     * @return name
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public OpenApiProject description(String description) {
        this.description = description;
        return this;
    }

    /**
     * The description of the project.
     *
     * @return description
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getDescription() {
        return description;
    }

    @JsonProperty(JSON_PROPERTY_DESCRIPTION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setDescription(String description) {
        this.description = description;
    }

    public OpenApiProject whiteList(OpenApiProjectWhiteList whiteList) {
        this.whiteList = whiteList;
        return this;
    }

    /**
     * Get whiteList
     *
     * @return whiteList
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_WHITE_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OpenApiProjectWhiteList getWhiteList() {
        return whiteList;
    }

    @JsonProperty(JSON_PROPERTY_WHITE_LIST)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setWhiteList(OpenApiProjectWhiteList whiteList) {
        this.whiteList = whiteList;
    }

    /**
     * Return true if this Project object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OpenApiProject project = (OpenApiProject) o;
        return Objects.equals(owner, project.owner) && Objects.equals(metaData, project.metaData) && Objects.equals(apiVersion, project.apiVersion)
                && Objects.equals(name, project.name) && Objects.equals(description, project.description) && Objects.equals(whiteList, project.whiteList);
    }

    @Override
    public int hashCode() {
        return Objects.hash(owner, metaData, apiVersion, name, description, whiteList);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OpenApiProject {\n");
        sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
        sb.append("    metaData: ").append(toIndentedString(metaData)).append("\n");
        sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    whiteList: ").append(toIndentedString(whiteList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `owner` to the URL query string
        if (getOwner() != null) {
            joiner.add(String.format("%sowner%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getOwner()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `metaData` to the URL query string
        if (getMetaData() != null) {
            joiner.add(getMetaData().toUrlQueryString(prefix + "metaData" + suffix));
        }

        // add `apiVersion` to the URL query string
        if (getApiVersion() != null) {
            joiner.add(String.format("%sapiVersion%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getApiVersion()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(String.format("%sname%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `description` to the URL query string
        if (getDescription() != null) {
            joiner.add(String.format("%sdescription%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getDescription()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `whiteList` to the URL query string
        if (getWhiteList() != null) {
            joiner.add(getWhiteList().toUrlQueryString(prefix + "whiteList" + suffix));
        }

        return joiner.toString();
    }
}
