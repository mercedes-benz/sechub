/*
 * SecHub API
 * SecHub API description
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.mercedesbenz.sechub.api.internal.gen.model;

import java.io.Serializable;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * OpenApiProjectJobListContentInnerMetaData
 */
@JsonPropertyOrder({ OpenApiProjectJobListContentInnerMetaData.JSON_PROPERTY_STAR })

public class OpenApiProjectJobListContentInnerMetaData implements Serializable {
    private static final long serialVersionUID = 1L;

    public static final String JSON_PROPERTY_STAR = "*";
    private Object star;

    public OpenApiProjectJobListContentInnerMetaData() {
    }

    public OpenApiProjectJobListContentInnerMetaData star(Object star) {
        this.star = star;
        return this;
    }

    /**
     * Meta data of job - but only contained in result, when query parameter
     * &#x60;withMetaData&#x60; is defined as &#39;true&#39;.
     *
     * @return star
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_STAR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Object getStar() {
        return star;
    }

    @JsonProperty(JSON_PROPERTY_STAR)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStar(Object star) {
        this.star = star;
    }

    /**
     * Return true if this ProjectJobList_content_inner_metaData object is equal to
     * o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OpenApiProjectJobListContentInnerMetaData projectJobListContentInnerMetaData = (OpenApiProjectJobListContentInnerMetaData) o;
        return Objects.equals(star, projectJobListContentInnerMetaData.star);
    }

    @Override
    public int hashCode() {
        return Objects.hash(star);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OpenApiProjectJobListContentInnerMetaData {\n");
        sb.append("    star: ").append(toIndentedString(star)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `*` to the URL query string
        if (getStar() != null) {
            joiner.add(
                    String.format("%s*%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStar()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
