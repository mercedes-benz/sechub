/*
 * SecHub API
 * SecHub API description
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.mercedesbenz.sechub.api.internal.gen.model;

import java.io.Serializable;
import java.math.BigDecimal;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * Meta data for this false positive
 */
@JsonPropertyOrder({ OpenApiFalsePositivesFalsePositivesInnerMetaData.JSON_PROPERTY_SEVERITY,
        OpenApiFalsePositivesFalsePositivesInnerMetaData.JSON_PROPERTY_CODE, OpenApiFalsePositivesFalsePositivesInnerMetaData.JSON_PROPERTY_OWASP,
        OpenApiFalsePositivesFalsePositivesInnerMetaData.JSON_PROPERTY_CWE_ID, OpenApiFalsePositivesFalsePositivesInnerMetaData.JSON_PROPERTY_CVE_ID,
        OpenApiFalsePositivesFalsePositivesInnerMetaData.JSON_PROPERTY_NAME, OpenApiFalsePositivesFalsePositivesInnerMetaData.JSON_PROPERTY_SCAN_TYPE })

public class OpenApiFalsePositivesFalsePositivesInnerMetaData implements Serializable {
    private static final long serialVersionUID = 1L;

    public static final String JSON_PROPERTY_SEVERITY = "severity";
    private String severity;

    public static final String JSON_PROPERTY_CODE = "code";
    private OpenApiFalsePositivesFalsePositivesInnerMetaDataCode code;

    public static final String JSON_PROPERTY_OWASP = "owasp";
    private String owasp;

    public static final String JSON_PROPERTY_CWE_ID = "cweId";
    private BigDecimal cweId;

    public static final String JSON_PROPERTY_CVE_ID = "cveId";
    private String cveId;

    public static final String JSON_PROPERTY_NAME = "name";
    private String name;

    public static final String JSON_PROPERTY_SCAN_TYPE = "scanType";
    private String scanType;

    public OpenApiFalsePositivesFalsePositivesInnerMetaData() {
    }

    public OpenApiFalsePositivesFalsePositivesInnerMetaData severity(String severity) {
        this.severity = severity;
        return this;
    }

    /**
     * Severity of origin report entry marked as false positive
     *
     * @return severity
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SEVERITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getSeverity() {
        return severity;
    }

    @JsonProperty(JSON_PROPERTY_SEVERITY)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSeverity(String severity) {
        this.severity = severity;
    }

    public OpenApiFalsePositivesFalsePositivesInnerMetaData code(OpenApiFalsePositivesFalsePositivesInnerMetaDataCode code) {
        this.code = code;
        return this;
    }

    /**
     * Get code
     *
     * @return code
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public OpenApiFalsePositivesFalsePositivesInnerMetaDataCode getCode() {
        return code;
    }

    @JsonProperty(JSON_PROPERTY_CODE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCode(OpenApiFalsePositivesFalsePositivesInnerMetaDataCode code) {
        this.code = code;
    }

    public OpenApiFalsePositivesFalsePositivesInnerMetaData owasp(String owasp) {
        this.owasp = owasp;
        return this;
    }

    /**
     * OWASP At least this field must be set for web scans when no cwe identifier is
     * defined.
     *
     * @return owasp
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_OWASP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getOwasp() {
        return owasp;
    }

    @JsonProperty(JSON_PROPERTY_OWASP)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOwasp(String owasp) {
        this.owasp = owasp;
    }

    public OpenApiFalsePositivesFalsePositivesInnerMetaData cweId(BigDecimal cweId) {
        this.cweId = cweId;
        return this;
    }

    /**
     * CWE (common weakness enumeration). For code scans this is always set.
     *
     * @return cweId
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CWE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public BigDecimal getCweId() {
        return cweId;
    }

    @JsonProperty(JSON_PROPERTY_CWE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCweId(BigDecimal cweId) {
        this.cweId = cweId;
    }

    public OpenApiFalsePositivesFalsePositivesInnerMetaData cveId(String cveId) {
        this.cveId = cveId;
        return this;
    }

    /**
     * CVE (common vulnerability and exposures). For infra scans this is always set.
     *
     * @return cveId
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CVE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCveId() {
        return cveId;
    }

    @JsonProperty(JSON_PROPERTY_CVE_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCveId(String cveId) {
        this.cveId = cveId;
    }

    public OpenApiFalsePositivesFalsePositivesInnerMetaData name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Name of origin finding marked as false positive
     *
     * @return name
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getName() {
        return name;
    }

    @JsonProperty(JSON_PROPERTY_NAME)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setName(String name) {
        this.name = name;
    }

    public OpenApiFalsePositivesFalsePositivesInnerMetaData scanType(String scanType) {
        this.scanType = scanType;
        return this;
    }

    /**
     * Scan type - e.g. codeScan
     *
     * @return scanType
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SCAN_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getScanType() {
        return scanType;
    }

    @JsonProperty(JSON_PROPERTY_SCAN_TYPE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setScanType(String scanType) {
        this.scanType = scanType;
    }

    /**
     * Return true if this FalsePositives_falsePositives_inner_metaData object is
     * equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OpenApiFalsePositivesFalsePositivesInnerMetaData falsePositivesFalsePositivesInnerMetaData = (OpenApiFalsePositivesFalsePositivesInnerMetaData) o;
        return Objects.equals(severity, falsePositivesFalsePositivesInnerMetaData.severity)
                && Objects.equals(code, falsePositivesFalsePositivesInnerMetaData.code)
                && Objects.equals(owasp, falsePositivesFalsePositivesInnerMetaData.owasp)
                && Objects.equals(cweId, falsePositivesFalsePositivesInnerMetaData.cweId)
                && Objects.equals(cveId, falsePositivesFalsePositivesInnerMetaData.cveId)
                && Objects.equals(name, falsePositivesFalsePositivesInnerMetaData.name)
                && Objects.equals(scanType, falsePositivesFalsePositivesInnerMetaData.scanType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(severity, code, owasp, cweId, cveId, name, scanType);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OpenApiFalsePositivesFalsePositivesInnerMetaData {\n");
        sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
        sb.append("    code: ").append(toIndentedString(code)).append("\n");
        sb.append("    owasp: ").append(toIndentedString(owasp)).append("\n");
        sb.append("    cweId: ").append(toIndentedString(cweId)).append("\n");
        sb.append("    cveId: ").append(toIndentedString(cveId)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    scanType: ").append(toIndentedString(scanType)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `severity` to the URL query string
        if (getSeverity() != null) {
            joiner.add(String.format("%sseverity%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getSeverity()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `code` to the URL query string
        if (getCode() != null) {
            joiner.add(getCode().toUrlQueryString(prefix + "code" + suffix));
        }

        // add `owasp` to the URL query string
        if (getOwasp() != null) {
            joiner.add(String.format("%sowasp%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getOwasp()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `cweId` to the URL query string
        if (getCweId() != null) {
            joiner.add(String.format("%scweId%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getCweId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `cveId` to the URL query string
        if (getCveId() != null) {
            joiner.add(String.format("%scveId%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getCveId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `name` to the URL query string
        if (getName() != null) {
            joiner.add(String.format("%sname%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `scanType` to the URL query string
        if (getScanType() != null) {
            joiner.add(String.format("%sscanType%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getScanType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
