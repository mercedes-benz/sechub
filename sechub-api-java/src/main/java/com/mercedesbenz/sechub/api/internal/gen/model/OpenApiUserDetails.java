/*
 * SecHub API
 * SecHub API description
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.mercedesbenz.sechub.api.internal.gen.model;

import java.io.Serializable;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * OpenApiUserDetails
 */
@JsonPropertyOrder({ OpenApiUserDetails.JSON_PROPERTY_PROJECTS, OpenApiUserDetails.JSON_PROPERTY_SUPER_ADMIN, OpenApiUserDetails.JSON_PROPERTY_USER_ID,
        OpenApiUserDetails.JSON_PROPERTY_EMAIL, OpenApiUserDetails.JSON_PROPERTY_OWNED_PROJECTS })

public class OpenApiUserDetails implements Serializable {
    private static final long serialVersionUID = 1L;

    public static final String JSON_PROPERTY_PROJECTS = "projects";
    private List<String> projects;

    public static final String JSON_PROPERTY_SUPER_ADMIN = "superAdmin";
    private Boolean superAdmin;

    public static final String JSON_PROPERTY_USER_ID = "userId";
    private String userId;

    public static final String JSON_PROPERTY_EMAIL = "email";
    private String email;

    public static final String JSON_PROPERTY_OWNED_PROJECTS = "ownedProjects";
    private List<String> ownedProjects;

    public OpenApiUserDetails() {
    }

    public OpenApiUserDetails projects(List<String> projects) {
        this.projects = projects;
        return this;
    }

    public OpenApiUserDetails addProjectsItem(String projectsItem) {
        if (projects == null) {
            projects = new ArrayList<>();
        }
        projects.add(projectsItem);
        return this;
    }

    /**
     * The projects the user has access to
     *
     * @return projects
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_PROJECTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getProjects() {
        return projects;
    }

    @JsonProperty(JSON_PROPERTY_PROJECTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setProjects(List<String> projects) {
        this.projects = projects;
    }

    public OpenApiUserDetails superAdmin(Boolean superAdmin) {
        this.superAdmin = superAdmin;
        return this;
    }

    /**
     * True, when this user is a super administrator
     *
     * @return superAdmin
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public Boolean getSuperAdmin() {
        return superAdmin;
    }

    @JsonProperty(JSON_PROPERTY_SUPER_ADMIN)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setSuperAdmin(Boolean superAdmin) {
        this.superAdmin = superAdmin;
    }

    public OpenApiUserDetails userId(String userId) {
        this.userId = userId;
        return this;
    }

    /**
     * The name of the user
     *
     * @return userId
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_USER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getUserId() {
        return userId;
    }

    @JsonProperty(JSON_PROPERTY_USER_ID)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setUserId(String userId) {
        this.userId = userId;
    }

    public OpenApiUserDetails email(String email) {
        this.email = email;
        return this;
    }

    /**
     * The mail address of the user
     *
     * @return email
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_EMAIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getEmail() {
        return email;
    }

    @JsonProperty(JSON_PROPERTY_EMAIL)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEmail(String email) {
        this.email = email;
    }

    public OpenApiUserDetails ownedProjects(List<String> ownedProjects) {
        this.ownedProjects = ownedProjects;
        return this;
    }

    public OpenApiUserDetails addOwnedProjectsItem(String ownedProjectsItem) {
        if (ownedProjects == null) {
            ownedProjects = new ArrayList<>();
        }
        ownedProjects.add(ownedProjectsItem);
        return this;
    }

    /**
     * The projects the user is owner of
     *
     * @return ownedProjects
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_OWNED_PROJECTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public List<String> getOwnedProjects() {
        return ownedProjects;
    }

    @JsonProperty(JSON_PROPERTY_OWNED_PROJECTS)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOwnedProjects(List<String> ownedProjects) {
        this.ownedProjects = ownedProjects;
    }

    /**
     * Return true if this UserDetails object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OpenApiUserDetails userDetails = (OpenApiUserDetails) o;
        return Objects.equals(projects, userDetails.projects) && Objects.equals(superAdmin, userDetails.superAdmin)
                && Objects.equals(userId, userDetails.userId) && Objects.equals(email, userDetails.email)
                && Objects.equals(ownedProjects, userDetails.ownedProjects);
    }

    @Override
    public int hashCode() {
        return Objects.hash(projects, superAdmin, userId, email, ownedProjects);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OpenApiUserDetails {\n");
        sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
        sb.append("    superAdmin: ").append(toIndentedString(superAdmin)).append("\n");
        sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
        sb.append("    email: ").append(toIndentedString(email)).append("\n");
        sb.append("    ownedProjects: ").append(toIndentedString(ownedProjects)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `projects` to the URL query string
        if (getProjects() != null) {
            for (int i = 0; i < getProjects().size(); i++) {
                joiner.add(String.format("%sprojects%s%s=%s", prefix, suffix,
                        "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                        URLEncoder.encode(String.valueOf(getProjects().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
            }
        }

        // add `superAdmin` to the URL query string
        if (getSuperAdmin() != null) {
            joiner.add(String.format("%ssuperAdmin%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getSuperAdmin()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `userId` to the URL query string
        if (getUserId() != null) {
            joiner.add(String.format("%suserId%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getUserId()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `email` to the URL query string
        if (getEmail() != null) {
            joiner.add(String.format("%semail%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getEmail()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `ownedProjects` to the URL query string
        if (getOwnedProjects() != null) {
            for (int i = 0; i < getOwnedProjects().size(); i++) {
                joiner.add(String.format("%sownedProjects%s%s=%s", prefix, suffix,
                        "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                        URLEncoder.encode(String.valueOf(getOwnedProjects().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
            }
        }

        return joiner.toString();
    }
}
