/*
 * SecHub API
 * SecHub API description
 *
 * The version of the OpenAPI document: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.mercedesbenz.sechub.api.internal.gen.model;

import java.io.Serializable;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Objects;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * OpenApiJobStatus
 */
@JsonPropertyOrder({ OpenApiJobStatus.JSON_PROPERTY_RESULT, OpenApiJobStatus.JSON_PROPERTY_OWNER, OpenApiJobStatus.JSON_PROPERTY_JOB_U_U_I_D,
        OpenApiJobStatus.JSON_PROPERTY_CREATED, OpenApiJobStatus.JSON_PROPERTY_ENDED, OpenApiJobStatus.JSON_PROPERTY_STARTED,
        OpenApiJobStatus.JSON_PROPERTY_STATE, OpenApiJobStatus.JSON_PROPERTY_TRAFFIC_LIGHT })

public class OpenApiJobStatus implements Serializable {
    private static final long serialVersionUID = 1L;

    public static final String JSON_PROPERTY_RESULT = "result";
    private String result;

    public static final String JSON_PROPERTY_OWNER = "owner";
    private String owner;

    public static final String JSON_PROPERTY_JOB_U_U_I_D = "jobUUID";
    private String jobUUID;

    public static final String JSON_PROPERTY_CREATED = "created";
    private String created;

    public static final String JSON_PROPERTY_ENDED = "ended";
    private String ended;

    public static final String JSON_PROPERTY_STARTED = "started";
    private String started;

    public static final String JSON_PROPERTY_STATE = "state";
    private String state;

    public static final String JSON_PROPERTY_TRAFFIC_LIGHT = "trafficLight";
    private String trafficLight;

    public OpenApiJobStatus() {
    }

    public OpenApiJobStatus result(String result) {
        this.result = result;
        return this;
    }

    /**
     * Result of job
     *
     * @return result
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_RESULT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getResult() {
        return result;
    }

    @JsonProperty(JSON_PROPERTY_RESULT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setResult(String result) {
        this.result = result;
    }

    public OpenApiJobStatus owner(String owner) {
        this.owner = owner;
        return this;
    }

    /**
     * Owner / initiator of job
     *
     * @return owner
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_OWNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getOwner() {
        return owner;
    }

    @JsonProperty(JSON_PROPERTY_OWNER)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setOwner(String owner) {
        this.owner = owner;
    }

    public OpenApiJobStatus jobUUID(String jobUUID) {
        this.jobUUID = jobUUID;
        return this;
    }

    /**
     * The job uuid
     *
     * @return jobUUID
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_JOB_U_U_I_D)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getJobUUID() {
        return jobUUID;
    }

    @JsonProperty(JSON_PROPERTY_JOB_U_U_I_D)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setJobUUID(String jobUUID) {
        this.jobUUID = jobUUID;
    }

    public OpenApiJobStatus created(String created) {
        this.created = created;
        return this;
    }

    /**
     * Creation timestamp of job
     *
     * @return created
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getCreated() {
        return created;
    }

    @JsonProperty(JSON_PROPERTY_CREATED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setCreated(String created) {
        this.created = created;
    }

    public OpenApiJobStatus ended(String ended) {
        this.ended = ended;
        return this;
    }

    /**
     * End timestamp of job execution
     *
     * @return ended
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_ENDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getEnded() {
        return ended;
    }

    @JsonProperty(JSON_PROPERTY_ENDED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setEnded(String ended) {
        this.ended = ended;
    }

    public OpenApiJobStatus started(String started) {
        this.started = started;
        return this;
    }

    /**
     * Start timestamp of job execution
     *
     * @return started
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_STARTED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getStarted() {
        return started;
    }

    @JsonProperty(JSON_PROPERTY_STARTED)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setStarted(String started) {
        this.started = started;
    }

    public OpenApiJobStatus state(String state) {
        this.state = state;
        return this;
    }

    /**
     * State of job
     *
     * @return state
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_STATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getState() {
        return state;
    }

    @JsonProperty(JSON_PROPERTY_STATE)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setState(String state) {
        this.state = state;
    }

    public OpenApiJobStatus trafficLight(String trafficLight) {
        this.trafficLight = trafficLight;
        return this;
    }

    /**
     * Trafficlight of job - but only available when job has been done. Possible
     * states are GREEN, YELLOW, RED, OFF
     *
     * @return trafficLight
     **/
    @javax.annotation.Nullable
    @JsonProperty(JSON_PROPERTY_TRAFFIC_LIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

    public String getTrafficLight() {
        return trafficLight;
    }

    @JsonProperty(JSON_PROPERTY_TRAFFIC_LIGHT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setTrafficLight(String trafficLight) {
        this.trafficLight = trafficLight;
    }

    /**
     * Return true if this JobStatus object is equal to o.
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OpenApiJobStatus jobStatus = (OpenApiJobStatus) o;
        return Objects.equals(result, jobStatus.result) && Objects.equals(owner, jobStatus.owner) && Objects.equals(jobUUID, jobStatus.jobUUID)
                && Objects.equals(created, jobStatus.created) && Objects.equals(ended, jobStatus.ended) && Objects.equals(started, jobStatus.started)
                && Objects.equals(state, jobStatus.state) && Objects.equals(trafficLight, jobStatus.trafficLight);
    }

    @Override
    public int hashCode() {
        return Objects.hash(result, owner, jobUUID, created, ended, started, state, trafficLight);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OpenApiJobStatus {\n");
        sb.append("    result: ").append(toIndentedString(result)).append("\n");
        sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
        sb.append("    jobUUID: ").append(toIndentedString(jobUUID)).append("\n");
        sb.append("    created: ").append(toIndentedString(created)).append("\n");
        sb.append("    ended: ").append(toIndentedString(ended)).append("\n");
        sb.append("    started: ").append(toIndentedString(started)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    trafficLight: ").append(toIndentedString(trafficLight)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    /**
     * Convert the instance into URL query string.
     *
     * @return URL query string
     */
    public String toUrlQueryString() {
        return toUrlQueryString(null);
    }

    /**
     * Convert the instance into URL query string.
     *
     * @param prefix prefix of the query string
     * @return URL query string
     */
    public String toUrlQueryString(String prefix) {
        String suffix = "";
        String containerSuffix = "";
        String containerPrefix = "";
        if (prefix == null) {
            // style=form, explode=true, e.g. /pet?name=cat&type=manx
            prefix = "";
        } else {
            // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
            prefix = prefix + "[";
            suffix = "]";
            containerSuffix = "]";
            containerPrefix = "[";
        }

        StringJoiner joiner = new StringJoiner("&");

        // add `result` to the URL query string
        if (getResult() != null) {
            joiner.add(String.format("%sresult%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getResult()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `owner` to the URL query string
        if (getOwner() != null) {
            joiner.add(String.format("%sowner%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getOwner()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `jobUUID` to the URL query string
        if (getJobUUID() != null) {
            joiner.add(String.format("%sjobUUID%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getJobUUID()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `created` to the URL query string
        if (getCreated() != null) {
            joiner.add(String.format("%screated%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getCreated()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `ended` to the URL query string
        if (getEnded() != null) {
            joiner.add(String.format("%sended%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getEnded()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `started` to the URL query string
        if (getStarted() != null) {
            joiner.add(String.format("%sstarted%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getStarted()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `state` to the URL query string
        if (getState() != null) {
            joiner.add(String.format("%sstate%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getState()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        // add `trafficLight` to the URL query string
        if (getTrafficLight() != null) {
            joiner.add(String.format("%strafficLight%s=%s", prefix, suffix,
                    URLEncoder.encode(String.valueOf(getTrafficLight()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }

        return joiner.toString();
    }
}
